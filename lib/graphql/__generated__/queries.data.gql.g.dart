// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'queries.data.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

Serializer<GuserData> _$guserDataSerializer = new _$GuserDataSerializer();
Serializer<GuserData_user__base> _$guserDataUserBaseSerializer =
    new _$GuserData_user__baseSerializer();
Serializer<GuserData_user__asRegistered> _$guserDataUserAsRegisteredSerializer =
    new _$GuserData_user__asRegisteredSerializer();
Serializer<GuserData_user__asRegistered_user>
    _$guserDataUserAsRegisteredUserSerializer =
    new _$GuserData_user__asRegistered_userSerializer();
Serializer<GuserData_user__asUnregistered>
    _$guserDataUserAsUnregisteredSerializer =
    new _$GuserData_user__asUnregisteredSerializer();
Serializer<GgroupsData> _$ggroupsDataSerializer = new _$GgroupsDataSerializer();
Serializer<GgroupsData_groups> _$ggroupsDataGroupsSerializer =
    new _$GgroupsData_groupsSerializer();
Serializer<GgroupsData_groups_creator> _$ggroupsDataGroupsCreatorSerializer =
    new _$GgroupsData_groups_creatorSerializer();
Serializer<GgroupsData_groups_members> _$ggroupsDataGroupsMembersSerializer =
    new _$GgroupsData_groups_membersSerializer();
Serializer<GgroupsData_groups_members_member>
    _$ggroupsDataGroupsMembersMemberSerializer =
    new _$GgroupsData_groups_members_memberSerializer();
Serializer<Ginteracted_usersData> _$ginteractedUsersDataSerializer =
    new _$Ginteracted_usersDataSerializer();
Serializer<Ginteracted_usersData_interactedUsers>
    _$ginteractedUsersDataInteractedUsersSerializer =
    new _$Ginteracted_usersData_interactedUsersSerializer();
Serializer<Ginteracted_usersData_interactedUsers_owes>
    _$ginteractedUsersDataInteractedUsersOwesSerializer =
    new _$Ginteracted_usersData_interactedUsers_owesSerializer();
Serializer<GgroupData> _$ggroupDataSerializer = new _$GgroupDataSerializer();
Serializer<GgroupData_group> _$ggroupDataGroupSerializer =
    new _$GgroupData_groupSerializer();
Serializer<GgroupData_group_expenses> _$ggroupDataGroupExpensesSerializer =
    new _$GgroupData_group_expensesSerializer();
Serializer<GgroupData_group_expenses_creator>
    _$ggroupDataGroupExpensesCreatorSerializer =
    new _$GgroupData_group_expenses_creatorSerializer();
Serializer<GgroupData_group_expenses_splits>
    _$ggroupDataGroupExpensesSplitsSerializer =
    new _$GgroupData_group_expenses_splitsSerializer();
Serializer<GgroupData_group_expenses_splits_fromUser>
    _$ggroupDataGroupExpensesSplitsFromUserSerializer =
    new _$GgroupData_group_expenses_splits_fromUserSerializer();
Serializer<GgroupData_group_expenses_splits_toUser>
    _$ggroupDataGroupExpensesSplitsToUserSerializer =
    new _$GgroupData_group_expenses_splits_toUserSerializer();
Serializer<GgroupData_group_creator> _$ggroupDataGroupCreatorSerializer =
    new _$GgroupData_group_creatorSerializer();
Serializer<GgroupData_group_members> _$ggroupDataGroupMembersSerializer =
    new _$GgroupData_group_membersSerializer();
Serializer<GgroupData_group_members_member>
    _$ggroupDataGroupMembersMemberSerializer =
    new _$GgroupData_group_members_memberSerializer();
Serializer<GsignupData> _$gsignupDataSerializer = new _$GsignupDataSerializer();
Serializer<GsignupData_signup> _$gsignupDataSignupSerializer =
    new _$GsignupData_signupSerializer();
Serializer<GsignupData_signup_user> _$gsignupDataSignupUserSerializer =
    new _$GsignupData_signup_userSerializer();
Serializer<GsignupData_signup_tokens> _$gsignupDataSignupTokensSerializer =
    new _$GsignupData_signup_tokensSerializer();
Serializer<Gcreate_groupData> _$gcreateGroupDataSerializer =
    new _$Gcreate_groupDataSerializer();
Serializer<Gcreate_groupData_createGroup>
    _$gcreateGroupDataCreateGroupSerializer =
    new _$Gcreate_groupData_createGroupSerializer();
Serializer<Gcreate_groupData_createGroup_creator>
    _$gcreateGroupDataCreateGroupCreatorSerializer =
    new _$Gcreate_groupData_createGroup_creatorSerializer();
Serializer<Gcreate_groupData_createGroup_members>
    _$gcreateGroupDataCreateGroupMembersSerializer =
    new _$Gcreate_groupData_createGroup_membersSerializer();
Serializer<Gcreate_groupData_createGroup_members_member>
    _$gcreateGroupDataCreateGroupMembersMemberSerializer =
    new _$Gcreate_groupData_createGroup_members_memberSerializer();
Serializer<Gadd_to_groupData> _$gaddToGroupDataSerializer =
    new _$Gadd_to_groupDataSerializer();
Serializer<Gadd_expenseData> _$gaddExpenseDataSerializer =
    new _$Gadd_expenseDataSerializer();
Serializer<Gadd_expenseData_addExpense> _$gaddExpenseDataAddExpenseSerializer =
    new _$Gadd_expenseData_addExpenseSerializer();
Serializer<Gadd_expenseData_addExpense_splits>
    _$gaddExpenseDataAddExpenseSplitsSerializer =
    new _$Gadd_expenseData_addExpense_splitsSerializer();
Serializer<Gadd_expenseData_addExpense_splits_expense>
    _$gaddExpenseDataAddExpenseSplitsExpenseSerializer =
    new _$Gadd_expenseData_addExpense_splits_expenseSerializer();
Serializer<Gadd_expenseData_addExpense_splits_group>
    _$gaddExpenseDataAddExpenseSplitsGroupSerializer =
    new _$Gadd_expenseData_addExpense_splits_groupSerializer();
Serializer<Gadd_expenseData_addExpense_splits_creator>
    _$gaddExpenseDataAddExpenseSplitsCreatorSerializer =
    new _$Gadd_expenseData_addExpense_splits_creatorSerializer();
Serializer<Gadd_expenseData_addExpense_splits_fromUser>
    _$gaddExpenseDataAddExpenseSplitsFromUserSerializer =
    new _$Gadd_expenseData_addExpense_splits_fromUserSerializer();
Serializer<Gadd_expenseData_addExpense_splits_toUser>
    _$gaddExpenseDataAddExpenseSplitsToUserSerializer =
    new _$Gadd_expenseData_addExpense_splits_toUserSerializer();
Serializer<Gsend_email_otpData> _$gsendEmailOtpDataSerializer =
    new _$Gsend_email_otpDataSerializer();
Serializer<Gverify_email_otpData> _$gverifyEmailOtpDataSerializer =
    new _$Gverify_email_otpDataSerializer();
Serializer<Gverify_email_otpData_verifyOtp__base>
    _$gverifyEmailOtpDataVerifyOtpBaseSerializer =
    new _$Gverify_email_otpData_verifyOtp__baseSerializer();
Serializer<Gverify_email_otpData_verifyOtp__asUserSignedUp>
    _$gverifyEmailOtpDataVerifyOtpAsUserSignedUpSerializer =
    new _$Gverify_email_otpData_verifyOtp__asUserSignedUpSerializer();
Serializer<Gverify_email_otpData_verifyOtp__asUserNotSignedUp>
    _$gverifyEmailOtpDataVerifyOtpAsUserNotSignedUpSerializer =
    new _$Gverify_email_otpData_verifyOtp__asUserNotSignedUpSerializer();
Serializer<Grefresh_tokenData> _$grefreshTokenDataSerializer =
    new _$Grefresh_tokenDataSerializer();
Serializer<Grefresh_tokenData_refreshToken>
    _$grefreshTokenDataRefreshTokenSerializer =
    new _$Grefresh_tokenData_refreshTokenSerializer();
Serializer<GsearchUserByEmailData> _$gsearchUserByEmailDataSerializer =
    new _$GsearchUserByEmailDataSerializer();
Serializer<GsearchUserByEmailData_findUserByEmail>
    _$gsearchUserByEmailDataFindUserByEmailSerializer =
    new _$GsearchUserByEmailData_findUserByEmailSerializer();
Serializer<GcreateNonGroupExpenseData> _$gcreateNonGroupExpenseDataSerializer =
    new _$GcreateNonGroupExpenseDataSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpenseSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_group>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_groupSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_group_creator>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupCreatorSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_group_members>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupMembersSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_membersSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupMembersMemberSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expenseSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsExpenseSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsGroupSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsCreatorSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorSerializer();
Serializer<
        GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsFromUserSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsToUserSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserSerializer();
Serializer<GsettleInGroupData> _$gsettleInGroupDataSerializer =
    new _$GsettleInGroupDataSerializer();
Serializer<GsettleInGroupData_settleInGroup>
    _$gsettleInGroupDataSettleInGroupSerializer =
    new _$GsettleInGroupData_settleInGroupSerializer();
Serializer<GsettleInGroupData_settleInGroup_expense>
    _$gsettleInGroupDataSettleInGroupExpenseSerializer =
    new _$GsettleInGroupData_settleInGroup_expenseSerializer();
Serializer<GsettleInGroupData_settleInGroup_group>
    _$gsettleInGroupDataSettleInGroupGroupSerializer =
    new _$GsettleInGroupData_settleInGroup_groupSerializer();
Serializer<GsettleInGroupData_settleInGroup_creator>
    _$gsettleInGroupDataSettleInGroupCreatorSerializer =
    new _$GsettleInGroupData_settleInGroup_creatorSerializer();
Serializer<GsettleInGroupData_settleInGroup_fromUser>
    _$gsettleInGroupDataSettleInGroupFromUserSerializer =
    new _$GsettleInGroupData_settleInGroup_fromUserSerializer();
Serializer<GsettleInGroupData_settleInGroup_toUser>
    _$gsettleInGroupDataSettleInGroupToUserSerializer =
    new _$GsettleInGroupData_settleInGroup_toUserSerializer();
Serializer<GsimplifyUserData> _$gsimplifyUserDataSerializer =
    new _$GsimplifyUserDataSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup>
    _$gsimplifyUserDataSimplifyCrossGroupSerializer =
    new _$GsimplifyUserData_simplifyCrossGroupSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_expense>
    _$gsimplifyUserDataSimplifyCrossGroupExpenseSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_expenseSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_group>
    _$gsimplifyUserDataSimplifyCrossGroupGroupSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_groupSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_creator>
    _$gsimplifyUserDataSimplifyCrossGroupCreatorSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_creatorSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_fromUser>
    _$gsimplifyUserDataSimplifyCrossGroupFromUserSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_fromUserSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_toUser>
    _$gsimplifyUserDataSimplifyCrossGroupToUserSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_toUserSerializer();
Serializer<GautoSettleWithUserData> _$gautoSettleWithUserDataSerializer =
    new _$GautoSettleWithUserDataSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser>
    _$gautoSettleWithUserDataAutoSettleWithUserSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUserSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_expense>
    _$gautoSettleWithUserDataAutoSettleWithUserExpenseSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_expenseSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_group>
    _$gautoSettleWithUserDataAutoSettleWithUserGroupSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_groupSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_creator>
    _$gautoSettleWithUserDataAutoSettleWithUserCreatorSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_creatorSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_fromUser>
    _$gautoSettleWithUserDataAutoSettleWithUserFromUserSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_fromUserSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_toUser>
    _$gautoSettleWithUserDataAutoSettleWithUserToUserSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_toUserSerializer();
Serializer<GtransactionWithUserData> _$gtransactionWithUserDataSerializer =
    new _$GtransactionWithUserDataSerializer();
Serializer<GtransactionWithUserData_getTransactionsWithUser>
    _$gtransactionWithUserDataGetTransactionsWithUserSerializer =
    new _$GtransactionWithUserData_getTransactionsWithUserSerializer();
Serializer<GtransactionWithUserData_getTransactionsWithUser_expense>
    _$gtransactionWithUserDataGetTransactionsWithUserExpenseSerializer =
    new _$GtransactionWithUserData_getTransactionsWithUser_expenseSerializer();
Serializer<GtransactionWithUserData_getTransactionsWithUser_group>
    _$gtransactionWithUserDataGetTransactionsWithUserGroupSerializer =
    new _$GtransactionWithUserData_getTransactionsWithUser_groupSerializer();
Serializer<GtransactionWithUserData_getTransactionsWithUser_creator>
    _$gtransactionWithUserDataGetTransactionsWithUserCreatorSerializer =
    new _$GtransactionWithUserData_getTransactionsWithUser_creatorSerializer();
Serializer<GtransactionWithUserData_getTransactionsWithUser_fromUser>
    _$gtransactionWithUserDataGetTransactionsWithUserFromUserSerializer =
    new _$GtransactionWithUserData_getTransactionsWithUser_fromUserSerializer();
Serializer<GtransactionWithUserData_getTransactionsWithUser_toUser>
    _$gtransactionWithUserDataGetTransactionsWithUserToUserSerializer =
    new _$GtransactionWithUserData_getTransactionsWithUser_toUserSerializer();
Serializer<GtransactionMixExpenseData> _$gtransactionMixExpenseDataSerializer =
    new _$GtransactionMixExpenseDataSerializer();
Serializer<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupSerializer();
Serializer<
        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupExpenseSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseSerializer();
Serializer<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSplitSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitSerializer();
Serializer<
        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSplitFromUserSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserSerializer();
Serializer<
        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSplitToUserSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserSerializer();
Serializer<GUserFieldsData> _$gUserFieldsDataSerializer =
    new _$GUserFieldsDataSerializer();
Serializer<GUserPaysFieldsData> _$gUserPaysFieldsDataSerializer =
    new _$GUserPaysFieldsDataSerializer();
Serializer<GUserPaysFieldsData_owes> _$gUserPaysFieldsDataOwesSerializer =
    new _$GUserPaysFieldsData_owesSerializer();
Serializer<GGroupBasicData> _$gGroupBasicDataSerializer =
    new _$GGroupBasicDataSerializer();
Serializer<GGroupFieldsData> _$gGroupFieldsDataSerializer =
    new _$GGroupFieldsDataSerializer();
Serializer<GGroupFieldsData_creator> _$gGroupFieldsDataCreatorSerializer =
    new _$GGroupFieldsData_creatorSerializer();
Serializer<GGroupFieldsData_members> _$gGroupFieldsDataMembersSerializer =
    new _$GGroupFieldsData_membersSerializer();
Serializer<GGroupFieldsData_members_member>
    _$gGroupFieldsDataMembersMemberSerializer =
    new _$GGroupFieldsData_members_memberSerializer();
Serializer<GExpenseBasicData> _$gExpenseBasicDataSerializer =
    new _$GExpenseBasicDataSerializer();
Serializer<GExpenseFieldsData> _$gExpenseFieldsDataSerializer =
    new _$GExpenseFieldsDataSerializer();
Serializer<GExpenseFieldsData_creator> _$gExpenseFieldsDataCreatorSerializer =
    new _$GExpenseFieldsData_creatorSerializer();
Serializer<GExpenseFieldsData_splits> _$gExpenseFieldsDataSplitsSerializer =
    new _$GExpenseFieldsData_splitsSerializer();
Serializer<GExpenseFieldsData_splits_fromUser>
    _$gExpenseFieldsDataSplitsFromUserSerializer =
    new _$GExpenseFieldsData_splits_fromUserSerializer();
Serializer<GExpenseFieldsData_splits_toUser>
    _$gExpenseFieldsDataSplitsToUserSerializer =
    new _$GExpenseFieldsData_splits_toUserSerializer();
Serializer<GNewExpenseFieldsData> _$gNewExpenseFieldsDataSerializer =
    new _$GNewExpenseFieldsDataSerializer();
Serializer<GNewExpenseFieldsData_splits>
    _$gNewExpenseFieldsDataSplitsSerializer =
    new _$GNewExpenseFieldsData_splitsSerializer();
Serializer<GNewExpenseFieldsData_splits_expense>
    _$gNewExpenseFieldsDataSplitsExpenseSerializer =
    new _$GNewExpenseFieldsData_splits_expenseSerializer();
Serializer<GNewExpenseFieldsData_splits_group>
    _$gNewExpenseFieldsDataSplitsGroupSerializer =
    new _$GNewExpenseFieldsData_splits_groupSerializer();
Serializer<GNewExpenseFieldsData_splits_creator>
    _$gNewExpenseFieldsDataSplitsCreatorSerializer =
    new _$GNewExpenseFieldsData_splits_creatorSerializer();
Serializer<GNewExpenseFieldsData_splits_fromUser>
    _$gNewExpenseFieldsDataSplitsFromUserSerializer =
    new _$GNewExpenseFieldsData_splits_fromUserSerializer();
Serializer<GNewExpenseFieldsData_splits_toUser>
    _$gNewExpenseFieldsDataSplitsToUserSerializer =
    new _$GNewExpenseFieldsData_splits_toUserSerializer();
Serializer<GSplitFieldsBasicsData> _$gSplitFieldsBasicsDataSerializer =
    new _$GSplitFieldsBasicsDataSerializer();
Serializer<GSplitFieldsData> _$gSplitFieldsDataSerializer =
    new _$GSplitFieldsDataSerializer();
Serializer<GSplitFieldsData_fromUser> _$gSplitFieldsDataFromUserSerializer =
    new _$GSplitFieldsData_fromUserSerializer();
Serializer<GSplitFieldsData_toUser> _$gSplitFieldsDataToUserSerializer =
    new _$GSplitFieldsData_toUserSerializer();
Serializer<GSplitTransactionFieldsData>
    _$gSplitTransactionFieldsDataSerializer =
    new _$GSplitTransactionFieldsDataSerializer();
Serializer<GSplitTransactionFieldsData_fromUser>
    _$gSplitTransactionFieldsDataFromUserSerializer =
    new _$GSplitTransactionFieldsData_fromUserSerializer();
Serializer<GSplitTransactionFieldsData_toUser>
    _$gSplitTransactionFieldsDataToUserSerializer =
    new _$GSplitTransactionFieldsData_toUserSerializer();
Serializer<GSplitTransactionFieldsData_expense>
    _$gSplitTransactionFieldsDataExpenseSerializer =
    new _$GSplitTransactionFieldsData_expenseSerializer();
Serializer<GSplitTransactionFieldsData_group>
    _$gSplitTransactionFieldsDataGroupSerializer =
    new _$GSplitTransactionFieldsData_groupSerializer();
Serializer<GSplitTransactionFieldsData_creator>
    _$gSplitTransactionFieldsDataCreatorSerializer =
    new _$GSplitTransactionFieldsData_creatorSerializer();
Serializer<GGroupWithExpensesData> _$gGroupWithExpensesDataSerializer =
    new _$GGroupWithExpensesDataSerializer();
Serializer<GGroupWithExpensesData_creator>
    _$gGroupWithExpensesDataCreatorSerializer =
    new _$GGroupWithExpensesData_creatorSerializer();
Serializer<GGroupWithExpensesData_members>
    _$gGroupWithExpensesDataMembersSerializer =
    new _$GGroupWithExpensesData_membersSerializer();
Serializer<GGroupWithExpensesData_members_member>
    _$gGroupWithExpensesDataMembersMemberSerializer =
    new _$GGroupWithExpensesData_members_memberSerializer();
Serializer<GGroupWithExpensesData_expenses>
    _$gGroupWithExpensesDataExpensesSerializer =
    new _$GGroupWithExpensesData_expensesSerializer();
Serializer<GGroupWithExpensesData_expenses_creator>
    _$gGroupWithExpensesDataExpensesCreatorSerializer =
    new _$GGroupWithExpensesData_expenses_creatorSerializer();
Serializer<GGroupWithExpensesData_expenses_splits>
    _$gGroupWithExpensesDataExpensesSplitsSerializer =
    new _$GGroupWithExpensesData_expenses_splitsSerializer();
Serializer<GGroupWithExpensesData_expenses_splits_fromUser>
    _$gGroupWithExpensesDataExpensesSplitsFromUserSerializer =
    new _$GGroupWithExpensesData_expenses_splits_fromUserSerializer();
Serializer<GGroupWithExpensesData_expenses_splits_toUser>
    _$gGroupWithExpensesDataExpensesSplitsToUserSerializer =
    new _$GGroupWithExpensesData_expenses_splits_toUserSerializer();
Serializer<GExpenseMixSplitFieldsData> _$gExpenseMixSplitFieldsDataSerializer =
    new _$GExpenseMixSplitFieldsDataSerializer();
Serializer<GExpenseMixSplitFieldsData_expense>
    _$gExpenseMixSplitFieldsDataExpenseSerializer =
    new _$GExpenseMixSplitFieldsData_expenseSerializer();
Serializer<GExpenseMixSplitFieldsData_split>
    _$gExpenseMixSplitFieldsDataSplitSerializer =
    new _$GExpenseMixSplitFieldsData_splitSerializer();
Serializer<GExpenseMixSplitFieldsData_split_fromUser>
    _$gExpenseMixSplitFieldsDataSplitFromUserSerializer =
    new _$GExpenseMixSplitFieldsData_split_fromUserSerializer();
Serializer<GExpenseMixSplitFieldsData_split_toUser>
    _$gExpenseMixSplitFieldsDataSplitToUserSerializer =
    new _$GExpenseMixSplitFieldsData_split_toUserSerializer();

class _$GuserDataSerializer implements StructuredSerializer<GuserData> {
  @override
  final Iterable<Type> types = const [GuserData, _$GuserData];
  @override
  final String wireName = 'GuserData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GuserData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'user',
      serializers.serialize(object.user,
          specifiedType: const FullType(GuserData_user)),
    ];

    return result;
  }

  @override
  GuserData deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(GuserData_user))! as GuserData_user;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData_user__baseSerializer
    implements StructuredSerializer<GuserData_user__base> {
  @override
  final Iterable<Type> types = const [
    GuserData_user__base,
    _$GuserData_user__base
  ];
  @override
  final String wireName = 'GuserData_user__base';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserData_user__base object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GuserData_user__base deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserData_user__baseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData_user__asRegisteredSerializer
    implements StructuredSerializer<GuserData_user__asRegistered> {
  @override
  final Iterable<Type> types = const [
    GuserData_user__asRegistered,
    _$GuserData_user__asRegistered
  ];
  @override
  final String wireName = 'GuserData_user__asRegistered';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserData_user__asRegistered object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'user',
      serializers.serialize(object.user,
          specifiedType: const FullType(GuserData_user__asRegistered_user)),
    ];

    return result;
  }

  @override
  GuserData_user__asRegistered deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserData_user__asRegisteredBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GuserData_user__asRegistered_user))!
              as GuserData_user__asRegistered_user);
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData_user__asRegistered_userSerializer
    implements StructuredSerializer<GuserData_user__asRegistered_user> {
  @override
  final Iterable<Type> types = const [
    GuserData_user__asRegistered_user,
    _$GuserData_user__asRegistered_user
  ];
  @override
  final String wireName = 'GuserData_user__asRegistered_user';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserData_user__asRegistered_user object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GuserData_user__asRegistered_user deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserData_user__asRegistered_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData_user__asUnregisteredSerializer
    implements StructuredSerializer<GuserData_user__asUnregistered> {
  @override
  final Iterable<Type> types = const [
    GuserData_user__asUnregistered,
    _$GuserData_user__asUnregistered
  ];
  @override
  final String wireName = 'GuserData_user__asUnregistered';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserData_user__asUnregistered object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GuserData_user__asUnregistered deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserData_user__asUnregisteredBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsDataSerializer implements StructuredSerializer<GgroupsData> {
  @override
  final Iterable<Type> types = const [GgroupsData, _$GgroupsData];
  @override
  final String wireName = 'GgroupsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GgroupsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'groups',
      serializers.serialize(object.groups,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GgroupsData_groups)])),
    ];

    return result;
  }

  @override
  GgroupsData deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groups':
          result.groups.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GgroupsData_groups)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groupsSerializer
    implements StructuredSerializer<GgroupsData_groups> {
  @override
  final Iterable<Type> types = const [GgroupsData_groups, _$GgroupsData_groups];
  @override
  final String wireName = 'GgroupsData_groups';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GgroupsData_groups_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GgroupsData_groups_members)])),
      'owed',
      serializers.serialize(object.owed, specifiedType: const FullType(int)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupsData_groups deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groupsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GgroupsData_groups_creator))!
              as GgroupsData_groups_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupsData_groups_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'owed':
          result.owed = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groups_creatorSerializer
    implements StructuredSerializer<GgroupsData_groups_creator> {
  @override
  final Iterable<Type> types = const [
    GgroupsData_groups_creator,
    _$GgroupsData_groups_creator
  ];
  @override
  final String wireName = 'GgroupsData_groups_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupsData_groups_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groups_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groups_membersSerializer
    implements StructuredSerializer<GgroupsData_groups_members> {
  @override
  final Iterable<Type> types = const [
    GgroupsData_groups_members,
    _$GgroupsData_groups_members
  ];
  @override
  final String wireName = 'GgroupsData_groups_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(int)),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GgroupsData_groups_members_member)),
    ];

    return result;
  }

  @override
  GgroupsData_groups_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groups_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupsData_groups_members_member))!
              as GgroupsData_groups_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groups_members_memberSerializer
    implements StructuredSerializer<GgroupsData_groups_members_member> {
  @override
  final Iterable<Type> types = const [
    GgroupsData_groups_members_member,
    _$GgroupsData_groups_members_member
  ];
  @override
  final String wireName = 'GgroupsData_groups_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupsData_groups_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groups_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Ginteracted_usersDataSerializer
    implements StructuredSerializer<Ginteracted_usersData> {
  @override
  final Iterable<Type> types = const [
    Ginteracted_usersData,
    _$Ginteracted_usersData
  ];
  @override
  final String wireName = 'Ginteracted_usersData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Ginteracted_usersData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'interactedUsers',
      serializers.serialize(object.interactedUsers,
          specifiedType: const FullType(BuiltList,
              const [const FullType(Ginteracted_usersData_interactedUsers)])),
    ];

    return result;
  }

  @override
  Ginteracted_usersData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Ginteracted_usersDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'interactedUsers':
          result.interactedUsers.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Ginteracted_usersData_interactedUsers)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Ginteracted_usersData_interactedUsersSerializer
    implements StructuredSerializer<Ginteracted_usersData_interactedUsers> {
  @override
  final Iterable<Type> types = const [
    Ginteracted_usersData_interactedUsers,
    _$Ginteracted_usersData_interactedUsers
  ];
  @override
  final String wireName = 'Ginteracted_usersData_interactedUsers';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Ginteracted_usersData_interactedUsers object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'upiIds',
      serializers.serialize(object.upiIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'owes',
      serializers.serialize(object.owes,
          specifiedType: const FullType(BuiltList, const [
            const FullType(Ginteracted_usersData_interactedUsers_owes)
          ])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Ginteracted_usersData_interactedUsers deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Ginteracted_usersData_interactedUsersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'upiIds':
          result.upiIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'owes':
          result.owes.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Ginteracted_usersData_interactedUsers_owes)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Ginteracted_usersData_interactedUsers_owesSerializer
    implements
        StructuredSerializer<Ginteracted_usersData_interactedUsers_owes> {
  @override
  final Iterable<Type> types = const [
    Ginteracted_usersData_interactedUsers_owes,
    _$Ginteracted_usersData_interactedUsers_owes
  ];
  @override
  final String wireName = 'Ginteracted_usersData_interactedUsers_owes';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Ginteracted_usersData_interactedUsers_owes object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  Ginteracted_usersData_interactedUsers_owes deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Ginteracted_usersData_interactedUsers_owesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupDataSerializer implements StructuredSerializer<GgroupData> {
  @override
  final Iterable<Type> types = const [GgroupData, _$GgroupData];
  @override
  final String wireName = 'GgroupData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GgroupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GgroupData_group)),
    ];

    return result;
  }

  @override
  GgroupData deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GgroupData_group))!
              as GgroupData_group);
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_groupSerializer
    implements StructuredSerializer<GgroupData_group> {
  @override
  final Iterable<Type> types = const [GgroupData_group, _$GgroupData_group];
  @override
  final String wireName = 'GgroupData_group';

  @override
  Iterable<Object?> serialize(Serializers serializers, GgroupData_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'expenses',
      serializers.serialize(object.expenses,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GgroupData_group_expenses)])),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GgroupData_group_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GgroupData_group_members)])),
      'owed',
      serializers.serialize(object.owed, specifiedType: const FullType(int)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expenses':
          result.expenses.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupData_group_expenses)
              ]))! as BuiltList<Object?>);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GgroupData_group_creator))!
              as GgroupData_group_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupData_group_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'owed':
          result.owed = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expensesSerializer
    implements StructuredSerializer<GgroupData_group_expenses> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses,
    _$GgroupData_group_expenses
  ];
  @override
  final String wireName = 'GgroupData_group_expenses';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GgroupData_group_expenses_creator)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GgroupData_group_expenses_splits)])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgroupData_group_expenses deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expensesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupData_group_expenses_creator))!
              as GgroupData_group_expenses_creator);
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupData_group_expenses_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_creatorSerializer
    implements StructuredSerializer<GgroupData_group_expenses_creator> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_creator,
    _$GgroupData_group_expenses_creator
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_splitsSerializer
    implements StructuredSerializer<GgroupData_group_expenses_splits> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_splits,
    _$GgroupData_group_expenses_splits
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GgroupData_group_expenses_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GgroupData_group_expenses_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgroupData_group_expenses_splits_fromUser))!
              as GgroupData_group_expenses_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupData_group_expenses_splits_toUser))!
              as GgroupData_group_expenses_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_splits_fromUserSerializer
    implements StructuredSerializer<GgroupData_group_expenses_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_splits_fromUser,
    _$GgroupData_group_expenses_splits_fromUser
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_splits_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_splits_toUserSerializer
    implements StructuredSerializer<GgroupData_group_expenses_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_splits_toUser,
    _$GgroupData_group_expenses_splits_toUser
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_creatorSerializer
    implements StructuredSerializer<GgroupData_group_creator> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_creator,
    _$GgroupData_group_creator
  ];
  @override
  final String wireName = 'GgroupData_group_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_membersSerializer
    implements StructuredSerializer<GgroupData_group_members> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_members,
    _$GgroupData_group_members
  ];
  @override
  final String wireName = 'GgroupData_group_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(int)),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GgroupData_group_members_member)),
    ];

    return result;
  }

  @override
  GgroupData_group_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupData_group_members_member))!
              as GgroupData_group_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_members_memberSerializer
    implements StructuredSerializer<GgroupData_group_members_member> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_members_member,
    _$GgroupData_group_members_member
  ];
  @override
  final String wireName = 'GgroupData_group_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsignupDataSerializer implements StructuredSerializer<GsignupData> {
  @override
  final Iterable<Type> types = const [GsignupData, _$GsignupData];
  @override
  final String wireName = 'GsignupData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GsignupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'signup',
      serializers.serialize(object.signup,
          specifiedType: const FullType(GsignupData_signup)),
    ];

    return result;
  }

  @override
  GsignupData deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsignupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'signup':
          result.signup.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GsignupData_signup))!
              as GsignupData_signup);
          break;
      }
    }

    return result.build();
  }
}

class _$GsignupData_signupSerializer
    implements StructuredSerializer<GsignupData_signup> {
  @override
  final Iterable<Type> types = const [GsignupData_signup, _$GsignupData_signup];
  @override
  final String wireName = 'GsignupData_signup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsignupData_signup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'user',
      serializers.serialize(object.user,
          specifiedType: const FullType(GsignupData_signup_user)),
      'tokens',
      serializers.serialize(object.tokens,
          specifiedType: const FullType(GsignupData_signup_tokens)),
    ];

    return result;
  }

  @override
  GsignupData_signup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsignupData_signupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GsignupData_signup_user))!
              as GsignupData_signup_user);
          break;
        case 'tokens':
          result.tokens.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GsignupData_signup_tokens))!
              as GsignupData_signup_tokens);
          break;
      }
    }

    return result.build();
  }
}

class _$GsignupData_signup_userSerializer
    implements StructuredSerializer<GsignupData_signup_user> {
  @override
  final Iterable<Type> types = const [
    GsignupData_signup_user,
    _$GsignupData_signup_user
  ];
  @override
  final String wireName = 'GsignupData_signup_user';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsignupData_signup_user object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsignupData_signup_user deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsignupData_signup_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsignupData_signup_tokensSerializer
    implements StructuredSerializer<GsignupData_signup_tokens> {
  @override
  final Iterable<Type> types = const [
    GsignupData_signup_tokens,
    _$GsignupData_signup_tokens
  ];
  @override
  final String wireName = 'GsignupData_signup_tokens';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsignupData_signup_tokens object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'accessToken',
      serializers.serialize(object.accessToken,
          specifiedType: const FullType(String)),
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsignupData_signup_tokens deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsignupData_signup_tokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupDataSerializer
    implements StructuredSerializer<Gcreate_groupData> {
  @override
  final Iterable<Type> types = const [Gcreate_groupData, _$Gcreate_groupData];
  @override
  final String wireName = 'Gcreate_groupData';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gcreate_groupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'createGroup',
      serializers.serialize(object.createGroup,
          specifiedType: const FullType(Gcreate_groupData_createGroup)),
    ];

    return result;
  }

  @override
  Gcreate_groupData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createGroup':
          result.createGroup.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gcreate_groupData_createGroup))!
              as Gcreate_groupData_createGroup);
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroupSerializer
    implements StructuredSerializer<Gcreate_groupData_createGroup> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup,
    _$Gcreate_groupData_createGroup
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gcreate_groupData_createGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(Gcreate_groupData_createGroup_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(BuiltList,
              const [const FullType(Gcreate_groupData_createGroup_members)])),
      'owed',
      serializers.serialize(object.owed, specifiedType: const FullType(int)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gcreate_groupData_createGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupData_createGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gcreate_groupData_createGroup_creator))!
              as Gcreate_groupData_createGroup_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Gcreate_groupData_createGroup_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'owed':
          result.owed = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroup_creatorSerializer
    implements StructuredSerializer<Gcreate_groupData_createGroup_creator> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup_creator,
    _$Gcreate_groupData_createGroup_creator
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gcreate_groupData_createGroup_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gcreate_groupData_createGroup_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupData_createGroup_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroup_membersSerializer
    implements StructuredSerializer<Gcreate_groupData_createGroup_members> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup_members,
    _$Gcreate_groupData_createGroup_members
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gcreate_groupData_createGroup_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(int)),
      'member',
      serializers.serialize(object.member,
          specifiedType:
              const FullType(Gcreate_groupData_createGroup_members_member)),
    ];

    return result;
  }

  @override
  Gcreate_groupData_createGroup_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupData_createGroup_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gcreate_groupData_createGroup_members_member))!
              as Gcreate_groupData_createGroup_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroup_members_memberSerializer
    implements
        StructuredSerializer<Gcreate_groupData_createGroup_members_member> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup_members_member,
    _$Gcreate_groupData_createGroup_members_member
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup_members_member';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gcreate_groupData_createGroup_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gcreate_groupData_createGroup_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupData_createGroup_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_to_groupDataSerializer
    implements StructuredSerializer<Gadd_to_groupData> {
  @override
  final Iterable<Type> types = const [Gadd_to_groupData, _$Gadd_to_groupData];
  @override
  final String wireName = 'Gadd_to_groupData';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gadd_to_groupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'addToGroupByEmail',
      serializers.serialize(object.addToGroupByEmail,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gadd_to_groupData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_to_groupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'addToGroupByEmail':
          result.addToGroupByEmail = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseDataSerializer
    implements StructuredSerializer<Gadd_expenseData> {
  @override
  final Iterable<Type> types = const [Gadd_expenseData, _$Gadd_expenseData];
  @override
  final String wireName = 'Gadd_expenseData';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gadd_expenseData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'addExpense',
      serializers.serialize(object.addExpense,
          specifiedType: const FullType(Gadd_expenseData_addExpense)),
    ];

    return result;
  }

  @override
  Gadd_expenseData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'addExpense':
          result.addExpense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gadd_expenseData_addExpense))!
              as Gadd_expenseData_addExpense);
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpenseSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense,
    _$Gadd_expenseData_addExpense
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList,
              const [const FullType(Gadd_expenseData_addExpense_splits)])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gadd_expenseData_addExpense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Gadd_expenseData_addExpense_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splitsSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense_splits> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits,
    _$Gadd_expenseData_addExpense_splits
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(Gadd_expenseData_addExpense_splits_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_expense))!
              as Gadd_expenseData_addExpense_splits_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gadd_expenseData_addExpense_splits_group))!
              as Gadd_expenseData_addExpense_splits_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_creator))!
              as Gadd_expenseData_addExpense_splits_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_fromUser))!
              as Gadd_expenseData_addExpense_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_toUser))!
              as Gadd_expenseData_addExpense_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_expenseSerializer
    implements
        StructuredSerializer<Gadd_expenseData_addExpense_splits_expense> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_expense,
    _$Gadd_expenseData_addExpense_splits_expense
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gadd_expenseData_addExpense_splits_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_groupSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense_splits_group> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_group,
    _$Gadd_expenseData_addExpense_splits_group
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense_splits_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_creatorSerializer
    implements
        StructuredSerializer<Gadd_expenseData_addExpense_splits_creator> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_creator,
    _$Gadd_expenseData_addExpense_splits_creator
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gadd_expenseData_addExpense_splits_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_fromUserSerializer
    implements
        StructuredSerializer<Gadd_expenseData_addExpense_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_fromUser,
    _$Gadd_expenseData_addExpense_splits_fromUser
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gadd_expenseData_addExpense_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_toUserSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_toUser,
    _$Gadd_expenseData_addExpense_splits_toUser
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gsend_email_otpDataSerializer
    implements StructuredSerializer<Gsend_email_otpData> {
  @override
  final Iterable<Type> types = const [
    Gsend_email_otpData,
    _$Gsend_email_otpData
  ];
  @override
  final String wireName = 'Gsend_email_otpData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gsend_email_otpData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'sendEmailOtp',
      serializers.serialize(object.sendEmailOtp,
          specifiedType: const FullType(bool)),
    ];

    return result;
  }

  @override
  Gsend_email_otpData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gsend_email_otpDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sendEmailOtp':
          result.sendEmailOtp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gverify_email_otpDataSerializer
    implements StructuredSerializer<Gverify_email_otpData> {
  @override
  final Iterable<Type> types = const [
    Gverify_email_otpData,
    _$Gverify_email_otpData
  ];
  @override
  final String wireName = 'Gverify_email_otpData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gverify_email_otpData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'verifyOtp',
      serializers.serialize(object.verifyOtp,
          specifiedType: const FullType(Gverify_email_otpData_verifyOtp)),
    ];

    return result;
  }

  @override
  Gverify_email_otpData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gverify_email_otpDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'verifyOtp':
          result.verifyOtp = serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gverify_email_otpData_verifyOtp))!
              as Gverify_email_otpData_verifyOtp;
          break;
      }
    }

    return result.build();
  }
}

class _$Gverify_email_otpData_verifyOtp__baseSerializer
    implements StructuredSerializer<Gverify_email_otpData_verifyOtp__base> {
  @override
  final Iterable<Type> types = const [
    Gverify_email_otpData_verifyOtp__base,
    _$Gverify_email_otpData_verifyOtp__base
  ];
  @override
  final String wireName = 'Gverify_email_otpData_verifyOtp__base';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gverify_email_otpData_verifyOtp__base object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gverify_email_otpData_verifyOtp__base deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gverify_email_otpData_verifyOtp__baseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gverify_email_otpData_verifyOtp__asUserSignedUpSerializer
    implements
        StructuredSerializer<Gverify_email_otpData_verifyOtp__asUserSignedUp> {
  @override
  final Iterable<Type> types = const [
    Gverify_email_otpData_verifyOtp__asUserSignedUp,
    _$Gverify_email_otpData_verifyOtp__asUserSignedUp
  ];
  @override
  final String wireName = 'Gverify_email_otpData_verifyOtp__asUserSignedUp';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gverify_email_otpData_verifyOtp__asUserSignedUp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'accessToken',
      serializers.serialize(object.accessToken,
          specifiedType: const FullType(String)),
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserSignedUp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gverify_email_otpData_verifyOtp__asUserNotSignedUpSerializer
    implements
        StructuredSerializer<
            Gverify_email_otpData_verifyOtp__asUserNotSignedUp> {
  @override
  final Iterable<Type> types = const [
    Gverify_email_otpData_verifyOtp__asUserNotSignedUp,
    _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp
  ];
  @override
  final String wireName = 'Gverify_email_otpData_verifyOtp__asUserNotSignedUp';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gverify_email_otpData_verifyOtp__asUserNotSignedUp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'signupToken',
      serializers.serialize(object.signupToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserNotSignedUp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'signupToken':
          result.signupToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Grefresh_tokenDataSerializer
    implements StructuredSerializer<Grefresh_tokenData> {
  @override
  final Iterable<Type> types = const [Grefresh_tokenData, _$Grefresh_tokenData];
  @override
  final String wireName = 'Grefresh_tokenData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Grefresh_tokenData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(Grefresh_tokenData_refreshToken)),
    ];

    return result;
  }

  @override
  Grefresh_tokenData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Grefresh_tokenDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'refreshToken':
          result.refreshToken.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Grefresh_tokenData_refreshToken))!
              as Grefresh_tokenData_refreshToken);
          break;
      }
    }

    return result.build();
  }
}

class _$Grefresh_tokenData_refreshTokenSerializer
    implements StructuredSerializer<Grefresh_tokenData_refreshToken> {
  @override
  final Iterable<Type> types = const [
    Grefresh_tokenData_refreshToken,
    _$Grefresh_tokenData_refreshToken
  ];
  @override
  final String wireName = 'Grefresh_tokenData_refreshToken';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Grefresh_tokenData_refreshToken object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'accessToken',
      serializers.serialize(object.accessToken,
          specifiedType: const FullType(String)),
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Grefresh_tokenData_refreshToken deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Grefresh_tokenData_refreshTokenBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsearchUserByEmailDataSerializer
    implements StructuredSerializer<GsearchUserByEmailData> {
  @override
  final Iterable<Type> types = const [
    GsearchUserByEmailData,
    _$GsearchUserByEmailData
  ];
  @override
  final String wireName = 'GsearchUserByEmailData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsearchUserByEmailData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'findUserByEmail',
      serializers.serialize(object.findUserByEmail,
          specifiedType:
              const FullType(GsearchUserByEmailData_findUserByEmail)),
    ];

    return result;
  }

  @override
  GsearchUserByEmailData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsearchUserByEmailDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'findUserByEmail':
          result.findUserByEmail.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsearchUserByEmailData_findUserByEmail))!
              as GsearchUserByEmailData_findUserByEmail);
          break;
      }
    }

    return result.build();
  }
}

class _$GsearchUserByEmailData_findUserByEmailSerializer
    implements StructuredSerializer<GsearchUserByEmailData_findUserByEmail> {
  @override
  final Iterable<Type> types = const [
    GsearchUserByEmailData_findUserByEmail,
    _$GsearchUserByEmailData_findUserByEmail
  ];
  @override
  final String wireName = 'GsearchUserByEmailData_findUserByEmail';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsearchUserByEmailData_findUserByEmail object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsearchUserByEmailData_findUserByEmail deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsearchUserByEmailData_findUserByEmailBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseDataSerializer
    implements StructuredSerializer<GcreateNonGroupExpenseData> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData,
    _$GcreateNonGroupExpenseData
  ];
  @override
  final String wireName = 'GcreateNonGroupExpenseData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GcreateNonGroupExpenseData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'addNonGroupExpense',
      serializers.serialize(object.addNonGroupExpense,
          specifiedType:
              const FullType(GcreateNonGroupExpenseData_addNonGroupExpense)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcreateNonGroupExpenseDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'addNonGroupExpense':
          result.addNonGroupExpense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense))!
              as GcreateNonGroupExpenseData_addNonGroupExpense);
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpenseSerializer
    implements
        StructuredSerializer<GcreateNonGroupExpenseData_addNonGroupExpense> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense,
    _$GcreateNonGroupExpenseData_addNonGroupExpense
  ];
  @override
  final String wireName = 'GcreateNonGroupExpenseData_addNonGroupExpense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_group)),
      'expense',
      serializers.serialize(object.expense,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcreateNonGroupExpenseData_addNonGroupExpenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_group))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_group);
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense);
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_groupSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group
  ];
  @override
  final String wireName = 'GcreateNonGroupExpenseData_addNonGroupExpense_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GcreateNonGroupExpenseData_addNonGroupExpense_group_members)
          ])),
      'owed',
      serializers.serialize(object.owed, specifiedType: const FullType(int)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_group_creator))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_group_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(
                    GcreateNonGroupExpenseData_addNonGroupExpense_group_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'owed':
          result.owed = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_creator> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group_creator,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_membersSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_group_members';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(int)),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expenseSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits)
          ])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(
                    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupDataSerializer
    implements StructuredSerializer<GsettleInGroupData> {
  @override
  final Iterable<Type> types = const [GsettleInGroupData, _$GsettleInGroupData];
  @override
  final String wireName = 'GsettleInGroupData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'settleInGroup',
      serializers.serialize(object.settleInGroup,
          specifiedType: const FullType(GsettleInGroupData_settleInGroup)),
    ];

    return result;
  }

  @override
  GsettleInGroupData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'settleInGroup':
          result.settleInGroup.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup))!
              as GsettleInGroupData_settleInGroup);
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroupSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup,
    _$GsettleInGroupData_settleInGroup
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GsettleInGroupData_settleInGroup_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_expense))!
              as GsettleInGroupData_settleInGroup_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_group))!
              as GsettleInGroupData_settleInGroup_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_creator))!
              as GsettleInGroupData_settleInGroup_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsettleInGroupData_settleInGroup_fromUser))!
              as GsettleInGroupData_settleInGroup_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_toUser))!
              as GsettleInGroupData_settleInGroup_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_expenseSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_expense> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_expense,
    _$GsettleInGroupData_settleInGroup_expense
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_groupSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_group> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_group,
    _$GsettleInGroupData_settleInGroup_group
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_creatorSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_creator> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_creator,
    _$GsettleInGroupData_settleInGroup_creator
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_fromUserSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_fromUser> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_fromUser,
    _$GsettleInGroupData_settleInGroup_fromUser
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_toUserSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_toUser> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_toUser,
    _$GsettleInGroupData_settleInGroup_toUser
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserDataSerializer
    implements StructuredSerializer<GsimplifyUserData> {
  @override
  final Iterable<Type> types = const [GsimplifyUserData, _$GsimplifyUserData];
  @override
  final String wireName = 'GsimplifyUserData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GsimplifyUserData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'simplifyCrossGroup',
      serializers.serialize(object.simplifyCrossGroup,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GsimplifyUserData_simplifyCrossGroup)])),
    ];

    return result;
  }

  @override
  GsimplifyUserData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'simplifyCrossGroup':
          result.simplifyCrossGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GsimplifyUserData_simplifyCrossGroup)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroupSerializer
    implements StructuredSerializer<GsimplifyUserData_simplifyCrossGroup> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup,
    _$GsimplifyUserData_simplifyCrossGroup
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsimplifyUserData_simplifyCrossGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GsimplifyUserData_simplifyCrossGroup_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_expense))!
              as GsimplifyUserData_simplifyCrossGroup_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_group))!
              as GsimplifyUserData_simplifyCrossGroup_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_creator))!
              as GsimplifyUserData_simplifyCrossGroup_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_fromUser))!
              as GsimplifyUserData_simplifyCrossGroup_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_toUser))!
              as GsimplifyUserData_simplifyCrossGroup_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_expenseSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_expense> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_expense,
    _$GsimplifyUserData_simplifyCrossGroup_expense
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_groupSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_group> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_group,
    _$GsimplifyUserData_simplifyCrossGroup_group
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_creatorSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_creator> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_creator,
    _$GsimplifyUserData_simplifyCrossGroup_creator
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_fromUserSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_fromUser> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_fromUser,
    _$GsimplifyUserData_simplifyCrossGroup_fromUser
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_toUserSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_toUser> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_toUser,
    _$GsimplifyUserData_simplifyCrossGroup_toUser
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserDataSerializer
    implements StructuredSerializer<GautoSettleWithUserData> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData,
    _$GautoSettleWithUserData
  ];
  @override
  final String wireName = 'GautoSettleWithUserData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GautoSettleWithUserData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'autoSettleWithUser',
      serializers.serialize(object.autoSettleWithUser,
          specifiedType: const FullType(BuiltList, const [
            const FullType(GautoSettleWithUserData_autoSettleWithUser)
          ])),
    ];

    return result;
  }

  @override
  GautoSettleWithUserData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GautoSettleWithUserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'autoSettleWithUser':
          result.autoSettleWithUser.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GautoSettleWithUserData_autoSettleWithUser)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUserSerializer
    implements
        StructuredSerializer<GautoSettleWithUserData_autoSettleWithUser> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser,
    _$GautoSettleWithUserData_autoSettleWithUser
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(GautoSettleWithUserData_autoSettleWithUser_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(
              GautoSettleWithUserData_autoSettleWithUser_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GautoSettleWithUserData_autoSettleWithUser_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GautoSettleWithUserData_autoSettleWithUser_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GautoSettleWithUserData_autoSettleWithUser_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GautoSettleWithUserData_autoSettleWithUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_expense))!
              as GautoSettleWithUserData_autoSettleWithUser_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_group))!
              as GautoSettleWithUserData_autoSettleWithUser_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_creator))!
              as GautoSettleWithUserData_autoSettleWithUser_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_fromUser))!
              as GautoSettleWithUserData_autoSettleWithUser_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_toUser))!
              as GautoSettleWithUserData_autoSettleWithUser_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_expenseSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_expense> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_expense,
    _$GautoSettleWithUserData_autoSettleWithUser_expense
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_groupSerializer
    implements
        StructuredSerializer<GautoSettleWithUserData_autoSettleWithUser_group> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_group,
    _$GautoSettleWithUserData_autoSettleWithUser_group
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_creatorSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_creator> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_creator,
    _$GautoSettleWithUserData_autoSettleWithUser_creator
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_fromUserSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_fromUser> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_fromUser,
    _$GautoSettleWithUserData_autoSettleWithUser_fromUser
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_toUserSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_toUser> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_toUser,
    _$GautoSettleWithUserData_autoSettleWithUser_toUser
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserDataSerializer
    implements StructuredSerializer<GtransactionWithUserData> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData,
    _$GtransactionWithUserData
  ];
  @override
  final String wireName = 'GtransactionWithUserData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GtransactionWithUserData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'getTransactionsWithUser',
      serializers.serialize(object.getTransactionsWithUser,
          specifiedType: const FullType(BuiltList, const [
            const FullType(GtransactionWithUserData_getTransactionsWithUser)
          ])),
    ];

    return result;
  }

  @override
  GtransactionWithUserData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GtransactionWithUserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'getTransactionsWithUser':
          result.getTransactionsWithUser.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GtransactionWithUserData_getTransactionsWithUser)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsWithUserSerializer
    implements
        StructuredSerializer<GtransactionWithUserData_getTransactionsWithUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsWithUser,
    _$GtransactionWithUserData_getTransactionsWithUser
  ];
  @override
  final String wireName = 'GtransactionWithUserData_getTransactionsWithUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsWithUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(
              GtransactionWithUserData_getTransactionsWithUser_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(
              GtransactionWithUserData_getTransactionsWithUser_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GtransactionWithUserData_getTransactionsWithUser_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GtransactionWithUserData_getTransactionsWithUser_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GtransactionWithUserData_getTransactionsWithUser_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsWithUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsWithUser_expense))!
              as GtransactionWithUserData_getTransactionsWithUser_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsWithUser_group))!
              as GtransactionWithUserData_getTransactionsWithUser_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsWithUser_creator))!
              as GtransactionWithUserData_getTransactionsWithUser_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsWithUser_fromUser))!
              as GtransactionWithUserData_getTransactionsWithUser_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsWithUser_toUser))!
              as GtransactionWithUserData_getTransactionsWithUser_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_expenseSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsWithUser_expense> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsWithUser_expense,
    _$GtransactionWithUserData_getTransactionsWithUser_expense
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsWithUser_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsWithUser_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsWithUser_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_groupSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsWithUser_group> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsWithUser_group,
    _$GtransactionWithUserData_getTransactionsWithUser_group
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsWithUser_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsWithUser_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsWithUser_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_creatorSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsWithUser_creator> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsWithUser_creator,
    _$GtransactionWithUserData_getTransactionsWithUser_creator
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsWithUser_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsWithUser_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsWithUser_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_fromUserSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsWithUser_fromUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsWithUser_fromUser,
    _$GtransactionWithUserData_getTransactionsWithUser_fromUser
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsWithUser_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsWithUser_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_toUserSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsWithUser_toUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsWithUser_toUser,
    _$GtransactionWithUserData_getTransactionsWithUser_toUser
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsWithUser_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsWithUser_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsWithUser_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseDataSerializer
    implements StructuredSerializer<GtransactionMixExpenseData> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData,
    _$GtransactionMixExpenseData
  ];
  @override
  final String wireName = 'GtransactionMixExpenseData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GtransactionMixExpenseData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'getTransactionsMixExpenseWithGroup',
      serializers.serialize(object.getTransactionsMixExpenseWithGroup,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup)
          ])),
    ];

    return result;
  }

  @override
  GtransactionMixExpenseData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GtransactionMixExpenseDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'getTransactionsMixExpenseWithGroup':
          result.getTransactionsMixExpenseWithGroup.replace(serializers
              .deserialize(value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType(
                        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup)
                  ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense)));
    }
    value = object.split;
    if (value != null) {
      result
        ..add('split')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense);
          break;
        case 'split':
          result.split.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split);
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserFieldsDataSerializer
    implements StructuredSerializer<GUserFieldsData> {
  @override
  final Iterable<Type> types = const [GUserFieldsData, _$GUserFieldsData];
  @override
  final String wireName = 'GUserFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUserFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserPaysFieldsDataSerializer
    implements StructuredSerializer<GUserPaysFieldsData> {
  @override
  final Iterable<Type> types = const [
    GUserPaysFieldsData,
    _$GUserPaysFieldsData
  ];
  @override
  final String wireName = 'GUserPaysFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserPaysFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
      'upiIds',
      serializers.serialize(object.upiIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'owes',
      serializers.serialize(object.owes,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GUserPaysFieldsData_owes)])),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUserPaysFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserPaysFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'upiIds':
          result.upiIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'owes':
          result.owes.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserPaysFieldsData_owes)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserPaysFieldsData_owesSerializer
    implements StructuredSerializer<GUserPaysFieldsData_owes> {
  @override
  final Iterable<Type> types = const [
    GUserPaysFieldsData_owes,
    _$GUserPaysFieldsData_owes
  ];
  @override
  final String wireName = 'GUserPaysFieldsData_owes';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserPaysFieldsData_owes object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GUserPaysFieldsData_owes deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserPaysFieldsData_owesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupBasicDataSerializer
    implements StructuredSerializer<GGroupBasicData> {
  @override
  final Iterable<Type> types = const [GGroupBasicData, _$GGroupBasicData];
  @override
  final String wireName = 'GGroupBasicData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GGroupBasicData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupBasicData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupBasicDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsDataSerializer
    implements StructuredSerializer<GGroupFieldsData> {
  @override
  final Iterable<Type> types = const [GGroupFieldsData, _$GGroupFieldsData];
  @override
  final String wireName = 'GGroupFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GGroupFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GGroupFieldsData_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GGroupFieldsData_members)])),
      'owed',
      serializers.serialize(object.owed, specifiedType: const FullType(int)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GGroupFieldsData_creator))!
              as GGroupFieldsData_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupFieldsData_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'owed':
          result.owed = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsData_creatorSerializer
    implements StructuredSerializer<GGroupFieldsData_creator> {
  @override
  final Iterable<Type> types = const [
    GGroupFieldsData_creator,
    _$GGroupFieldsData_creator
  ];
  @override
  final String wireName = 'GGroupFieldsData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupFieldsData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupFieldsData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsData_membersSerializer
    implements StructuredSerializer<GGroupFieldsData_members> {
  @override
  final Iterable<Type> types = const [
    GGroupFieldsData_members,
    _$GGroupFieldsData_members
  ];
  @override
  final String wireName = 'GGroupFieldsData_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupFieldsData_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(int)),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GGroupFieldsData_members_member)),
    ];

    return result;
  }

  @override
  GGroupFieldsData_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsData_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupFieldsData_members_member))!
              as GGroupFieldsData_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsData_members_memberSerializer
    implements StructuredSerializer<GGroupFieldsData_members_member> {
  @override
  final Iterable<Type> types = const [
    GGroupFieldsData_members_member,
    _$GGroupFieldsData_members_member
  ];
  @override
  final String wireName = 'GGroupFieldsData_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupFieldsData_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupFieldsData_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsData_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseBasicDataSerializer
    implements StructuredSerializer<GExpenseBasicData> {
  @override
  final Iterable<Type> types = const [GExpenseBasicData, _$GExpenseBasicData];
  @override
  final String wireName = 'GExpenseBasicData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GExpenseBasicData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GExpenseBasicData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseBasicDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsDataSerializer
    implements StructuredSerializer<GExpenseFieldsData> {
  @override
  final Iterable<Type> types = const [GExpenseFieldsData, _$GExpenseFieldsData];
  @override
  final String wireName = 'GExpenseFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GExpenseFieldsData_creator)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GExpenseFieldsData_splits)])),
    ];

    return result;
  }

  @override
  GExpenseFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GExpenseFieldsData_creator))!
              as GExpenseFieldsData_creator);
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GExpenseFieldsData_splits)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_creatorSerializer
    implements StructuredSerializer<GExpenseFieldsData_creator> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_creator,
    _$GExpenseFieldsData_creator
  ];
  @override
  final String wireName = 'GExpenseFieldsData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_splitsSerializer
    implements StructuredSerializer<GExpenseFieldsData_splits> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_splits,
    _$GExpenseFieldsData_splits
  ];
  @override
  final String wireName = 'GExpenseFieldsData_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GExpenseFieldsData_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GExpenseFieldsData_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseFieldsData_splits_fromUser))!
              as GExpenseFieldsData_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseFieldsData_splits_toUser))!
              as GExpenseFieldsData_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_splits_fromUserSerializer
    implements StructuredSerializer<GExpenseFieldsData_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_splits_fromUser,
    _$GExpenseFieldsData_splits_fromUser
  ];
  @override
  final String wireName = 'GExpenseFieldsData_splits_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_splits_toUserSerializer
    implements StructuredSerializer<GExpenseFieldsData_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_splits_toUser,
    _$GExpenseFieldsData_splits_toUser
  ];
  @override
  final String wireName = 'GExpenseFieldsData_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsDataSerializer
    implements StructuredSerializer<GNewExpenseFieldsData> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData,
    _$GNewExpenseFieldsData
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GNewExpenseFieldsData_splits)])),
    ];

    return result;
  }

  @override
  GNewExpenseFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GNewExpenseFieldsData_splits)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splitsSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits,
    _$GNewExpenseFieldsData_splits
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GNewExpenseFieldsData_splits_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_expense))!
              as GNewExpenseFieldsData_splits_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_group))!
              as GNewExpenseFieldsData_splits_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_creator))!
              as GNewExpenseFieldsData_splits_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_fromUser))!
              as GNewExpenseFieldsData_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_toUser))!
              as GNewExpenseFieldsData_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_expenseSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_expense> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_expense,
    _$GNewExpenseFieldsData_splits_expense
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GNewExpenseFieldsData_splits_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_groupSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_group> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_group,
    _$GNewExpenseFieldsData_splits_group
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_creatorSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_creator> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_creator,
    _$GNewExpenseFieldsData_splits_creator
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_fromUserSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_fromUser,
    _$GNewExpenseFieldsData_splits_fromUser
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_toUserSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_toUser,
    _$GNewExpenseFieldsData_splits_toUser
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsBasicsDataSerializer
    implements StructuredSerializer<GSplitFieldsBasicsData> {
  @override
  final Iterable<Type> types = const [
    GSplitFieldsBasicsData,
    _$GSplitFieldsBasicsData
  ];
  @override
  final String wireName = 'GSplitFieldsBasicsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitFieldsBasicsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitFieldsBasicsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsBasicsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsDataSerializer
    implements StructuredSerializer<GSplitFieldsData> {
  @override
  final Iterable<Type> types = const [GSplitFieldsData, _$GSplitFieldsData];
  @override
  final String wireName = 'GSplitFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GSplitFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GSplitFieldsData_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GSplitFieldsData_toUser)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitFieldsData_fromUser))!
              as GSplitFieldsData_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitFieldsData_toUser))!
              as GSplitFieldsData_toUser);
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsData_fromUserSerializer
    implements StructuredSerializer<GSplitFieldsData_fromUser> {
  @override
  final Iterable<Type> types = const [
    GSplitFieldsData_fromUser,
    _$GSplitFieldsData_fromUser
  ];
  @override
  final String wireName = 'GSplitFieldsData_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitFieldsData_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitFieldsData_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsData_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsData_toUserSerializer
    implements StructuredSerializer<GSplitFieldsData_toUser> {
  @override
  final Iterable<Type> types = const [
    GSplitFieldsData_toUser,
    _$GSplitFieldsData_toUser
  ];
  @override
  final String wireName = 'GSplitFieldsData_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitFieldsData_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitFieldsData_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsData_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsDataSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData,
    _$GSplitTransactionFieldsData
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GSplitTransactionFieldsData_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GSplitTransactionFieldsData_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GSplitTransactionFieldsData_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GSplitTransactionFieldsData_creator)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GSplitTransactionFieldsData_expense)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_fromUser))!
              as GSplitTransactionFieldsData_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_toUser))!
              as GSplitTransactionFieldsData_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_expense))!
              as GSplitTransactionFieldsData_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_group))!
              as GSplitTransactionFieldsData_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_creator))!
              as GSplitTransactionFieldsData_creator);
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_fromUserSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_fromUser> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_fromUser,
    _$GSplitTransactionFieldsData_fromUser
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_toUserSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_toUser> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_toUser,
    _$GSplitTransactionFieldsData_toUser
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_expenseSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_expense> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_expense,
    _$GSplitTransactionFieldsData_expense
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitTransactionFieldsData_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_groupSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_group> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_group,
    _$GSplitTransactionFieldsData_group
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_creatorSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_creator> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_creator,
    _$GSplitTransactionFieldsData_creator
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesDataSerializer
    implements StructuredSerializer<GGroupWithExpensesData> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData,
    _$GGroupWithExpensesData
  ];
  @override
  final String wireName = 'GGroupWithExpensesData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GGroupWithExpensesData_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GGroupWithExpensesData_members)])),
      'owed',
      serializers.serialize(object.owed, specifiedType: const FullType(int)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'expenses',
      serializers.serialize(object.expenses,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GGroupWithExpensesData_expenses)])),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupWithExpensesData_creator))!
              as GGroupWithExpensesData_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupWithExpensesData_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'owed':
          result.owed = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'expenses':
          result.expenses.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupWithExpensesData_expenses)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_creatorSerializer
    implements StructuredSerializer<GGroupWithExpensesData_creator> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_creator,
    _$GGroupWithExpensesData_creator
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_membersSerializer
    implements StructuredSerializer<GGroupWithExpensesData_members> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_members,
    _$GGroupWithExpensesData_members
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(int)),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GGroupWithExpensesData_members_member)),
    ];

    return result;
  }

  @override
  GGroupWithExpensesData_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupWithExpensesData_members_member))!
              as GGroupWithExpensesData_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_members_memberSerializer
    implements StructuredSerializer<GGroupWithExpensesData_members_member> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_members_member,
    _$GGroupWithExpensesData_members_member
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expensesSerializer
    implements StructuredSerializer<GGroupWithExpensesData_expenses> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses,
    _$GGroupWithExpensesData_expenses
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_expenses object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GGroupWithExpensesData_expenses_creator)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GGroupWithExpensesData_expenses_splits)])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGroupWithExpensesData_expenses deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expensesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupWithExpensesData_expenses_creator))!
              as GGroupWithExpensesData_expenses_creator);
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupWithExpensesData_expenses_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_creatorSerializer
    implements StructuredSerializer<GGroupWithExpensesData_expenses_creator> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_creator,
    _$GGroupWithExpensesData_expenses_creator
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_expenses_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_splitsSerializer
    implements StructuredSerializer<GGroupWithExpensesData_expenses_splits> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_splits,
    _$GGroupWithExpensesData_expenses_splits
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_expenses_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GGroupWithExpensesData_expenses_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GGroupWithExpensesData_expenses_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GGroupWithExpensesData_expenses_splits_fromUser))!
              as GGroupWithExpensesData_expenses_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GGroupWithExpensesData_expenses_splits_toUser))!
              as GGroupWithExpensesData_expenses_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_splits_fromUserSerializer
    implements
        StructuredSerializer<GGroupWithExpensesData_expenses_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_splits_fromUser,
    _$GGroupWithExpensesData_expenses_splits_fromUser
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_splits_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GGroupWithExpensesData_expenses_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_splits_toUserSerializer
    implements
        StructuredSerializer<GGroupWithExpensesData_expenses_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_splits_toUser,
    _$GGroupWithExpensesData_expenses_splits_toUser
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_splits_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GGroupWithExpensesData_expenses_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsDataSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData,
    _$GExpenseMixSplitFieldsData
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GExpenseMixSplitFieldsData_expense)));
    }
    value = object.split;
    if (value != null) {
      result
        ..add('split')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GExpenseMixSplitFieldsData_split)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseMixSplitFieldsData_expense))!
              as GExpenseMixSplitFieldsData_expense);
          break;
        case 'split':
          result.split.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseMixSplitFieldsData_split))!
              as GExpenseMixSplitFieldsData_split);
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_expenseSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_expense> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_expense,
    _$GExpenseMixSplitFieldsData_expense
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GExpenseMixSplitFieldsData_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_splitSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_split> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_split,
    _$GExpenseMixSplitFieldsData_split
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_split';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_split object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GExpenseMixSplitFieldsData_split_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GExpenseMixSplitFieldsData_split_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData_split deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_splitBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GExpenseMixSplitFieldsData_split_fromUser))!
              as GExpenseMixSplitFieldsData_split_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseMixSplitFieldsData_split_toUser))!
              as GExpenseMixSplitFieldsData_split_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_split_fromUserSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_split_fromUser> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_split_fromUser,
    _$GExpenseMixSplitFieldsData_split_fromUser
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_split_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_split_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData_split_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_split_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_split_toUserSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_split_toUser> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_split_toUser,
    _$GExpenseMixSplitFieldsData_split_toUser
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_split_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_split_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData_split_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_split_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData extends GuserData {
  @override
  final String G__typename;
  @override
  final GuserData_user user;

  factory _$GuserData([void Function(GuserDataBuilder)? updates]) =>
      (new GuserDataBuilder()..update(updates))._build();

  _$GuserData._({required this.G__typename, required this.user}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(user, r'GuserData', 'user');
  }

  @override
  GuserData rebuild(void Function(GuserDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserDataBuilder toBuilder() => new GuserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData &&
        G__typename == other.G__typename &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData')
          ..add('G__typename', G__typename)
          ..add('user', user))
        .toString();
  }
}

class GuserDataBuilder implements Builder<GuserData, GuserDataBuilder> {
  _$GuserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GuserData_user? _user;
  GuserData_user? get user => _$this._user;
  set user(GuserData_user? user) => _$this._user = user;

  GuserDataBuilder() {
    GuserData._initializeBuilder(this);
  }

  GuserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _user = $v.user;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData;
  }

  @override
  void update(void Function(GuserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData build() => _build();

  _$GuserData _build() {
    final _$result = _$v ??
        new _$GuserData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GuserData', 'G__typename'),
            user: BuiltValueNullFieldError.checkNotNull(
                user, r'GuserData', 'user'));
    replace(_$result);
    return _$result;
  }
}

class _$GuserData_user__base extends GuserData_user__base {
  @override
  final String G__typename;

  factory _$GuserData_user__base(
          [void Function(GuserData_user__baseBuilder)? updates]) =>
      (new GuserData_user__baseBuilder()..update(updates))._build();

  _$GuserData_user__base._({required this.G__typename}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData_user__base', 'G__typename');
  }

  @override
  GuserData_user__base rebuild(
          void Function(GuserData_user__baseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserData_user__baseBuilder toBuilder() =>
      new GuserData_user__baseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData_user__base && G__typename == other.G__typename;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData_user__base')
          ..add('G__typename', G__typename))
        .toString();
  }
}

class GuserData_user__baseBuilder
    implements Builder<GuserData_user__base, GuserData_user__baseBuilder> {
  _$GuserData_user__base? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GuserData_user__baseBuilder() {
    GuserData_user__base._initializeBuilder(this);
  }

  GuserData_user__baseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData_user__base other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData_user__base;
  }

  @override
  void update(void Function(GuserData_user__baseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData_user__base build() => _build();

  _$GuserData_user__base _build() {
    final _$result = _$v ??
        new _$GuserData_user__base._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GuserData_user__base', 'G__typename'));
    replace(_$result);
    return _$result;
  }
}

class _$GuserData_user__asRegistered extends GuserData_user__asRegistered {
  @override
  final String G__typename;
  @override
  final GuserData_user__asRegistered_user user;

  factory _$GuserData_user__asRegistered(
          [void Function(GuserData_user__asRegisteredBuilder)? updates]) =>
      (new GuserData_user__asRegisteredBuilder()..update(updates))._build();

  _$GuserData_user__asRegistered._(
      {required this.G__typename, required this.user})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData_user__asRegistered', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        user, r'GuserData_user__asRegistered', 'user');
  }

  @override
  GuserData_user__asRegistered rebuild(
          void Function(GuserData_user__asRegisteredBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserData_user__asRegisteredBuilder toBuilder() =>
      new GuserData_user__asRegisteredBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData_user__asRegistered &&
        G__typename == other.G__typename &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData_user__asRegistered')
          ..add('G__typename', G__typename)
          ..add('user', user))
        .toString();
  }
}

class GuserData_user__asRegisteredBuilder
    implements
        Builder<GuserData_user__asRegistered,
            GuserData_user__asRegisteredBuilder> {
  _$GuserData_user__asRegistered? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GuserData_user__asRegistered_userBuilder? _user;
  GuserData_user__asRegistered_userBuilder get user =>
      _$this._user ??= new GuserData_user__asRegistered_userBuilder();
  set user(GuserData_user__asRegistered_userBuilder? user) =>
      _$this._user = user;

  GuserData_user__asRegisteredBuilder() {
    GuserData_user__asRegistered._initializeBuilder(this);
  }

  GuserData_user__asRegisteredBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _user = $v.user.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData_user__asRegistered other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData_user__asRegistered;
  }

  @override
  void update(void Function(GuserData_user__asRegisteredBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData_user__asRegistered build() => _build();

  _$GuserData_user__asRegistered _build() {
    _$GuserData_user__asRegistered _$result;
    try {
      _$result = _$v ??
          new _$GuserData_user__asRegistered._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GuserData_user__asRegistered', 'G__typename'),
              user: user.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'user';
        user.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GuserData_user__asRegistered', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GuserData_user__asRegistered_user
    extends GuserData_user__asRegistered_user {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GuserData_user__asRegistered_user(
          [void Function(GuserData_user__asRegistered_userBuilder)? updates]) =>
      (new GuserData_user__asRegistered_userBuilder()..update(updates))
          ._build();

  _$GuserData_user__asRegistered_user._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData_user__asRegistered_user', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GuserData_user__asRegistered_user', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GuserData_user__asRegistered_user', 'isSignedUp');
  }

  @override
  GuserData_user__asRegistered_user rebuild(
          void Function(GuserData_user__asRegistered_userBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserData_user__asRegistered_userBuilder toBuilder() =>
      new GuserData_user__asRegistered_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData_user__asRegistered_user &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData_user__asRegistered_user')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GuserData_user__asRegistered_userBuilder
    implements
        Builder<GuserData_user__asRegistered_user,
            GuserData_user__asRegistered_userBuilder> {
  _$GuserData_user__asRegistered_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GuserData_user__asRegistered_userBuilder() {
    GuserData_user__asRegistered_user._initializeBuilder(this);
  }

  GuserData_user__asRegistered_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData_user__asRegistered_user other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData_user__asRegistered_user;
  }

  @override
  void update(
      void Function(GuserData_user__asRegistered_userBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData_user__asRegistered_user build() => _build();

  _$GuserData_user__asRegistered_user _build() {
    final _$result = _$v ??
        new _$GuserData_user__asRegistered_user._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GuserData_user__asRegistered_user', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GuserData_user__asRegistered_user', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GuserData_user__asRegistered_user', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GuserData_user__asUnregistered extends GuserData_user__asUnregistered {
  @override
  final String G__typename;
  @override
  final String? phone;

  factory _$GuserData_user__asUnregistered(
          [void Function(GuserData_user__asUnregisteredBuilder)? updates]) =>
      (new GuserData_user__asUnregisteredBuilder()..update(updates))._build();

  _$GuserData_user__asUnregistered._({required this.G__typename, this.phone})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData_user__asUnregistered', 'G__typename');
  }

  @override
  GuserData_user__asUnregistered rebuild(
          void Function(GuserData_user__asUnregisteredBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserData_user__asUnregisteredBuilder toBuilder() =>
      new GuserData_user__asUnregisteredBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData_user__asUnregistered &&
        G__typename == other.G__typename &&
        phone == other.phone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData_user__asUnregistered')
          ..add('G__typename', G__typename)
          ..add('phone', phone))
        .toString();
  }
}

class GuserData_user__asUnregisteredBuilder
    implements
        Builder<GuserData_user__asUnregistered,
            GuserData_user__asUnregisteredBuilder> {
  _$GuserData_user__asUnregistered? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  GuserData_user__asUnregisteredBuilder() {
    GuserData_user__asUnregistered._initializeBuilder(this);
  }

  GuserData_user__asUnregisteredBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _phone = $v.phone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData_user__asUnregistered other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData_user__asUnregistered;
  }

  @override
  void update(void Function(GuserData_user__asUnregisteredBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData_user__asUnregistered build() => _build();

  _$GuserData_user__asUnregistered _build() {
    final _$result = _$v ??
        new _$GuserData_user__asUnregistered._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GuserData_user__asUnregistered', 'G__typename'),
            phone: phone);
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData extends GgroupsData {
  @override
  final String G__typename;
  @override
  final BuiltList<GgroupsData_groups> groups;

  factory _$GgroupsData([void Function(GgroupsDataBuilder)? updates]) =>
      (new GgroupsDataBuilder()..update(updates))._build();

  _$GgroupsData._({required this.G__typename, required this.groups})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(groups, r'GgroupsData', 'groups');
  }

  @override
  GgroupsData rebuild(void Function(GgroupsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsDataBuilder toBuilder() => new GgroupsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData &&
        G__typename == other.G__typename &&
        groups == other.groups;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, groups.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData')
          ..add('G__typename', G__typename)
          ..add('groups', groups))
        .toString();
  }
}

class GgroupsDataBuilder implements Builder<GgroupsData, GgroupsDataBuilder> {
  _$GgroupsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GgroupsData_groups>? _groups;
  ListBuilder<GgroupsData_groups> get groups =>
      _$this._groups ??= new ListBuilder<GgroupsData_groups>();
  set groups(ListBuilder<GgroupsData_groups>? groups) =>
      _$this._groups = groups;

  GgroupsDataBuilder() {
    GgroupsData._initializeBuilder(this);
  }

  GgroupsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _groups = $v.groups.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData;
  }

  @override
  void update(void Function(GgroupsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData build() => _build();

  _$GgroupsData _build() {
    _$GgroupsData _$result;
    try {
      _$result = _$v ??
          new _$GgroupsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupsData', 'G__typename'),
              groups: groups.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'groups';
        groups.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups extends GgroupsData_groups {
  @override
  final String G__typename;
  @override
  final GgroupsData_groups_creator creator;
  @override
  final BuiltList<GgroupsData_groups_members> members;
  @override
  final int owed;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$GgroupsData_groups(
          [void Function(GgroupsData_groupsBuilder)? updates]) =>
      (new GgroupsData_groupsBuilder()..update(updates))._build();

  _$GgroupsData_groups._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.owed,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GgroupsData_groups', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GgroupsData_groups', 'members');
    BuiltValueNullFieldError.checkNotNull(owed, r'GgroupsData_groups', 'owed');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgroupsData_groups', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(id, r'GgroupsData_groups', 'id');
  }

  @override
  GgroupsData_groups rebuild(
          void Function(GgroupsData_groupsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groupsBuilder toBuilder() =>
      new GgroupsData_groupsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        owed == other.owed &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, owed.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData_groups')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('owed', owed)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GgroupsData_groupsBuilder
    implements Builder<GgroupsData_groups, GgroupsData_groupsBuilder> {
  _$GgroupsData_groups? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgroupsData_groups_creatorBuilder? _creator;
  GgroupsData_groups_creatorBuilder get creator =>
      _$this._creator ??= new GgroupsData_groups_creatorBuilder();
  set creator(GgroupsData_groups_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GgroupsData_groups_members>? _members;
  ListBuilder<GgroupsData_groups_members> get members =>
      _$this._members ??= new ListBuilder<GgroupsData_groups_members>();
  set members(ListBuilder<GgroupsData_groups_members>? members) =>
      _$this._members = members;

  int? _owed;
  int? get owed => _$this._owed;
  set owed(int? owed) => _$this._owed = owed;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GgroupsData_groupsBuilder() {
    GgroupsData_groups._initializeBuilder(this);
  }

  GgroupsData_groupsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _owed = $v.owed;
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups;
  }

  @override
  void update(void Function(GgroupsData_groupsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups build() => _build();

  _$GgroupsData_groups _build() {
    _$GgroupsData_groups _$result;
    try {
      _$result = _$v ??
          new _$GgroupsData_groups._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupsData_groups', 'G__typename'),
              creator: creator.build(),
              members: members.build(),
              owed: BuiltValueNullFieldError.checkNotNull(
                  owed, r'GgroupsData_groups', 'owed'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgroupsData_groups', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgroupsData_groups', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupsData_groups', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups_creator extends GgroupsData_groups_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupsData_groups_creator(
          [void Function(GgroupsData_groups_creatorBuilder)? updates]) =>
      (new GgroupsData_groups_creatorBuilder()..update(updates))._build();

  _$GgroupsData_groups_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupsData_groups_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupsData_groups_creator', 'isSignedUp');
  }

  @override
  GgroupsData_groups_creator rebuild(
          void Function(GgroupsData_groups_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groups_creatorBuilder toBuilder() =>
      new GgroupsData_groups_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData_groups_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupsData_groups_creatorBuilder
    implements
        Builder<GgroupsData_groups_creator, GgroupsData_groups_creatorBuilder> {
  _$GgroupsData_groups_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupsData_groups_creatorBuilder() {
    GgroupsData_groups_creator._initializeBuilder(this);
  }

  GgroupsData_groups_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups_creator;
  }

  @override
  void update(void Function(GgroupsData_groups_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups_creator build() => _build();

  _$GgroupsData_groups_creator _build() {
    final _$result = _$v ??
        new _$GgroupsData_groups_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GgroupsData_groups_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupsData_groups_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GgroupsData_groups_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups_members extends GgroupsData_groups_members {
  @override
  final String G__typename;
  @override
  final int owedInGroup;
  @override
  final GgroupsData_groups_members_member member;

  factory _$GgroupsData_groups_members(
          [void Function(GgroupsData_groups_membersBuilder)? updates]) =>
      (new GgroupsData_groups_membersBuilder()..update(updates))._build();

  _$GgroupsData_groups_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GgroupsData_groups_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GgroupsData_groups_members', 'member');
  }

  @override
  GgroupsData_groups_members rebuild(
          void Function(GgroupsData_groups_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groups_membersBuilder toBuilder() =>
      new GgroupsData_groups_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData_groups_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GgroupsData_groups_membersBuilder
    implements
        Builder<GgroupsData_groups_members, GgroupsData_groups_membersBuilder> {
  _$GgroupsData_groups_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _owedInGroup;
  int? get owedInGroup => _$this._owedInGroup;
  set owedInGroup(int? owedInGroup) => _$this._owedInGroup = owedInGroup;

  GgroupsData_groups_members_memberBuilder? _member;
  GgroupsData_groups_members_memberBuilder get member =>
      _$this._member ??= new GgroupsData_groups_members_memberBuilder();
  set member(GgroupsData_groups_members_memberBuilder? member) =>
      _$this._member = member;

  GgroupsData_groups_membersBuilder() {
    GgroupsData_groups_members._initializeBuilder(this);
  }

  GgroupsData_groups_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup;
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups_members;
  }

  @override
  void update(void Function(GgroupsData_groups_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups_members build() => _build();

  _$GgroupsData_groups_members _build() {
    _$GgroupsData_groups_members _$result;
    try {
      _$result = _$v ??
          new _$GgroupsData_groups_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupsData_groups_members', 'G__typename'),
              owedInGroup: BuiltValueNullFieldError.checkNotNull(
                  owedInGroup, r'GgroupsData_groups_members', 'owedInGroup'),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupsData_groups_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups_members_member
    extends GgroupsData_groups_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupsData_groups_members_member(
          [void Function(GgroupsData_groups_members_memberBuilder)? updates]) =>
      (new GgroupsData_groups_members_memberBuilder()..update(updates))
          ._build();

  _$GgroupsData_groups_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupsData_groups_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupsData_groups_members_member', 'isSignedUp');
  }

  @override
  GgroupsData_groups_members_member rebuild(
          void Function(GgroupsData_groups_members_memberBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groups_members_memberBuilder toBuilder() =>
      new GgroupsData_groups_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData_groups_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupsData_groups_members_memberBuilder
    implements
        Builder<GgroupsData_groups_members_member,
            GgroupsData_groups_members_memberBuilder> {
  _$GgroupsData_groups_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupsData_groups_members_memberBuilder() {
    GgroupsData_groups_members_member._initializeBuilder(this);
  }

  GgroupsData_groups_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups_members_member;
  }

  @override
  void update(
      void Function(GgroupsData_groups_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups_members_member build() => _build();

  _$GgroupsData_groups_members_member _build() {
    final _$result = _$v ??
        new _$GgroupsData_groups_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupsData_groups_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupsData_groups_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgroupsData_groups_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Ginteracted_usersData extends Ginteracted_usersData {
  @override
  final String G__typename;
  @override
  final BuiltList<Ginteracted_usersData_interactedUsers> interactedUsers;

  factory _$Ginteracted_usersData(
          [void Function(Ginteracted_usersDataBuilder)? updates]) =>
      (new Ginteracted_usersDataBuilder()..update(updates))._build();

  _$Ginteracted_usersData._(
      {required this.G__typename, required this.interactedUsers})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Ginteracted_usersData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        interactedUsers, r'Ginteracted_usersData', 'interactedUsers');
  }

  @override
  Ginteracted_usersData rebuild(
          void Function(Ginteracted_usersDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Ginteracted_usersDataBuilder toBuilder() =>
      new Ginteracted_usersDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Ginteracted_usersData &&
        G__typename == other.G__typename &&
        interactedUsers == other.interactedUsers;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, interactedUsers.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Ginteracted_usersData')
          ..add('G__typename', G__typename)
          ..add('interactedUsers', interactedUsers))
        .toString();
  }
}

class Ginteracted_usersDataBuilder
    implements Builder<Ginteracted_usersData, Ginteracted_usersDataBuilder> {
  _$Ginteracted_usersData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<Ginteracted_usersData_interactedUsers>? _interactedUsers;
  ListBuilder<Ginteracted_usersData_interactedUsers> get interactedUsers =>
      _$this._interactedUsers ??=
          new ListBuilder<Ginteracted_usersData_interactedUsers>();
  set interactedUsers(
          ListBuilder<Ginteracted_usersData_interactedUsers>?
              interactedUsers) =>
      _$this._interactedUsers = interactedUsers;

  Ginteracted_usersDataBuilder() {
    Ginteracted_usersData._initializeBuilder(this);
  }

  Ginteracted_usersDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _interactedUsers = $v.interactedUsers.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Ginteracted_usersData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Ginteracted_usersData;
  }

  @override
  void update(void Function(Ginteracted_usersDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Ginteracted_usersData build() => _build();

  _$Ginteracted_usersData _build() {
    _$Ginteracted_usersData _$result;
    try {
      _$result = _$v ??
          new _$Ginteracted_usersData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Ginteracted_usersData', 'G__typename'),
              interactedUsers: interactedUsers.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'interactedUsers';
        interactedUsers.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Ginteracted_usersData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Ginteracted_usersData_interactedUsers
    extends Ginteracted_usersData_interactedUsers {
  @override
  final String G__typename;
  @override
  final BuiltList<String> upiIds;
  @override
  final BuiltList<Ginteracted_usersData_interactedUsers_owes> owes;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Ginteracted_usersData_interactedUsers(
          [void Function(Ginteracted_usersData_interactedUsersBuilder)?
              updates]) =>
      (new Ginteracted_usersData_interactedUsersBuilder()..update(updates))
          ._build();

  _$Ginteracted_usersData_interactedUsers._(
      {required this.G__typename,
      required this.upiIds,
      required this.owes,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Ginteracted_usersData_interactedUsers', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        upiIds, r'Ginteracted_usersData_interactedUsers', 'upiIds');
    BuiltValueNullFieldError.checkNotNull(
        owes, r'Ginteracted_usersData_interactedUsers', 'owes');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Ginteracted_usersData_interactedUsers', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'Ginteracted_usersData_interactedUsers', 'isSignedUp');
  }

  @override
  Ginteracted_usersData_interactedUsers rebuild(
          void Function(Ginteracted_usersData_interactedUsersBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Ginteracted_usersData_interactedUsersBuilder toBuilder() =>
      new Ginteracted_usersData_interactedUsersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Ginteracted_usersData_interactedUsers &&
        G__typename == other.G__typename &&
        upiIds == other.upiIds &&
        owes == other.owes &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, upiIds.hashCode);
    _$hash = $jc(_$hash, owes.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Ginteracted_usersData_interactedUsers')
          ..add('G__typename', G__typename)
          ..add('upiIds', upiIds)
          ..add('owes', owes)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Ginteracted_usersData_interactedUsersBuilder
    implements
        Builder<Ginteracted_usersData_interactedUsers,
            Ginteracted_usersData_interactedUsersBuilder> {
  _$Ginteracted_usersData_interactedUsers? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<String>? _upiIds;
  ListBuilder<String> get upiIds =>
      _$this._upiIds ??= new ListBuilder<String>();
  set upiIds(ListBuilder<String>? upiIds) => _$this._upiIds = upiIds;

  ListBuilder<Ginteracted_usersData_interactedUsers_owes>? _owes;
  ListBuilder<Ginteracted_usersData_interactedUsers_owes> get owes =>
      _$this._owes ??=
          new ListBuilder<Ginteracted_usersData_interactedUsers_owes>();
  set owes(ListBuilder<Ginteracted_usersData_interactedUsers_owes>? owes) =>
      _$this._owes = owes;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Ginteracted_usersData_interactedUsersBuilder() {
    Ginteracted_usersData_interactedUsers._initializeBuilder(this);
  }

  Ginteracted_usersData_interactedUsersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _upiIds = $v.upiIds.toBuilder();
      _owes = $v.owes.toBuilder();
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Ginteracted_usersData_interactedUsers other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Ginteracted_usersData_interactedUsers;
  }

  @override
  void update(
      void Function(Ginteracted_usersData_interactedUsersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Ginteracted_usersData_interactedUsers build() => _build();

  _$Ginteracted_usersData_interactedUsers _build() {
    _$Ginteracted_usersData_interactedUsers _$result;
    try {
      _$result = _$v ??
          new _$Ginteracted_usersData_interactedUsers._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'Ginteracted_usersData_interactedUsers', 'G__typename'),
              upiIds: upiIds.build(),
              owes: owes.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Ginteracted_usersData_interactedUsers', 'id'),
              name: name,
              phone: phone,
              email: email,
              isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                  r'Ginteracted_usersData_interactedUsers', 'isSignedUp'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'upiIds';
        upiIds.build();
        _$failedField = 'owes';
        owes.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Ginteracted_usersData_interactedUsers',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Ginteracted_usersData_interactedUsers_owes
    extends Ginteracted_usersData_interactedUsers_owes {
  @override
  final String G__typename;
  @override
  final String groupId;
  @override
  final int amount;

  factory _$Ginteracted_usersData_interactedUsers_owes(
          [void Function(Ginteracted_usersData_interactedUsers_owesBuilder)?
              updates]) =>
      (new Ginteracted_usersData_interactedUsers_owesBuilder()..update(updates))
          ._build();

  _$Ginteracted_usersData_interactedUsers_owes._(
      {required this.G__typename, required this.groupId, required this.amount})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Ginteracted_usersData_interactedUsers_owes', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'Ginteracted_usersData_interactedUsers_owes', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Ginteracted_usersData_interactedUsers_owes', 'amount');
  }

  @override
  Ginteracted_usersData_interactedUsers_owes rebuild(
          void Function(Ginteracted_usersData_interactedUsers_owesBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Ginteracted_usersData_interactedUsers_owesBuilder toBuilder() =>
      new Ginteracted_usersData_interactedUsers_owesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Ginteracted_usersData_interactedUsers_owes &&
        G__typename == other.G__typename &&
        groupId == other.groupId &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Ginteracted_usersData_interactedUsers_owes')
          ..add('G__typename', G__typename)
          ..add('groupId', groupId)
          ..add('amount', amount))
        .toString();
  }
}

class Ginteracted_usersData_interactedUsers_owesBuilder
    implements
        Builder<Ginteracted_usersData_interactedUsers_owes,
            Ginteracted_usersData_interactedUsers_owesBuilder> {
  _$Ginteracted_usersData_interactedUsers_owes? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  Ginteracted_usersData_interactedUsers_owesBuilder() {
    Ginteracted_usersData_interactedUsers_owes._initializeBuilder(this);
  }

  Ginteracted_usersData_interactedUsers_owesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _groupId = $v.groupId;
      _amount = $v.amount;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Ginteracted_usersData_interactedUsers_owes other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Ginteracted_usersData_interactedUsers_owes;
  }

  @override
  void update(
      void Function(Ginteracted_usersData_interactedUsers_owesBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Ginteracted_usersData_interactedUsers_owes build() => _build();

  _$Ginteracted_usersData_interactedUsers_owes _build() {
    final _$result = _$v ??
        new _$Ginteracted_usersData_interactedUsers_owes._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Ginteracted_usersData_interactedUsers_owes', 'G__typename'),
            groupId: BuiltValueNullFieldError.checkNotNull(groupId,
                r'Ginteracted_usersData_interactedUsers_owes', 'groupId'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'Ginteracted_usersData_interactedUsers_owes', 'amount'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData extends GgroupData {
  @override
  final String G__typename;
  @override
  final GgroupData_group group;

  factory _$GgroupData([void Function(GgroupDataBuilder)? updates]) =>
      (new GgroupDataBuilder()..update(updates))._build();

  _$GgroupData._({required this.G__typename, required this.group}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(group, r'GgroupData', 'group');
  }

  @override
  GgroupData rebuild(void Function(GgroupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupDataBuilder toBuilder() => new GgroupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData &&
        G__typename == other.G__typename &&
        group == other.group;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData')
          ..add('G__typename', G__typename)
          ..add('group', group))
        .toString();
  }
}

class GgroupDataBuilder implements Builder<GgroupData, GgroupDataBuilder> {
  _$GgroupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgroupData_groupBuilder? _group;
  GgroupData_groupBuilder get group =>
      _$this._group ??= new GgroupData_groupBuilder();
  set group(GgroupData_groupBuilder? group) => _$this._group = group;

  GgroupDataBuilder() {
    GgroupData._initializeBuilder(this);
  }

  GgroupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _group = $v.group.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData;
  }

  @override
  void update(void Function(GgroupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData build() => _build();

  _$GgroupData _build() {
    _$GgroupData _$result;
    try {
      _$result = _$v ??
          new _$GgroupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData', 'G__typename'),
              group: group.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'group';
        group.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group extends GgroupData_group {
  @override
  final String G__typename;
  @override
  final BuiltList<GgroupData_group_expenses> expenses;
  @override
  final GgroupData_group_creator creator;
  @override
  final BuiltList<GgroupData_group_members> members;
  @override
  final int owed;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$GgroupData_group(
          [void Function(GgroupData_groupBuilder)? updates]) =>
      (new GgroupData_groupBuilder()..update(updates))._build();

  _$GgroupData_group._(
      {required this.G__typename,
      required this.expenses,
      required this.creator,
      required this.members,
      required this.owed,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        expenses, r'GgroupData_group', 'expenses');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GgroupData_group', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GgroupData_group', 'members');
    BuiltValueNullFieldError.checkNotNull(owed, r'GgroupData_group', 'owed');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgroupData_group', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(id, r'GgroupData_group', 'id');
  }

  @override
  GgroupData_group rebuild(void Function(GgroupData_groupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_groupBuilder toBuilder() =>
      new GgroupData_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group &&
        G__typename == other.G__typename &&
        expenses == other.expenses &&
        creator == other.creator &&
        members == other.members &&
        owed == other.owed &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expenses.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, owed.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group')
          ..add('G__typename', G__typename)
          ..add('expenses', expenses)
          ..add('creator', creator)
          ..add('members', members)
          ..add('owed', owed)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GgroupData_groupBuilder
    implements Builder<GgroupData_group, GgroupData_groupBuilder> {
  _$GgroupData_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GgroupData_group_expenses>? _expenses;
  ListBuilder<GgroupData_group_expenses> get expenses =>
      _$this._expenses ??= new ListBuilder<GgroupData_group_expenses>();
  set expenses(ListBuilder<GgroupData_group_expenses>? expenses) =>
      _$this._expenses = expenses;

  GgroupData_group_creatorBuilder? _creator;
  GgroupData_group_creatorBuilder get creator =>
      _$this._creator ??= new GgroupData_group_creatorBuilder();
  set creator(GgroupData_group_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GgroupData_group_members>? _members;
  ListBuilder<GgroupData_group_members> get members =>
      _$this._members ??= new ListBuilder<GgroupData_group_members>();
  set members(ListBuilder<GgroupData_group_members>? members) =>
      _$this._members = members;

  int? _owed;
  int? get owed => _$this._owed;
  set owed(int? owed) => _$this._owed = owed;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GgroupData_groupBuilder() {
    GgroupData_group._initializeBuilder(this);
  }

  GgroupData_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expenses = $v.expenses.toBuilder();
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _owed = $v.owed;
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group;
  }

  @override
  void update(void Function(GgroupData_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group build() => _build();

  _$GgroupData_group _build() {
    _$GgroupData_group _$result;
    try {
      _$result = _$v ??
          new _$GgroupData_group._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData_group', 'G__typename'),
              expenses: expenses.build(),
              creator: creator.build(),
              members: members.build(),
              owed: BuiltValueNullFieldError.checkNotNull(
                  owed, r'GgroupData_group', 'owed'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgroupData_group', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgroupData_group', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expenses';
        expenses.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData_group', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses extends GgroupData_group_expenses {
  @override
  final String G__typename;
  @override
  final GgroupData_group_expenses_creator creator;
  @override
  final BuiltList<GgroupData_group_expenses_splits> splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GgroupData_group_expenses(
          [void Function(GgroupData_group_expensesBuilder)? updates]) =>
      (new GgroupData_group_expensesBuilder()..update(updates))._build();

  _$GgroupData_group_expenses._(
      {required this.G__typename,
      required this.creator,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GgroupData_group_expenses', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GgroupData_group_expenses', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GgroupData_group_expenses', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgroupData_group_expenses', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgroupData_group_expenses', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GgroupData_group_expenses', 'creatorId');
  }

  @override
  GgroupData_group_expenses rebuild(
          void Function(GgroupData_group_expensesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expensesBuilder toBuilder() =>
      new GgroupData_group_expensesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_expenses')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GgroupData_group_expensesBuilder
    implements
        Builder<GgroupData_group_expenses, GgroupData_group_expensesBuilder> {
  _$GgroupData_group_expenses? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgroupData_group_expenses_creatorBuilder? _creator;
  GgroupData_group_expenses_creatorBuilder get creator =>
      _$this._creator ??= new GgroupData_group_expenses_creatorBuilder();
  set creator(GgroupData_group_expenses_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GgroupData_group_expenses_splits>? _splits;
  ListBuilder<GgroupData_group_expenses_splits> get splits =>
      _$this._splits ??= new ListBuilder<GgroupData_group_expenses_splits>();
  set splits(ListBuilder<GgroupData_group_expenses_splits>? splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GgroupData_group_expensesBuilder() {
    GgroupData_group_expenses._initializeBuilder(this);
  }

  GgroupData_group_expensesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses;
  }

  @override
  void update(void Function(GgroupData_group_expensesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses build() => _build();

  _$GgroupData_group_expenses _build() {
    _$GgroupData_group_expenses _$result;
    try {
      _$result = _$v ??
          new _$GgroupData_group_expenses._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData_group_expenses', 'G__typename'),
              creator: creator.build(),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgroupData_group_expenses', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GgroupData_group_expenses', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgroupData_group_expenses', 'createdAt'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GgroupData_group_expenses', 'amount'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GgroupData_group_expenses', 'creatorId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'splits';
        splits.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData_group_expenses', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_creator
    extends GgroupData_group_expenses_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_expenses_creator(
          [void Function(GgroupData_group_expenses_creatorBuilder)? updates]) =>
      (new GgroupData_group_expenses_creatorBuilder()..update(updates))
          ._build();

  _$GgroupData_group_expenses_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_expenses_creator', 'isSignedUp');
  }

  @override
  GgroupData_group_expenses_creator rebuild(
          void Function(GgroupData_group_expenses_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_creatorBuilder toBuilder() =>
      new GgroupData_group_expenses_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_expenses_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_expenses_creatorBuilder
    implements
        Builder<GgroupData_group_expenses_creator,
            GgroupData_group_expenses_creatorBuilder> {
  _$GgroupData_group_expenses_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_expenses_creatorBuilder() {
    GgroupData_group_expenses_creator._initializeBuilder(this);
  }

  GgroupData_group_expenses_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_creator;
  }

  @override
  void update(
      void Function(GgroupData_group_expenses_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_creator build() => _build();

  _$GgroupData_group_expenses_creator _build() {
    final _$result = _$v ??
        new _$GgroupData_group_expenses_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_expenses_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_expenses_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgroupData_group_expenses_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_splits
    extends GgroupData_group_expenses_splits {
  @override
  final String G__typename;
  @override
  final GgroupData_group_expenses_splits_fromUser fromUser;
  @override
  final GgroupData_group_expenses_splits_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GgroupData_group_expenses_splits(
          [void Function(GgroupData_group_expenses_splitsBuilder)? updates]) =>
      (new GgroupData_group_expenses_splitsBuilder()..update(updates))._build();

  _$GgroupData_group_expenses_splits._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GgroupData_group_expenses_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GgroupData_group_expenses_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgroupData_group_expenses_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GgroupData_group_expenses_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgroupData_group_expenses_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GgroupData_group_expenses_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GgroupData_group_expenses_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GgroupData_group_expenses_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GgroupData_group_expenses_splits', 'groupId');
  }

  @override
  GgroupData_group_expenses_splits rebuild(
          void Function(GgroupData_group_expenses_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_splitsBuilder toBuilder() =>
      new GgroupData_group_expenses_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_splits &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_expenses_splits')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GgroupData_group_expenses_splitsBuilder
    implements
        Builder<GgroupData_group_expenses_splits,
            GgroupData_group_expenses_splitsBuilder> {
  _$GgroupData_group_expenses_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgroupData_group_expenses_splits_fromUserBuilder? _fromUser;
  GgroupData_group_expenses_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GgroupData_group_expenses_splits_fromUserBuilder();
  set fromUser(GgroupData_group_expenses_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GgroupData_group_expenses_splits_toUserBuilder? _toUser;
  GgroupData_group_expenses_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new GgroupData_group_expenses_splits_toUserBuilder();
  set toUser(GgroupData_group_expenses_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GgroupData_group_expenses_splitsBuilder() {
    GgroupData_group_expenses_splits._initializeBuilder(this);
  }

  GgroupData_group_expenses_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_splits;
  }

  @override
  void update(void Function(GgroupData_group_expenses_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_splits build() => _build();

  _$GgroupData_group_expenses_splits _build() {
    _$GgroupData_group_expenses_splits _$result;
    try {
      _$result = _$v ??
          new _$GgroupData_group_expenses_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData_group_expenses_splits', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgroupData_group_expenses_splits', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GgroupData_group_expenses_splits', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GgroupData_group_expenses_splits',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgroupData_group_expenses_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GgroupData_group_expenses_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GgroupData_group_expenses_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GgroupData_group_expenses_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GgroupData_group_expenses_splits', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData_group_expenses_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_splits_fromUser
    extends GgroupData_group_expenses_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_expenses_splits_fromUser(
          [void Function(GgroupData_group_expenses_splits_fromUserBuilder)?
              updates]) =>
      (new GgroupData_group_expenses_splits_fromUserBuilder()..update(updates))
          ._build();

  _$GgroupData_group_expenses_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgroupData_group_expenses_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_expenses_splits_fromUser', 'isSignedUp');
  }

  @override
  GgroupData_group_expenses_splits_fromUser rebuild(
          void Function(GgroupData_group_expenses_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_splits_fromUserBuilder toBuilder() =>
      new GgroupData_group_expenses_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgroupData_group_expenses_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_expenses_splits_fromUserBuilder
    implements
        Builder<GgroupData_group_expenses_splits_fromUser,
            GgroupData_group_expenses_splits_fromUserBuilder> {
  _$GgroupData_group_expenses_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_expenses_splits_fromUserBuilder() {
    GgroupData_group_expenses_splits_fromUser._initializeBuilder(this);
  }

  GgroupData_group_expenses_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_splits_fromUser;
  }

  @override
  void update(
      void Function(GgroupData_group_expenses_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_splits_fromUser build() => _build();

  _$GgroupData_group_expenses_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GgroupData_group_expenses_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_expenses_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_expenses_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgroupData_group_expenses_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_splits_toUser
    extends GgroupData_group_expenses_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_expenses_splits_toUser(
          [void Function(GgroupData_group_expenses_splits_toUserBuilder)?
              updates]) =>
      (new GgroupData_group_expenses_splits_toUserBuilder()..update(updates))
          ._build();

  _$GgroupData_group_expenses_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_expenses_splits_toUser', 'isSignedUp');
  }

  @override
  GgroupData_group_expenses_splits_toUser rebuild(
          void Function(GgroupData_group_expenses_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_splits_toUserBuilder toBuilder() =>
      new GgroupData_group_expenses_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgroupData_group_expenses_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_expenses_splits_toUserBuilder
    implements
        Builder<GgroupData_group_expenses_splits_toUser,
            GgroupData_group_expenses_splits_toUserBuilder> {
  _$GgroupData_group_expenses_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_expenses_splits_toUserBuilder() {
    GgroupData_group_expenses_splits_toUser._initializeBuilder(this);
  }

  GgroupData_group_expenses_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_splits_toUser;
  }

  @override
  void update(
      void Function(GgroupData_group_expenses_splits_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_splits_toUser build() => _build();

  _$GgroupData_group_expenses_splits_toUser _build() {
    final _$result = _$v ??
        new _$GgroupData_group_expenses_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_expenses_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_expenses_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgroupData_group_expenses_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_creator extends GgroupData_group_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_creator(
          [void Function(GgroupData_group_creatorBuilder)? updates]) =>
      (new GgroupData_group_creatorBuilder()..update(updates))._build();

  _$GgroupData_group_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_creator', 'isSignedUp');
  }

  @override
  GgroupData_group_creator rebuild(
          void Function(GgroupData_group_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_creatorBuilder toBuilder() =>
      new GgroupData_group_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_creatorBuilder
    implements
        Builder<GgroupData_group_creator, GgroupData_group_creatorBuilder> {
  _$GgroupData_group_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_creatorBuilder() {
    GgroupData_group_creator._initializeBuilder(this);
  }

  GgroupData_group_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_creator;
  }

  @override
  void update(void Function(GgroupData_group_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_creator build() => _build();

  _$GgroupData_group_creator _build() {
    final _$result = _$v ??
        new _$GgroupData_group_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GgroupData_group_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GgroupData_group_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_members extends GgroupData_group_members {
  @override
  final String G__typename;
  @override
  final int owedInGroup;
  @override
  final GgroupData_group_members_member member;

  factory _$GgroupData_group_members(
          [void Function(GgroupData_group_membersBuilder)? updates]) =>
      (new GgroupData_group_membersBuilder()..update(updates))._build();

  _$GgroupData_group_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GgroupData_group_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GgroupData_group_members', 'member');
  }

  @override
  GgroupData_group_members rebuild(
          void Function(GgroupData_group_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_membersBuilder toBuilder() =>
      new GgroupData_group_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GgroupData_group_membersBuilder
    implements
        Builder<GgroupData_group_members, GgroupData_group_membersBuilder> {
  _$GgroupData_group_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _owedInGroup;
  int? get owedInGroup => _$this._owedInGroup;
  set owedInGroup(int? owedInGroup) => _$this._owedInGroup = owedInGroup;

  GgroupData_group_members_memberBuilder? _member;
  GgroupData_group_members_memberBuilder get member =>
      _$this._member ??= new GgroupData_group_members_memberBuilder();
  set member(GgroupData_group_members_memberBuilder? member) =>
      _$this._member = member;

  GgroupData_group_membersBuilder() {
    GgroupData_group_members._initializeBuilder(this);
  }

  GgroupData_group_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup;
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_members;
  }

  @override
  void update(void Function(GgroupData_group_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_members build() => _build();

  _$GgroupData_group_members _build() {
    _$GgroupData_group_members _$result;
    try {
      _$result = _$v ??
          new _$GgroupData_group_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData_group_members', 'G__typename'),
              owedInGroup: BuiltValueNullFieldError.checkNotNull(
                  owedInGroup, r'GgroupData_group_members', 'owedInGroup'),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData_group_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_members_member
    extends GgroupData_group_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_members_member(
          [void Function(GgroupData_group_members_memberBuilder)? updates]) =>
      (new GgroupData_group_members_memberBuilder()..update(updates))._build();

  _$GgroupData_group_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_members_member', 'isSignedUp');
  }

  @override
  GgroupData_group_members_member rebuild(
          void Function(GgroupData_group_members_memberBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_members_memberBuilder toBuilder() =>
      new GgroupData_group_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_members_memberBuilder
    implements
        Builder<GgroupData_group_members_member,
            GgroupData_group_members_memberBuilder> {
  _$GgroupData_group_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_members_memberBuilder() {
    GgroupData_group_members_member._initializeBuilder(this);
  }

  GgroupData_group_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_members_member;
  }

  @override
  void update(void Function(GgroupData_group_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_members_member build() => _build();

  _$GgroupData_group_members_member _build() {
    final _$result = _$v ??
        new _$GgroupData_group_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GgroupData_group_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GgroupData_group_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsignupData extends GsignupData {
  @override
  final String G__typename;
  @override
  final GsignupData_signup signup;

  factory _$GsignupData([void Function(GsignupDataBuilder)? updates]) =>
      (new GsignupDataBuilder()..update(updates))._build();

  _$GsignupData._({required this.G__typename, required this.signup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsignupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(signup, r'GsignupData', 'signup');
  }

  @override
  GsignupData rebuild(void Function(GsignupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsignupDataBuilder toBuilder() => new GsignupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsignupData &&
        G__typename == other.G__typename &&
        signup == other.signup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, signup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsignupData')
          ..add('G__typename', G__typename)
          ..add('signup', signup))
        .toString();
  }
}

class GsignupDataBuilder implements Builder<GsignupData, GsignupDataBuilder> {
  _$GsignupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsignupData_signupBuilder? _signup;
  GsignupData_signupBuilder get signup =>
      _$this._signup ??= new GsignupData_signupBuilder();
  set signup(GsignupData_signupBuilder? signup) => _$this._signup = signup;

  GsignupDataBuilder() {
    GsignupData._initializeBuilder(this);
  }

  GsignupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _signup = $v.signup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsignupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsignupData;
  }

  @override
  void update(void Function(GsignupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsignupData build() => _build();

  _$GsignupData _build() {
    _$GsignupData _$result;
    try {
      _$result = _$v ??
          new _$GsignupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsignupData', 'G__typename'),
              signup: signup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'signup';
        signup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsignupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsignupData_signup extends GsignupData_signup {
  @override
  final String G__typename;
  @override
  final GsignupData_signup_user user;
  @override
  final GsignupData_signup_tokens tokens;

  factory _$GsignupData_signup(
          [void Function(GsignupData_signupBuilder)? updates]) =>
      (new GsignupData_signupBuilder()..update(updates))._build();

  _$GsignupData_signup._(
      {required this.G__typename, required this.user, required this.tokens})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsignupData_signup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(user, r'GsignupData_signup', 'user');
    BuiltValueNullFieldError.checkNotNull(
        tokens, r'GsignupData_signup', 'tokens');
  }

  @override
  GsignupData_signup rebuild(
          void Function(GsignupData_signupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsignupData_signupBuilder toBuilder() =>
      new GsignupData_signupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsignupData_signup &&
        G__typename == other.G__typename &&
        user == other.user &&
        tokens == other.tokens;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jc(_$hash, tokens.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsignupData_signup')
          ..add('G__typename', G__typename)
          ..add('user', user)
          ..add('tokens', tokens))
        .toString();
  }
}

class GsignupData_signupBuilder
    implements Builder<GsignupData_signup, GsignupData_signupBuilder> {
  _$GsignupData_signup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsignupData_signup_userBuilder? _user;
  GsignupData_signup_userBuilder get user =>
      _$this._user ??= new GsignupData_signup_userBuilder();
  set user(GsignupData_signup_userBuilder? user) => _$this._user = user;

  GsignupData_signup_tokensBuilder? _tokens;
  GsignupData_signup_tokensBuilder get tokens =>
      _$this._tokens ??= new GsignupData_signup_tokensBuilder();
  set tokens(GsignupData_signup_tokensBuilder? tokens) =>
      _$this._tokens = tokens;

  GsignupData_signupBuilder() {
    GsignupData_signup._initializeBuilder(this);
  }

  GsignupData_signupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _user = $v.user.toBuilder();
      _tokens = $v.tokens.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsignupData_signup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsignupData_signup;
  }

  @override
  void update(void Function(GsignupData_signupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsignupData_signup build() => _build();

  _$GsignupData_signup _build() {
    _$GsignupData_signup _$result;
    try {
      _$result = _$v ??
          new _$GsignupData_signup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsignupData_signup', 'G__typename'),
              user: user.build(),
              tokens: tokens.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'user';
        user.build();
        _$failedField = 'tokens';
        tokens.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsignupData_signup', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsignupData_signup_user extends GsignupData_signup_user {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsignupData_signup_user(
          [void Function(GsignupData_signup_userBuilder)? updates]) =>
      (new GsignupData_signup_userBuilder()..update(updates))._build();

  _$GsignupData_signup_user._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsignupData_signup_user', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GsignupData_signup_user', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsignupData_signup_user', 'isSignedUp');
  }

  @override
  GsignupData_signup_user rebuild(
          void Function(GsignupData_signup_userBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsignupData_signup_userBuilder toBuilder() =>
      new GsignupData_signup_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsignupData_signup_user &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsignupData_signup_user')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsignupData_signup_userBuilder
    implements
        Builder<GsignupData_signup_user, GsignupData_signup_userBuilder> {
  _$GsignupData_signup_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsignupData_signup_userBuilder() {
    GsignupData_signup_user._initializeBuilder(this);
  }

  GsignupData_signup_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsignupData_signup_user other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsignupData_signup_user;
  }

  @override
  void update(void Function(GsignupData_signup_userBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsignupData_signup_user build() => _build();

  _$GsignupData_signup_user _build() {
    final _$result = _$v ??
        new _$GsignupData_signup_user._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GsignupData_signup_user', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsignupData_signup_user', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GsignupData_signup_user', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsignupData_signup_tokens extends GsignupData_signup_tokens {
  @override
  final String G__typename;
  @override
  final String accessToken;
  @override
  final String refreshToken;

  factory _$GsignupData_signup_tokens(
          [void Function(GsignupData_signup_tokensBuilder)? updates]) =>
      (new GsignupData_signup_tokensBuilder()..update(updates))._build();

  _$GsignupData_signup_tokens._(
      {required this.G__typename,
      required this.accessToken,
      required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsignupData_signup_tokens', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        accessToken, r'GsignupData_signup_tokens', 'accessToken');
    BuiltValueNullFieldError.checkNotNull(
        refreshToken, r'GsignupData_signup_tokens', 'refreshToken');
  }

  @override
  GsignupData_signup_tokens rebuild(
          void Function(GsignupData_signup_tokensBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsignupData_signup_tokensBuilder toBuilder() =>
      new GsignupData_signup_tokensBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsignupData_signup_tokens &&
        G__typename == other.G__typename &&
        accessToken == other.accessToken &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, accessToken.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsignupData_signup_tokens')
          ..add('G__typename', G__typename)
          ..add('accessToken', accessToken)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class GsignupData_signup_tokensBuilder
    implements
        Builder<GsignupData_signup_tokens, GsignupData_signup_tokensBuilder> {
  _$GsignupData_signup_tokens? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  GsignupData_signup_tokensBuilder() {
    GsignupData_signup_tokens._initializeBuilder(this);
  }

  GsignupData_signup_tokensBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _accessToken = $v.accessToken;
      _refreshToken = $v.refreshToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsignupData_signup_tokens other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsignupData_signup_tokens;
  }

  @override
  void update(void Function(GsignupData_signup_tokensBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsignupData_signup_tokens build() => _build();

  _$GsignupData_signup_tokens _build() {
    final _$result = _$v ??
        new _$GsignupData_signup_tokens._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GsignupData_signup_tokens', 'G__typename'),
            accessToken: BuiltValueNullFieldError.checkNotNull(
                accessToken, r'GsignupData_signup_tokens', 'accessToken'),
            refreshToken: BuiltValueNullFieldError.checkNotNull(
                refreshToken, r'GsignupData_signup_tokens', 'refreshToken'));
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData extends Gcreate_groupData {
  @override
  final String G__typename;
  @override
  final Gcreate_groupData_createGroup createGroup;

  factory _$Gcreate_groupData(
          [void Function(Gcreate_groupDataBuilder)? updates]) =>
      (new Gcreate_groupDataBuilder()..update(updates))._build();

  _$Gcreate_groupData._({required this.G__typename, required this.createGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gcreate_groupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        createGroup, r'Gcreate_groupData', 'createGroup');
  }

  @override
  Gcreate_groupData rebuild(void Function(Gcreate_groupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupDataBuilder toBuilder() =>
      new Gcreate_groupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData &&
        G__typename == other.G__typename &&
        createGroup == other.createGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, createGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gcreate_groupData')
          ..add('G__typename', G__typename)
          ..add('createGroup', createGroup))
        .toString();
  }
}

class Gcreate_groupDataBuilder
    implements Builder<Gcreate_groupData, Gcreate_groupDataBuilder> {
  _$Gcreate_groupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gcreate_groupData_createGroupBuilder? _createGroup;
  Gcreate_groupData_createGroupBuilder get createGroup =>
      _$this._createGroup ??= new Gcreate_groupData_createGroupBuilder();
  set createGroup(Gcreate_groupData_createGroupBuilder? createGroup) =>
      _$this._createGroup = createGroup;

  Gcreate_groupDataBuilder() {
    Gcreate_groupData._initializeBuilder(this);
  }

  Gcreate_groupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _createGroup = $v.createGroup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData;
  }

  @override
  void update(void Function(Gcreate_groupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData build() => _build();

  _$Gcreate_groupData _build() {
    _$Gcreate_groupData _$result;
    try {
      _$result = _$v ??
          new _$Gcreate_groupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gcreate_groupData', 'G__typename'),
              createGroup: createGroup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createGroup';
        createGroup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gcreate_groupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup extends Gcreate_groupData_createGroup {
  @override
  final String G__typename;
  @override
  final Gcreate_groupData_createGroup_creator creator;
  @override
  final BuiltList<Gcreate_groupData_createGroup_members> members;
  @override
  final int owed;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$Gcreate_groupData_createGroup(
          [void Function(Gcreate_groupData_createGroupBuilder)? updates]) =>
      (new Gcreate_groupData_createGroupBuilder()..update(updates))._build();

  _$Gcreate_groupData_createGroup._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.owed,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gcreate_groupData_createGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'Gcreate_groupData_createGroup', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'Gcreate_groupData_createGroup', 'members');
    BuiltValueNullFieldError.checkNotNull(
        owed, r'Gcreate_groupData_createGroup', 'owed');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'Gcreate_groupData_createGroup', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gcreate_groupData_createGroup', 'id');
  }

  @override
  Gcreate_groupData_createGroup rebuild(
          void Function(Gcreate_groupData_createGroupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroupBuilder toBuilder() =>
      new Gcreate_groupData_createGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        owed == other.owed &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, owed.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gcreate_groupData_createGroup')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('owed', owed)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class Gcreate_groupData_createGroupBuilder
    implements
        Builder<Gcreate_groupData_createGroup,
            Gcreate_groupData_createGroupBuilder> {
  _$Gcreate_groupData_createGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gcreate_groupData_createGroup_creatorBuilder? _creator;
  Gcreate_groupData_createGroup_creatorBuilder get creator =>
      _$this._creator ??= new Gcreate_groupData_createGroup_creatorBuilder();
  set creator(Gcreate_groupData_createGroup_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<Gcreate_groupData_createGroup_members>? _members;
  ListBuilder<Gcreate_groupData_createGroup_members> get members =>
      _$this._members ??=
          new ListBuilder<Gcreate_groupData_createGroup_members>();
  set members(ListBuilder<Gcreate_groupData_createGroup_members>? members) =>
      _$this._members = members;

  int? _owed;
  int? get owed => _$this._owed;
  set owed(int? owed) => _$this._owed = owed;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  Gcreate_groupData_createGroupBuilder() {
    Gcreate_groupData_createGroup._initializeBuilder(this);
  }

  Gcreate_groupData_createGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _owed = $v.owed;
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup;
  }

  @override
  void update(void Function(Gcreate_groupData_createGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup build() => _build();

  _$Gcreate_groupData_createGroup _build() {
    _$Gcreate_groupData_createGroup _$result;
    try {
      _$result = _$v ??
          new _$Gcreate_groupData_createGroup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gcreate_groupData_createGroup', 'G__typename'),
              creator: creator.build(),
              members: members.build(),
              owed: BuiltValueNullFieldError.checkNotNull(
                  owed, r'Gcreate_groupData_createGroup', 'owed'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'Gcreate_groupData_createGroup', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Gcreate_groupData_createGroup', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gcreate_groupData_createGroup', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup_creator
    extends Gcreate_groupData_createGroup_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gcreate_groupData_createGroup_creator(
          [void Function(Gcreate_groupData_createGroup_creatorBuilder)?
              updates]) =>
      (new Gcreate_groupData_createGroup_creatorBuilder()..update(updates))
          ._build();

  _$Gcreate_groupData_createGroup_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gcreate_groupData_createGroup_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gcreate_groupData_createGroup_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'Gcreate_groupData_createGroup_creator', 'isSignedUp');
  }

  @override
  Gcreate_groupData_createGroup_creator rebuild(
          void Function(Gcreate_groupData_createGroup_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroup_creatorBuilder toBuilder() =>
      new Gcreate_groupData_createGroup_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gcreate_groupData_createGroup_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gcreate_groupData_createGroup_creatorBuilder
    implements
        Builder<Gcreate_groupData_createGroup_creator,
            Gcreate_groupData_createGroup_creatorBuilder> {
  _$Gcreate_groupData_createGroup_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gcreate_groupData_createGroup_creatorBuilder() {
    Gcreate_groupData_createGroup_creator._initializeBuilder(this);
  }

  Gcreate_groupData_createGroup_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup_creator;
  }

  @override
  void update(
      void Function(Gcreate_groupData_createGroup_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup_creator build() => _build();

  _$Gcreate_groupData_createGroup_creator _build() {
    final _$result = _$v ??
        new _$Gcreate_groupData_createGroup_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gcreate_groupData_createGroup_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gcreate_groupData_createGroup_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gcreate_groupData_createGroup_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup_members
    extends Gcreate_groupData_createGroup_members {
  @override
  final String G__typename;
  @override
  final int owedInGroup;
  @override
  final Gcreate_groupData_createGroup_members_member member;

  factory _$Gcreate_groupData_createGroup_members(
          [void Function(Gcreate_groupData_createGroup_membersBuilder)?
              updates]) =>
      (new Gcreate_groupData_createGroup_membersBuilder()..update(updates))
          ._build();

  _$Gcreate_groupData_createGroup_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gcreate_groupData_createGroup_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'Gcreate_groupData_createGroup_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'Gcreate_groupData_createGroup_members', 'member');
  }

  @override
  Gcreate_groupData_createGroup_members rebuild(
          void Function(Gcreate_groupData_createGroup_membersBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroup_membersBuilder toBuilder() =>
      new Gcreate_groupData_createGroup_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gcreate_groupData_createGroup_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class Gcreate_groupData_createGroup_membersBuilder
    implements
        Builder<Gcreate_groupData_createGroup_members,
            Gcreate_groupData_createGroup_membersBuilder> {
  _$Gcreate_groupData_createGroup_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _owedInGroup;
  int? get owedInGroup => _$this._owedInGroup;
  set owedInGroup(int? owedInGroup) => _$this._owedInGroup = owedInGroup;

  Gcreate_groupData_createGroup_members_memberBuilder? _member;
  Gcreate_groupData_createGroup_members_memberBuilder get member =>
      _$this._member ??=
          new Gcreate_groupData_createGroup_members_memberBuilder();
  set member(Gcreate_groupData_createGroup_members_memberBuilder? member) =>
      _$this._member = member;

  Gcreate_groupData_createGroup_membersBuilder() {
    Gcreate_groupData_createGroup_members._initializeBuilder(this);
  }

  Gcreate_groupData_createGroup_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup;
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup_members;
  }

  @override
  void update(
      void Function(Gcreate_groupData_createGroup_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup_members build() => _build();

  _$Gcreate_groupData_createGroup_members _build() {
    _$Gcreate_groupData_createGroup_members _$result;
    try {
      _$result = _$v ??
          new _$Gcreate_groupData_createGroup_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'Gcreate_groupData_createGroup_members', 'G__typename'),
              owedInGroup: BuiltValueNullFieldError.checkNotNull(owedInGroup,
                  r'Gcreate_groupData_createGroup_members', 'owedInGroup'),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gcreate_groupData_createGroup_members',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup_members_member
    extends Gcreate_groupData_createGroup_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gcreate_groupData_createGroup_members_member(
          [void Function(Gcreate_groupData_createGroup_members_memberBuilder)?
              updates]) =>
      (new Gcreate_groupData_createGroup_members_memberBuilder()
            ..update(updates))
          ._build();

  _$Gcreate_groupData_createGroup_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gcreate_groupData_createGroup_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gcreate_groupData_createGroup_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'Gcreate_groupData_createGroup_members_member', 'isSignedUp');
  }

  @override
  Gcreate_groupData_createGroup_members_member rebuild(
          void Function(Gcreate_groupData_createGroup_members_memberBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroup_members_memberBuilder toBuilder() =>
      new Gcreate_groupData_createGroup_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gcreate_groupData_createGroup_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gcreate_groupData_createGroup_members_memberBuilder
    implements
        Builder<Gcreate_groupData_createGroup_members_member,
            Gcreate_groupData_createGroup_members_memberBuilder> {
  _$Gcreate_groupData_createGroup_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gcreate_groupData_createGroup_members_memberBuilder() {
    Gcreate_groupData_createGroup_members_member._initializeBuilder(this);
  }

  Gcreate_groupData_createGroup_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup_members_member;
  }

  @override
  void update(
      void Function(Gcreate_groupData_createGroup_members_memberBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup_members_member build() => _build();

  _$Gcreate_groupData_createGroup_members_member _build() {
    final _$result = _$v ??
        new _$Gcreate_groupData_createGroup_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gcreate_groupData_createGroup_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gcreate_groupData_createGroup_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gcreate_groupData_createGroup_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_to_groupData extends Gadd_to_groupData {
  @override
  final String G__typename;
  @override
  final String addToGroupByEmail;

  factory _$Gadd_to_groupData(
          [void Function(Gadd_to_groupDataBuilder)? updates]) =>
      (new Gadd_to_groupDataBuilder()..update(updates))._build();

  _$Gadd_to_groupData._(
      {required this.G__typename, required this.addToGroupByEmail})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_to_groupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        addToGroupByEmail, r'Gadd_to_groupData', 'addToGroupByEmail');
  }

  @override
  Gadd_to_groupData rebuild(void Function(Gadd_to_groupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_to_groupDataBuilder toBuilder() =>
      new Gadd_to_groupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_to_groupData &&
        G__typename == other.G__typename &&
        addToGroupByEmail == other.addToGroupByEmail;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, addToGroupByEmail.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_to_groupData')
          ..add('G__typename', G__typename)
          ..add('addToGroupByEmail', addToGroupByEmail))
        .toString();
  }
}

class Gadd_to_groupDataBuilder
    implements Builder<Gadd_to_groupData, Gadd_to_groupDataBuilder> {
  _$Gadd_to_groupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _addToGroupByEmail;
  String? get addToGroupByEmail => _$this._addToGroupByEmail;
  set addToGroupByEmail(String? addToGroupByEmail) =>
      _$this._addToGroupByEmail = addToGroupByEmail;

  Gadd_to_groupDataBuilder() {
    Gadd_to_groupData._initializeBuilder(this);
  }

  Gadd_to_groupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _addToGroupByEmail = $v.addToGroupByEmail;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_to_groupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_to_groupData;
  }

  @override
  void update(void Function(Gadd_to_groupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_to_groupData build() => _build();

  _$Gadd_to_groupData _build() {
    final _$result = _$v ??
        new _$Gadd_to_groupData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'Gadd_to_groupData', 'G__typename'),
            addToGroupByEmail: BuiltValueNullFieldError.checkNotNull(
                addToGroupByEmail, r'Gadd_to_groupData', 'addToGroupByEmail'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData extends Gadd_expenseData {
  @override
  final String G__typename;
  @override
  final Gadd_expenseData_addExpense addExpense;

  factory _$Gadd_expenseData(
          [void Function(Gadd_expenseDataBuilder)? updates]) =>
      (new Gadd_expenseDataBuilder()..update(updates))._build();

  _$Gadd_expenseData._({required this.G__typename, required this.addExpense})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_expenseData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        addExpense, r'Gadd_expenseData', 'addExpense');
  }

  @override
  Gadd_expenseData rebuild(void Function(Gadd_expenseDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseDataBuilder toBuilder() =>
      new Gadd_expenseDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData &&
        G__typename == other.G__typename &&
        addExpense == other.addExpense;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, addExpense.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_expenseData')
          ..add('G__typename', G__typename)
          ..add('addExpense', addExpense))
        .toString();
  }
}

class Gadd_expenseDataBuilder
    implements Builder<Gadd_expenseData, Gadd_expenseDataBuilder> {
  _$Gadd_expenseData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gadd_expenseData_addExpenseBuilder? _addExpense;
  Gadd_expenseData_addExpenseBuilder get addExpense =>
      _$this._addExpense ??= new Gadd_expenseData_addExpenseBuilder();
  set addExpense(Gadd_expenseData_addExpenseBuilder? addExpense) =>
      _$this._addExpense = addExpense;

  Gadd_expenseDataBuilder() {
    Gadd_expenseData._initializeBuilder(this);
  }

  Gadd_expenseDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _addExpense = $v.addExpense.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData;
  }

  @override
  void update(void Function(Gadd_expenseDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData build() => _build();

  _$Gadd_expenseData _build() {
    _$Gadd_expenseData _$result;
    try {
      _$result = _$v ??
          new _$Gadd_expenseData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gadd_expenseData', 'G__typename'),
              addExpense: addExpense.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addExpense';
        addExpense.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gadd_expenseData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense extends Gadd_expenseData_addExpense {
  @override
  final String G__typename;
  @override
  final BuiltList<Gadd_expenseData_addExpense_splits> splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$Gadd_expenseData_addExpense(
          [void Function(Gadd_expenseData_addExpenseBuilder)? updates]) =>
      (new Gadd_expenseData_addExpenseBuilder()..update(updates))._build();

  _$Gadd_expenseData_addExpense._(
      {required this.G__typename,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_expenseData_addExpense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'Gadd_expenseData_addExpense', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'Gadd_expenseData_addExpense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'Gadd_expenseData_addExpense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'Gadd_expenseData_addExpense', 'creatorId');
  }

  @override
  Gadd_expenseData_addExpense rebuild(
          void Function(Gadd_expenseData_addExpenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpenseBuilder toBuilder() =>
      new Gadd_expenseData_addExpenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense &&
        G__typename == other.G__typename &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_expenseData_addExpense')
          ..add('G__typename', G__typename)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class Gadd_expenseData_addExpenseBuilder
    implements
        Builder<Gadd_expenseData_addExpense,
            Gadd_expenseData_addExpenseBuilder> {
  _$Gadd_expenseData_addExpense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<Gadd_expenseData_addExpense_splits>? _splits;
  ListBuilder<Gadd_expenseData_addExpense_splits> get splits =>
      _$this._splits ??= new ListBuilder<Gadd_expenseData_addExpense_splits>();
  set splits(ListBuilder<Gadd_expenseData_addExpense_splits>? splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  Gadd_expenseData_addExpenseBuilder() {
    Gadd_expenseData_addExpense._initializeBuilder(this);
  }

  Gadd_expenseData_addExpenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense;
  }

  @override
  void update(void Function(Gadd_expenseData_addExpenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense build() => _build();

  _$Gadd_expenseData_addExpense _build() {
    _$Gadd_expenseData_addExpense _$result;
    try {
      _$result = _$v ??
          new _$Gadd_expenseData_addExpense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gadd_expenseData_addExpense', 'G__typename'),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Gadd_expenseData_addExpense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'Gadd_expenseData_addExpense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'Gadd_expenseData_addExpense', 'createdAt'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'Gadd_expenseData_addExpense', 'amount'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'Gadd_expenseData_addExpense', 'creatorId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'splits';
        splits.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gadd_expenseData_addExpense', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits
    extends Gadd_expenseData_addExpense_splits {
  @override
  final String G__typename;
  @override
  final Gadd_expenseData_addExpense_splits_expense? expense;
  @override
  final Gadd_expenseData_addExpense_splits_group group;
  @override
  final Gadd_expenseData_addExpense_splits_creator creator;
  @override
  final Gadd_expenseData_addExpense_splits_fromUser fromUser;
  @override
  final Gadd_expenseData_addExpense_splits_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$Gadd_expenseData_addExpense_splits(
          [void Function(Gadd_expenseData_addExpense_splitsBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splitsBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_expenseData_addExpense_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'Gadd_expenseData_addExpense_splits', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'Gadd_expenseData_addExpense_splits', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'Gadd_expenseData_addExpense_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'Gadd_expenseData_addExpense_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'Gadd_expenseData_addExpense_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'Gadd_expenseData_addExpense_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'Gadd_expenseData_addExpense_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'Gadd_expenseData_addExpense_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'Gadd_expenseData_addExpense_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'Gadd_expenseData_addExpense_splits', 'groupId');
  }

  @override
  Gadd_expenseData_addExpense_splits rebuild(
          void Function(Gadd_expenseData_addExpense_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splitsBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_expenseData_addExpense_splits')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splitsBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits,
            Gadd_expenseData_addExpense_splitsBuilder> {
  _$Gadd_expenseData_addExpense_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gadd_expenseData_addExpense_splits_expenseBuilder? _expense;
  Gadd_expenseData_addExpense_splits_expenseBuilder get expense =>
      _$this._expense ??=
          new Gadd_expenseData_addExpense_splits_expenseBuilder();
  set expense(Gadd_expenseData_addExpense_splits_expenseBuilder? expense) =>
      _$this._expense = expense;

  Gadd_expenseData_addExpense_splits_groupBuilder? _group;
  Gadd_expenseData_addExpense_splits_groupBuilder get group =>
      _$this._group ??= new Gadd_expenseData_addExpense_splits_groupBuilder();
  set group(Gadd_expenseData_addExpense_splits_groupBuilder? group) =>
      _$this._group = group;

  Gadd_expenseData_addExpense_splits_creatorBuilder? _creator;
  Gadd_expenseData_addExpense_splits_creatorBuilder get creator =>
      _$this._creator ??=
          new Gadd_expenseData_addExpense_splits_creatorBuilder();
  set creator(Gadd_expenseData_addExpense_splits_creatorBuilder? creator) =>
      _$this._creator = creator;

  Gadd_expenseData_addExpense_splits_fromUserBuilder? _fromUser;
  Gadd_expenseData_addExpense_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new Gadd_expenseData_addExpense_splits_fromUserBuilder();
  set fromUser(Gadd_expenseData_addExpense_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  Gadd_expenseData_addExpense_splits_toUserBuilder? _toUser;
  Gadd_expenseData_addExpense_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new Gadd_expenseData_addExpense_splits_toUserBuilder();
  set toUser(Gadd_expenseData_addExpense_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  Gadd_expenseData_addExpense_splitsBuilder() {
    Gadd_expenseData_addExpense_splits._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits build() => _build();

  _$Gadd_expenseData_addExpense_splits _build() {
    _$Gadd_expenseData_addExpense_splits _$result;
    try {
      _$result = _$v ??
          new _$Gadd_expenseData_addExpense_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gadd_expenseData_addExpense_splits', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Gadd_expenseData_addExpense_splits', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'Gadd_expenseData_addExpense_splits', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'Gadd_expenseData_addExpense_splits',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'Gadd_expenseData_addExpense_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'Gadd_expenseData_addExpense_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'Gadd_expenseData_addExpense_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'Gadd_expenseData_addExpense_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'Gadd_expenseData_addExpense_splits', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gadd_expenseData_addExpense_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_expense
    extends Gadd_expenseData_addExpense_splits_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$Gadd_expenseData_addExpense_splits_expense(
          [void Function(Gadd_expenseData_addExpense_splits_expenseBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_expenseBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'Gadd_expenseData_addExpense_splits_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'Gadd_expenseData_addExpense_splits_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense_splits_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'Gadd_expenseData_addExpense_splits_expense', 'creatorId');
  }

  @override
  Gadd_expenseData_addExpense_splits_expense rebuild(
          void Function(Gadd_expenseData_addExpense_splits_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_expenseBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_expenseBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_expense,
            Gadd_expenseData_addExpense_splits_expenseBuilder> {
  _$Gadd_expenseData_addExpense_splits_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  Gadd_expenseData_addExpense_splits_expenseBuilder() {
    Gadd_expenseData_addExpense_splits_expense._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_expense;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_expense build() => _build();

  _$Gadd_expenseData_addExpense_splits_expense _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_expense', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'Gadd_expenseData_addExpense_splits_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'Gadd_expenseData_addExpense_splits_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'Gadd_expenseData_addExpense_splits_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                r'Gadd_expenseData_addExpense_splits_expense', 'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_group
    extends Gadd_expenseData_addExpense_splits_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$Gadd_expenseData_addExpense_splits_group(
          [void Function(Gadd_expenseData_addExpense_splits_groupBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_groupBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_group', 'id');
  }

  @override
  Gadd_expenseData_addExpense_splits_group rebuild(
          void Function(Gadd_expenseData_addExpense_splits_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_groupBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_groupBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_group,
            Gadd_expenseData_addExpense_splits_groupBuilder> {
  _$Gadd_expenseData_addExpense_splits_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  Gadd_expenseData_addExpense_splits_groupBuilder() {
    Gadd_expenseData_addExpense_splits_group._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_group;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_group build() => _build();

  _$Gadd_expenseData_addExpense_splits_group _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_creator
    extends Gadd_expenseData_addExpense_splits_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gadd_expenseData_addExpense_splits_creator(
          [void Function(Gadd_expenseData_addExpense_splits_creatorBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_creatorBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'Gadd_expenseData_addExpense_splits_creator', 'isSignedUp');
  }

  @override
  Gadd_expenseData_addExpense_splits_creator rebuild(
          void Function(Gadd_expenseData_addExpense_splits_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_creatorBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_creatorBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_creator,
            Gadd_expenseData_addExpense_splits_creatorBuilder> {
  _$Gadd_expenseData_addExpense_splits_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gadd_expenseData_addExpense_splits_creatorBuilder() {
    Gadd_expenseData_addExpense_splits_creator._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_creator;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_creator build() => _build();

  _$Gadd_expenseData_addExpense_splits_creator _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gadd_expenseData_addExpense_splits_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_fromUser
    extends Gadd_expenseData_addExpense_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gadd_expenseData_addExpense_splits_fromUser(
          [void Function(Gadd_expenseData_addExpense_splits_fromUserBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_fromUserBuilder()
            ..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'Gadd_expenseData_addExpense_splits_fromUser', 'isSignedUp');
  }

  @override
  Gadd_expenseData_addExpense_splits_fromUser rebuild(
          void Function(Gadd_expenseData_addExpense_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_fromUserBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_fromUserBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_fromUser,
            Gadd_expenseData_addExpense_splits_fromUserBuilder> {
  _$Gadd_expenseData_addExpense_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gadd_expenseData_addExpense_splits_fromUserBuilder() {
    Gadd_expenseData_addExpense_splits_fromUser._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_fromUser;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_fromUser build() => _build();

  _$Gadd_expenseData_addExpense_splits_fromUser _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gadd_expenseData_addExpense_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_toUser
    extends Gadd_expenseData_addExpense_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gadd_expenseData_addExpense_splits_toUser(
          [void Function(Gadd_expenseData_addExpense_splits_toUserBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_toUserBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'Gadd_expenseData_addExpense_splits_toUser', 'isSignedUp');
  }

  @override
  Gadd_expenseData_addExpense_splits_toUser rebuild(
          void Function(Gadd_expenseData_addExpense_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_toUserBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_toUserBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_toUser,
            Gadd_expenseData_addExpense_splits_toUserBuilder> {
  _$Gadd_expenseData_addExpense_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gadd_expenseData_addExpense_splits_toUserBuilder() {
    Gadd_expenseData_addExpense_splits_toUser._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_toUser;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_toUser build() => _build();

  _$Gadd_expenseData_addExpense_splits_toUser _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gadd_expenseData_addExpense_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gsend_email_otpData extends Gsend_email_otpData {
  @override
  final String G__typename;
  @override
  final bool sendEmailOtp;

  factory _$Gsend_email_otpData(
          [void Function(Gsend_email_otpDataBuilder)? updates]) =>
      (new Gsend_email_otpDataBuilder()..update(updates))._build();

  _$Gsend_email_otpData._(
      {required this.G__typename, required this.sendEmailOtp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gsend_email_otpData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        sendEmailOtp, r'Gsend_email_otpData', 'sendEmailOtp');
  }

  @override
  Gsend_email_otpData rebuild(
          void Function(Gsend_email_otpDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gsend_email_otpDataBuilder toBuilder() =>
      new Gsend_email_otpDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gsend_email_otpData &&
        G__typename == other.G__typename &&
        sendEmailOtp == other.sendEmailOtp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, sendEmailOtp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gsend_email_otpData')
          ..add('G__typename', G__typename)
          ..add('sendEmailOtp', sendEmailOtp))
        .toString();
  }
}

class Gsend_email_otpDataBuilder
    implements Builder<Gsend_email_otpData, Gsend_email_otpDataBuilder> {
  _$Gsend_email_otpData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _sendEmailOtp;
  bool? get sendEmailOtp => _$this._sendEmailOtp;
  set sendEmailOtp(bool? sendEmailOtp) => _$this._sendEmailOtp = sendEmailOtp;

  Gsend_email_otpDataBuilder() {
    Gsend_email_otpData._initializeBuilder(this);
  }

  Gsend_email_otpDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _sendEmailOtp = $v.sendEmailOtp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gsend_email_otpData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gsend_email_otpData;
  }

  @override
  void update(void Function(Gsend_email_otpDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gsend_email_otpData build() => _build();

  _$Gsend_email_otpData _build() {
    final _$result = _$v ??
        new _$Gsend_email_otpData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'Gsend_email_otpData', 'G__typename'),
            sendEmailOtp: BuiltValueNullFieldError.checkNotNull(
                sendEmailOtp, r'Gsend_email_otpData', 'sendEmailOtp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gverify_email_otpData extends Gverify_email_otpData {
  @override
  final String G__typename;
  @override
  final Gverify_email_otpData_verifyOtp verifyOtp;

  factory _$Gverify_email_otpData(
          [void Function(Gverify_email_otpDataBuilder)? updates]) =>
      (new Gverify_email_otpDataBuilder()..update(updates))._build();

  _$Gverify_email_otpData._(
      {required this.G__typename, required this.verifyOtp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gverify_email_otpData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        verifyOtp, r'Gverify_email_otpData', 'verifyOtp');
  }

  @override
  Gverify_email_otpData rebuild(
          void Function(Gverify_email_otpDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gverify_email_otpDataBuilder toBuilder() =>
      new Gverify_email_otpDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gverify_email_otpData &&
        G__typename == other.G__typename &&
        verifyOtp == other.verifyOtp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, verifyOtp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gverify_email_otpData')
          ..add('G__typename', G__typename)
          ..add('verifyOtp', verifyOtp))
        .toString();
  }
}

class Gverify_email_otpDataBuilder
    implements Builder<Gverify_email_otpData, Gverify_email_otpDataBuilder> {
  _$Gverify_email_otpData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gverify_email_otpData_verifyOtp? _verifyOtp;
  Gverify_email_otpData_verifyOtp? get verifyOtp => _$this._verifyOtp;
  set verifyOtp(Gverify_email_otpData_verifyOtp? verifyOtp) =>
      _$this._verifyOtp = verifyOtp;

  Gverify_email_otpDataBuilder() {
    Gverify_email_otpData._initializeBuilder(this);
  }

  Gverify_email_otpDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _verifyOtp = $v.verifyOtp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gverify_email_otpData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gverify_email_otpData;
  }

  @override
  void update(void Function(Gverify_email_otpDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gverify_email_otpData build() => _build();

  _$Gverify_email_otpData _build() {
    final _$result = _$v ??
        new _$Gverify_email_otpData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'Gverify_email_otpData', 'G__typename'),
            verifyOtp: BuiltValueNullFieldError.checkNotNull(
                verifyOtp, r'Gverify_email_otpData', 'verifyOtp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gverify_email_otpData_verifyOtp__base
    extends Gverify_email_otpData_verifyOtp__base {
  @override
  final String G__typename;

  factory _$Gverify_email_otpData_verifyOtp__base(
          [void Function(Gverify_email_otpData_verifyOtp__baseBuilder)?
              updates]) =>
      (new Gverify_email_otpData_verifyOtp__baseBuilder()..update(updates))
          ._build();

  _$Gverify_email_otpData_verifyOtp__base._({required this.G__typename})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gverify_email_otpData_verifyOtp__base', 'G__typename');
  }

  @override
  Gverify_email_otpData_verifyOtp__base rebuild(
          void Function(Gverify_email_otpData_verifyOtp__baseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gverify_email_otpData_verifyOtp__baseBuilder toBuilder() =>
      new Gverify_email_otpData_verifyOtp__baseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gverify_email_otpData_verifyOtp__base &&
        G__typename == other.G__typename;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gverify_email_otpData_verifyOtp__base')
          ..add('G__typename', G__typename))
        .toString();
  }
}

class Gverify_email_otpData_verifyOtp__baseBuilder
    implements
        Builder<Gverify_email_otpData_verifyOtp__base,
            Gverify_email_otpData_verifyOtp__baseBuilder> {
  _$Gverify_email_otpData_verifyOtp__base? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gverify_email_otpData_verifyOtp__baseBuilder() {
    Gverify_email_otpData_verifyOtp__base._initializeBuilder(this);
  }

  Gverify_email_otpData_verifyOtp__baseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gverify_email_otpData_verifyOtp__base other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gverify_email_otpData_verifyOtp__base;
  }

  @override
  void update(
      void Function(Gverify_email_otpData_verifyOtp__baseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gverify_email_otpData_verifyOtp__base build() => _build();

  _$Gverify_email_otpData_verifyOtp__base _build() {
    final _$result = _$v ??
        new _$Gverify_email_otpData_verifyOtp__base._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gverify_email_otpData_verifyOtp__base', 'G__typename'));
    replace(_$result);
    return _$result;
  }
}

class _$Gverify_email_otpData_verifyOtp__asUserSignedUp
    extends Gverify_email_otpData_verifyOtp__asUserSignedUp {
  @override
  final String G__typename;
  @override
  final String accessToken;
  @override
  final String refreshToken;

  factory _$Gverify_email_otpData_verifyOtp__asUserSignedUp(
          [void Function(
                  Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder)?
              updates]) =>
      (new Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder()
            ..update(updates))
          ._build();

  _$Gverify_email_otpData_verifyOtp__asUserSignedUp._(
      {required this.G__typename,
      required this.accessToken,
      required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gverify_email_otpData_verifyOtp__asUserSignedUp', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(accessToken,
        r'Gverify_email_otpData_verifyOtp__asUserSignedUp', 'accessToken');
    BuiltValueNullFieldError.checkNotNull(refreshToken,
        r'Gverify_email_otpData_verifyOtp__asUserSignedUp', 'refreshToken');
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserSignedUp rebuild(
          void Function(Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder toBuilder() =>
      new Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gverify_email_otpData_verifyOtp__asUserSignedUp &&
        G__typename == other.G__typename &&
        accessToken == other.accessToken &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, accessToken.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gverify_email_otpData_verifyOtp__asUserSignedUp')
          ..add('G__typename', G__typename)
          ..add('accessToken', accessToken)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder
    implements
        Builder<Gverify_email_otpData_verifyOtp__asUserSignedUp,
            Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder> {
  _$Gverify_email_otpData_verifyOtp__asUserSignedUp? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder() {
    Gverify_email_otpData_verifyOtp__asUserSignedUp._initializeBuilder(this);
  }

  Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _accessToken = $v.accessToken;
      _refreshToken = $v.refreshToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gverify_email_otpData_verifyOtp__asUserSignedUp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gverify_email_otpData_verifyOtp__asUserSignedUp;
  }

  @override
  void update(
      void Function(Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserSignedUp build() => _build();

  _$Gverify_email_otpData_verifyOtp__asUserSignedUp _build() {
    final _$result = _$v ??
        new _$Gverify_email_otpData_verifyOtp__asUserSignedUp._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'Gverify_email_otpData_verifyOtp__asUserSignedUp',
                'G__typename'),
            accessToken: BuiltValueNullFieldError.checkNotNull(
                accessToken,
                r'Gverify_email_otpData_verifyOtp__asUserSignedUp',
                'accessToken'),
            refreshToken: BuiltValueNullFieldError.checkNotNull(
                refreshToken,
                r'Gverify_email_otpData_verifyOtp__asUserSignedUp',
                'refreshToken'));
    replace(_$result);
    return _$result;
  }
}

class _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp
    extends Gverify_email_otpData_verifyOtp__asUserNotSignedUp {
  @override
  final String G__typename;
  @override
  final String signupToken;

  factory _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp(
          [void Function(
                  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder)?
              updates]) =>
      (new Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder()
            ..update(updates))
          ._build();

  _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp._(
      {required this.G__typename, required this.signupToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(signupToken,
        r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp', 'signupToken');
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserNotSignedUp rebuild(
          void Function(
                  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder toBuilder() =>
      new Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gverify_email_otpData_verifyOtp__asUserNotSignedUp &&
        G__typename == other.G__typename &&
        signupToken == other.signupToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, signupToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp')
          ..add('G__typename', G__typename)
          ..add('signupToken', signupToken))
        .toString();
  }
}

class Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder
    implements
        Builder<Gverify_email_otpData_verifyOtp__asUserNotSignedUp,
            Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder> {
  _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _signupToken;
  String? get signupToken => _$this._signupToken;
  set signupToken(String? signupToken) => _$this._signupToken = signupToken;

  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder() {
    Gverify_email_otpData_verifyOtp__asUserNotSignedUp._initializeBuilder(this);
  }

  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _signupToken = $v.signupToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gverify_email_otpData_verifyOtp__asUserNotSignedUp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp;
  }

  @override
  void update(
      void Function(Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserNotSignedUp build() => _build();

  _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp _build() {
    final _$result = _$v ??
        new _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp',
                'G__typename'),
            signupToken: BuiltValueNullFieldError.checkNotNull(
                signupToken,
                r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp',
                'signupToken'));
    replace(_$result);
    return _$result;
  }
}

class _$Grefresh_tokenData extends Grefresh_tokenData {
  @override
  final String G__typename;
  @override
  final Grefresh_tokenData_refreshToken refreshToken;

  factory _$Grefresh_tokenData(
          [void Function(Grefresh_tokenDataBuilder)? updates]) =>
      (new Grefresh_tokenDataBuilder()..update(updates))._build();

  _$Grefresh_tokenData._(
      {required this.G__typename, required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Grefresh_tokenData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        refreshToken, r'Grefresh_tokenData', 'refreshToken');
  }

  @override
  Grefresh_tokenData rebuild(
          void Function(Grefresh_tokenDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Grefresh_tokenDataBuilder toBuilder() =>
      new Grefresh_tokenDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Grefresh_tokenData &&
        G__typename == other.G__typename &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Grefresh_tokenData')
          ..add('G__typename', G__typename)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class Grefresh_tokenDataBuilder
    implements Builder<Grefresh_tokenData, Grefresh_tokenDataBuilder> {
  _$Grefresh_tokenData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Grefresh_tokenData_refreshTokenBuilder? _refreshToken;
  Grefresh_tokenData_refreshTokenBuilder get refreshToken =>
      _$this._refreshToken ??= new Grefresh_tokenData_refreshTokenBuilder();
  set refreshToken(Grefresh_tokenData_refreshTokenBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Grefresh_tokenDataBuilder() {
    Grefresh_tokenData._initializeBuilder(this);
  }

  Grefresh_tokenDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _refreshToken = $v.refreshToken.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Grefresh_tokenData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Grefresh_tokenData;
  }

  @override
  void update(void Function(Grefresh_tokenDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Grefresh_tokenData build() => _build();

  _$Grefresh_tokenData _build() {
    _$Grefresh_tokenData _$result;
    try {
      _$result = _$v ??
          new _$Grefresh_tokenData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Grefresh_tokenData', 'G__typename'),
              refreshToken: refreshToken.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'refreshToken';
        refreshToken.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Grefresh_tokenData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Grefresh_tokenData_refreshToken
    extends Grefresh_tokenData_refreshToken {
  @override
  final String G__typename;
  @override
  final String accessToken;
  @override
  final String refreshToken;

  factory _$Grefresh_tokenData_refreshToken(
          [void Function(Grefresh_tokenData_refreshTokenBuilder)? updates]) =>
      (new Grefresh_tokenData_refreshTokenBuilder()..update(updates))._build();

  _$Grefresh_tokenData_refreshToken._(
      {required this.G__typename,
      required this.accessToken,
      required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Grefresh_tokenData_refreshToken', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        accessToken, r'Grefresh_tokenData_refreshToken', 'accessToken');
    BuiltValueNullFieldError.checkNotNull(
        refreshToken, r'Grefresh_tokenData_refreshToken', 'refreshToken');
  }

  @override
  Grefresh_tokenData_refreshToken rebuild(
          void Function(Grefresh_tokenData_refreshTokenBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Grefresh_tokenData_refreshTokenBuilder toBuilder() =>
      new Grefresh_tokenData_refreshTokenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Grefresh_tokenData_refreshToken &&
        G__typename == other.G__typename &&
        accessToken == other.accessToken &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, accessToken.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Grefresh_tokenData_refreshToken')
          ..add('G__typename', G__typename)
          ..add('accessToken', accessToken)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class Grefresh_tokenData_refreshTokenBuilder
    implements
        Builder<Grefresh_tokenData_refreshToken,
            Grefresh_tokenData_refreshTokenBuilder> {
  _$Grefresh_tokenData_refreshToken? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  Grefresh_tokenData_refreshTokenBuilder() {
    Grefresh_tokenData_refreshToken._initializeBuilder(this);
  }

  Grefresh_tokenData_refreshTokenBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _accessToken = $v.accessToken;
      _refreshToken = $v.refreshToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Grefresh_tokenData_refreshToken other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Grefresh_tokenData_refreshToken;
  }

  @override
  void update(void Function(Grefresh_tokenData_refreshTokenBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Grefresh_tokenData_refreshToken build() => _build();

  _$Grefresh_tokenData_refreshToken _build() {
    final _$result = _$v ??
        new _$Grefresh_tokenData_refreshToken._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'Grefresh_tokenData_refreshToken', 'G__typename'),
            accessToken: BuiltValueNullFieldError.checkNotNull(
                accessToken, r'Grefresh_tokenData_refreshToken', 'accessToken'),
            refreshToken: BuiltValueNullFieldError.checkNotNull(refreshToken,
                r'Grefresh_tokenData_refreshToken', 'refreshToken'));
    replace(_$result);
    return _$result;
  }
}

class _$GsearchUserByEmailData extends GsearchUserByEmailData {
  @override
  final String G__typename;
  @override
  final GsearchUserByEmailData_findUserByEmail findUserByEmail;

  factory _$GsearchUserByEmailData(
          [void Function(GsearchUserByEmailDataBuilder)? updates]) =>
      (new GsearchUserByEmailDataBuilder()..update(updates))._build();

  _$GsearchUserByEmailData._(
      {required this.G__typename, required this.findUserByEmail})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsearchUserByEmailData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        findUserByEmail, r'GsearchUserByEmailData', 'findUserByEmail');
  }

  @override
  GsearchUserByEmailData rebuild(
          void Function(GsearchUserByEmailDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsearchUserByEmailDataBuilder toBuilder() =>
      new GsearchUserByEmailDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsearchUserByEmailData &&
        G__typename == other.G__typename &&
        findUserByEmail == other.findUserByEmail;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, findUserByEmail.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsearchUserByEmailData')
          ..add('G__typename', G__typename)
          ..add('findUserByEmail', findUserByEmail))
        .toString();
  }
}

class GsearchUserByEmailDataBuilder
    implements Builder<GsearchUserByEmailData, GsearchUserByEmailDataBuilder> {
  _$GsearchUserByEmailData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsearchUserByEmailData_findUserByEmailBuilder? _findUserByEmail;
  GsearchUserByEmailData_findUserByEmailBuilder get findUserByEmail =>
      _$this._findUserByEmail ??=
          new GsearchUserByEmailData_findUserByEmailBuilder();
  set findUserByEmail(
          GsearchUserByEmailData_findUserByEmailBuilder? findUserByEmail) =>
      _$this._findUserByEmail = findUserByEmail;

  GsearchUserByEmailDataBuilder() {
    GsearchUserByEmailData._initializeBuilder(this);
  }

  GsearchUserByEmailDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _findUserByEmail = $v.findUserByEmail.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsearchUserByEmailData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsearchUserByEmailData;
  }

  @override
  void update(void Function(GsearchUserByEmailDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsearchUserByEmailData build() => _build();

  _$GsearchUserByEmailData _build() {
    _$GsearchUserByEmailData _$result;
    try {
      _$result = _$v ??
          new _$GsearchUserByEmailData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsearchUserByEmailData', 'G__typename'),
              findUserByEmail: findUserByEmail.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'findUserByEmail';
        findUserByEmail.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsearchUserByEmailData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsearchUserByEmailData_findUserByEmail
    extends GsearchUserByEmailData_findUserByEmail {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsearchUserByEmailData_findUserByEmail(
          [void Function(GsearchUserByEmailData_findUserByEmailBuilder)?
              updates]) =>
      (new GsearchUserByEmailData_findUserByEmailBuilder()..update(updates))
          ._build();

  _$GsearchUserByEmailData_findUserByEmail._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsearchUserByEmailData_findUserByEmail', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsearchUserByEmailData_findUserByEmail', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsearchUserByEmailData_findUserByEmail', 'isSignedUp');
  }

  @override
  GsearchUserByEmailData_findUserByEmail rebuild(
          void Function(GsearchUserByEmailData_findUserByEmailBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsearchUserByEmailData_findUserByEmailBuilder toBuilder() =>
      new GsearchUserByEmailData_findUserByEmailBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsearchUserByEmailData_findUserByEmail &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsearchUserByEmailData_findUserByEmail')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsearchUserByEmailData_findUserByEmailBuilder
    implements
        Builder<GsearchUserByEmailData_findUserByEmail,
            GsearchUserByEmailData_findUserByEmailBuilder> {
  _$GsearchUserByEmailData_findUserByEmail? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsearchUserByEmailData_findUserByEmailBuilder() {
    GsearchUserByEmailData_findUserByEmail._initializeBuilder(this);
  }

  GsearchUserByEmailData_findUserByEmailBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsearchUserByEmailData_findUserByEmail other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsearchUserByEmailData_findUserByEmail;
  }

  @override
  void update(
      void Function(GsearchUserByEmailData_findUserByEmailBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsearchUserByEmailData_findUserByEmail build() => _build();

  _$GsearchUserByEmailData_findUserByEmail _build() {
    final _$result = _$v ??
        new _$GsearchUserByEmailData_findUserByEmail._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsearchUserByEmailData_findUserByEmail', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsearchUserByEmailData_findUserByEmail', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsearchUserByEmailData_findUserByEmail', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData extends GcreateNonGroupExpenseData {
  @override
  final String G__typename;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense addNonGroupExpense;

  factory _$GcreateNonGroupExpenseData(
          [void Function(GcreateNonGroupExpenseDataBuilder)? updates]) =>
      (new GcreateNonGroupExpenseDataBuilder()..update(updates))._build();

  _$GcreateNonGroupExpenseData._(
      {required this.G__typename, required this.addNonGroupExpense})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GcreateNonGroupExpenseData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(addNonGroupExpense,
        r'GcreateNonGroupExpenseData', 'addNonGroupExpense');
  }

  @override
  GcreateNonGroupExpenseData rebuild(
          void Function(GcreateNonGroupExpenseDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseDataBuilder toBuilder() =>
      new GcreateNonGroupExpenseDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcreateNonGroupExpenseData &&
        G__typename == other.G__typename &&
        addNonGroupExpense == other.addNonGroupExpense;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, addNonGroupExpense.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GcreateNonGroupExpenseData')
          ..add('G__typename', G__typename)
          ..add('addNonGroupExpense', addNonGroupExpense))
        .toString();
  }
}

class GcreateNonGroupExpenseDataBuilder
    implements
        Builder<GcreateNonGroupExpenseData, GcreateNonGroupExpenseDataBuilder> {
  _$GcreateNonGroupExpenseData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder? _addNonGroupExpense;
  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder get addNonGroupExpense =>
      _$this._addNonGroupExpense ??=
          new GcreateNonGroupExpenseData_addNonGroupExpenseBuilder();
  set addNonGroupExpense(
          GcreateNonGroupExpenseData_addNonGroupExpenseBuilder?
              addNonGroupExpense) =>
      _$this._addNonGroupExpense = addNonGroupExpense;

  GcreateNonGroupExpenseDataBuilder() {
    GcreateNonGroupExpenseData._initializeBuilder(this);
  }

  GcreateNonGroupExpenseDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _addNonGroupExpense = $v.addNonGroupExpense.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcreateNonGroupExpenseData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcreateNonGroupExpenseData;
  }

  @override
  void update(void Function(GcreateNonGroupExpenseDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData build() => _build();

  _$GcreateNonGroupExpenseData _build() {
    _$GcreateNonGroupExpenseData _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GcreateNonGroupExpenseData', 'G__typename'),
              addNonGroupExpense: addNonGroupExpense.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addNonGroupExpense';
        addNonGroupExpense.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense
    extends GcreateNonGroupExpenseData_addNonGroupExpense {
  @override
  final String G__typename;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_group group;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense expense;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense(
          [void Function(GcreateNonGroupExpenseData_addNonGroupExpenseBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpenseBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense._(
      {required this.G__typename, required this.group, required this.expense})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GcreateNonGroupExpenseData_addNonGroupExpense', 'group');
    BuiltValueNullFieldError.checkNotNull(
        expense, r'GcreateNonGroupExpenseData_addNonGroupExpense', 'expense');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense rebuild(
          void Function(GcreateNonGroupExpenseData_addNonGroupExpenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder toBuilder() =>
      new GcreateNonGroupExpenseData_addNonGroupExpenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcreateNonGroupExpenseData_addNonGroupExpense &&
        G__typename == other.G__typename &&
        group == other.group &&
        expense == other.expense;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense')
          ..add('G__typename', G__typename)
          ..add('group', group)
          ..add('expense', expense))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpenseBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense,
            GcreateNonGroupExpenseData_addNonGroupExpenseBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder? _group;
  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder get group =>
      _$this._group ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder();
  set group(
          GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder? group) =>
      _$this._group = group;

  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder? _expense;
  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder get expense =>
      _$this._expense ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder();
  set expense(
          GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder?
              expense) =>
      _$this._expense = expense;

  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _group = $v.group.toBuilder();
      _expense = $v.expense.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcreateNonGroupExpenseData_addNonGroupExpense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcreateNonGroupExpenseData_addNonGroupExpense;
  }

  @override
  void update(
      void Function(GcreateNonGroupExpenseData_addNonGroupExpenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense',
                  'G__typename'),
              group: group.build(),
              expense: expense.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'group';
        group.build();
        _$failedField = 'expense';
        expense.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group {
  @override
  final String G__typename;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_group_creator creator;
  @override
  final BuiltList<GcreateNonGroupExpenseData_addNonGroupExpense_group_members>
      members;
  @override
  final int owed;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.owed,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(creator,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'creator');
    BuiltValueNullFieldError.checkNotNull(members,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'members');
    BuiltValueNullFieldError.checkNotNull(
        owed, r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'owed');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'id');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder toBuilder() =>
      new GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcreateNonGroupExpenseData_addNonGroupExpense_group &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        owed == other.owed &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, owed.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('owed', owed)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_group,
            GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder? _creator;
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder
      get creator => _$this._creator ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder();
  set creator(
          GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder?
              creator) =>
      _$this._creator = creator;

  ListBuilder<GcreateNonGroupExpenseData_addNonGroupExpense_group_members>?
      _members;
  ListBuilder<GcreateNonGroupExpenseData_addNonGroupExpense_group_members>
      get members => _$this._members ??= new ListBuilder<
          GcreateNonGroupExpenseData_addNonGroupExpense_group_members>();
  set members(
          ListBuilder<
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members>?
              members) =>
      _$this._members = members;

  int? _owed;
  int? get owed => _$this._owed;
  set owed(int? owed) => _$this._owed = owed;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group._initializeBuilder(
        this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _owed = $v.owed;
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcreateNonGroupExpenseData_addNonGroupExpense_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcreateNonGroupExpenseData_addNonGroupExpense_group;
  }

  @override
  void update(
      void Function(GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_group._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group',
                  'G__typename'),
              creator: creator.build(),
              members: members.build(),
              owed: BuiltValueNullFieldError.checkNotNull(
                  owed,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group',
                  'owed'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group',
                  'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(id,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creator rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_group_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_group_creator,
            GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group_creator
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_group_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v =
        other as _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creator build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group_members {
  @override
  final String G__typename;
  @override
  final int owedInGroup;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
      member;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
        'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
        'member');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_group_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_group_members,
            GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _owedInGroup;
  int? get owedInGroup => _$this._owedInGroup;
  set owedInGroup(int? owedInGroup) => _$this._owedInGroup = owedInGroup;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder?
      _member;
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder
      get member => _$this._member ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder();
  set member(
          GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder?
              member) =>
      _$this._member = member;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup;
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v =
        other as _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
                  'G__typename'),
              owedInGroup: BuiltValueNullFieldError.checkNotNull(
                  owedInGroup,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
                  'owedInGroup'),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member,
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense {
  @override
  final String G__typename;
  @override
  final BuiltList<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>
      splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense._(
      {required this.G__typename,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(splits,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(title,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'creatorId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder toBuilder() =>
      new GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcreateNonGroupExpenseData_addNonGroupExpense_expense &&
        G__typename == other.G__typename &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense')
          ..add('G__typename', G__typename)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_expense,
            GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>?
      _splits;
  ListBuilder<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>
      get splits => _$this._splits ??= new ListBuilder<
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>();
  set splits(
          ListBuilder<
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>?
              splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense._initializeBuilder(
        this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcreateNonGroupExpenseData_addNonGroupExpense_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense',
                  'G__typename'),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'createdAt'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'amount'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense',
                  'creatorId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'splits';
        splits.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits {
  @override
  final String G__typename;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense?
      expense;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
      group;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
      creator;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
      fromUser;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
      toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'group');
    BuiltValueNullFieldError.checkNotNull(
        creator,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'toUser');
    BuiltValueNullFieldError.checkNotNull(id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'groupId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder?
      _expense;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder
      get expense => _$this._expense ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder();
  set expense(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder?
              expense) =>
      _$this._expense = expense;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder?
      _group;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder
      get group => _$this._group ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder();
  set group(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder?
              group) =>
      _$this._group = group;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder?
      _creator;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder
      get creator => _$this._creator ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder();
  set creator(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder?
              creator) =>
      _$this._creator = creator;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder?
      _fromUser;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder
      get fromUser => _$this._fromUser ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder();
  set fromUser(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder?
      _toUser;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder
      get toUser => _$this._toUser ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder();
  set toUser(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder?
              toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v =
        other as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
                  'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
                  'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(fromUserId, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(toUserId, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        title,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'creatorId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
      build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(
                creatorId,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
                'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group',
        'id');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group',
                'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
      build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
      build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData extends GsettleInGroupData {
  @override
  final String G__typename;
  @override
  final GsettleInGroupData_settleInGroup settleInGroup;

  factory _$GsettleInGroupData(
          [void Function(GsettleInGroupDataBuilder)? updates]) =>
      (new GsettleInGroupDataBuilder()..update(updates))._build();

  _$GsettleInGroupData._(
      {required this.G__typename, required this.settleInGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        settleInGroup, r'GsettleInGroupData', 'settleInGroup');
  }

  @override
  GsettleInGroupData rebuild(
          void Function(GsettleInGroupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupDataBuilder toBuilder() =>
      new GsettleInGroupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData &&
        G__typename == other.G__typename &&
        settleInGroup == other.settleInGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, settleInGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsettleInGroupData')
          ..add('G__typename', G__typename)
          ..add('settleInGroup', settleInGroup))
        .toString();
  }
}

class GsettleInGroupDataBuilder
    implements Builder<GsettleInGroupData, GsettleInGroupDataBuilder> {
  _$GsettleInGroupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsettleInGroupData_settleInGroupBuilder? _settleInGroup;
  GsettleInGroupData_settleInGroupBuilder get settleInGroup =>
      _$this._settleInGroup ??= new GsettleInGroupData_settleInGroupBuilder();
  set settleInGroup(GsettleInGroupData_settleInGroupBuilder? settleInGroup) =>
      _$this._settleInGroup = settleInGroup;

  GsettleInGroupDataBuilder() {
    GsettleInGroupData._initializeBuilder(this);
  }

  GsettleInGroupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _settleInGroup = $v.settleInGroup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData;
  }

  @override
  void update(void Function(GsettleInGroupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData build() => _build();

  _$GsettleInGroupData _build() {
    _$GsettleInGroupData _$result;
    try {
      _$result = _$v ??
          new _$GsettleInGroupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsettleInGroupData', 'G__typename'),
              settleInGroup: settleInGroup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'settleInGroup';
        settleInGroup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsettleInGroupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup
    extends GsettleInGroupData_settleInGroup {
  @override
  final String G__typename;
  @override
  final GsettleInGroupData_settleInGroup_expense? expense;
  @override
  final GsettleInGroupData_settleInGroup_group group;
  @override
  final GsettleInGroupData_settleInGroup_creator creator;
  @override
  final GsettleInGroupData_settleInGroup_fromUser fromUser;
  @override
  final GsettleInGroupData_settleInGroup_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GsettleInGroupData_settleInGroup(
          [void Function(GsettleInGroupData_settleInGroupBuilder)? updates]) =>
      (new GsettleInGroupData_settleInGroupBuilder()..update(updates))._build();

  _$GsettleInGroupData_settleInGroup._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData_settleInGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GsettleInGroupData_settleInGroup', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GsettleInGroupData_settleInGroup', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GsettleInGroupData_settleInGroup', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GsettleInGroupData_settleInGroup', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsettleInGroupData_settleInGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GsettleInGroupData_settleInGroup', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsettleInGroupData_settleInGroup', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GsettleInGroupData_settleInGroup', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GsettleInGroupData_settleInGroup', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsettleInGroupData_settleInGroup', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GsettleInGroupData_settleInGroup', 'groupId');
  }

  @override
  GsettleInGroupData_settleInGroup rebuild(
          void Function(GsettleInGroupData_settleInGroupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroupBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsettleInGroupData_settleInGroup')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GsettleInGroupData_settleInGroupBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup,
            GsettleInGroupData_settleInGroupBuilder> {
  _$GsettleInGroupData_settleInGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsettleInGroupData_settleInGroup_expenseBuilder? _expense;
  GsettleInGroupData_settleInGroup_expenseBuilder get expense =>
      _$this._expense ??= new GsettleInGroupData_settleInGroup_expenseBuilder();
  set expense(GsettleInGroupData_settleInGroup_expenseBuilder? expense) =>
      _$this._expense = expense;

  GsettleInGroupData_settleInGroup_groupBuilder? _group;
  GsettleInGroupData_settleInGroup_groupBuilder get group =>
      _$this._group ??= new GsettleInGroupData_settleInGroup_groupBuilder();
  set group(GsettleInGroupData_settleInGroup_groupBuilder? group) =>
      _$this._group = group;

  GsettleInGroupData_settleInGroup_creatorBuilder? _creator;
  GsettleInGroupData_settleInGroup_creatorBuilder get creator =>
      _$this._creator ??= new GsettleInGroupData_settleInGroup_creatorBuilder();
  set creator(GsettleInGroupData_settleInGroup_creatorBuilder? creator) =>
      _$this._creator = creator;

  GsettleInGroupData_settleInGroup_fromUserBuilder? _fromUser;
  GsettleInGroupData_settleInGroup_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GsettleInGroupData_settleInGroup_fromUserBuilder();
  set fromUser(GsettleInGroupData_settleInGroup_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GsettleInGroupData_settleInGroup_toUserBuilder? _toUser;
  GsettleInGroupData_settleInGroup_toUserBuilder get toUser =>
      _$this._toUser ??= new GsettleInGroupData_settleInGroup_toUserBuilder();
  set toUser(GsettleInGroupData_settleInGroup_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GsettleInGroupData_settleInGroupBuilder() {
    GsettleInGroupData_settleInGroup._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup;
  }

  @override
  void update(void Function(GsettleInGroupData_settleInGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup build() => _build();

  _$GsettleInGroupData_settleInGroup _build() {
    _$GsettleInGroupData_settleInGroup _$result;
    try {
      _$result = _$v ??
          new _$GsettleInGroupData_settleInGroup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsettleInGroupData_settleInGroup', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsettleInGroupData_settleInGroup', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GsettleInGroupData_settleInGroup', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GsettleInGroupData_settleInGroup',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsettleInGroupData_settleInGroup', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GsettleInGroupData_settleInGroup', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GsettleInGroupData_settleInGroup', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GsettleInGroupData_settleInGroup', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GsettleInGroupData_settleInGroup', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsettleInGroupData_settleInGroup', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_expense
    extends GsettleInGroupData_settleInGroup_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GsettleInGroupData_settleInGroup_expense(
          [void Function(GsettleInGroupData_settleInGroup_expenseBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_expenseBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsettleInGroupData_settleInGroup_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GsettleInGroupData_settleInGroup_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsettleInGroupData_settleInGroup_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsettleInGroupData_settleInGroup_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsettleInGroupData_settleInGroup_expense', 'creatorId');
  }

  @override
  GsettleInGroupData_settleInGroup_expense rebuild(
          void Function(GsettleInGroupData_settleInGroup_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_expenseBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_expenseBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_expense,
            GsettleInGroupData_settleInGroup_expenseBuilder> {
  _$GsettleInGroupData_settleInGroup_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GsettleInGroupData_settleInGroup_expenseBuilder() {
    GsettleInGroupData_settleInGroup_expense._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_expense;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_expense build() => _build();

  _$GsettleInGroupData_settleInGroup_expense _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_expense', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GsettleInGroupData_settleInGroup_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(createdAt,
                r'GsettleInGroupData_settleInGroup_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GsettleInGroupData_settleInGroup_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                r'GsettleInGroupData_settleInGroup_expense', 'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_group
    extends GsettleInGroupData_settleInGroup_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GsettleInGroupData_settleInGroup_group(
          [void Function(GsettleInGroupData_settleInGroup_groupBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_groupBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData_settleInGroup_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_group', 'id');
  }

  @override
  GsettleInGroupData_settleInGroup_group rebuild(
          void Function(GsettleInGroupData_settleInGroup_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_groupBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_groupBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_group,
            GsettleInGroupData_settleInGroup_groupBuilder> {
  _$GsettleInGroupData_settleInGroup_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GsettleInGroupData_settleInGroup_groupBuilder() {
    GsettleInGroupData_settleInGroup_group._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_group;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_group build() => _build();

  _$GsettleInGroupData_settleInGroup_group _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_creator
    extends GsettleInGroupData_settleInGroup_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsettleInGroupData_settleInGroup_creator(
          [void Function(GsettleInGroupData_settleInGroup_creatorBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_creatorBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsettleInGroupData_settleInGroup_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsettleInGroupData_settleInGroup_creator', 'isSignedUp');
  }

  @override
  GsettleInGroupData_settleInGroup_creator rebuild(
          void Function(GsettleInGroupData_settleInGroup_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_creatorBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_creatorBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_creator,
            GsettleInGroupData_settleInGroup_creatorBuilder> {
  _$GsettleInGroupData_settleInGroup_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsettleInGroupData_settleInGroup_creatorBuilder() {
    GsettleInGroupData_settleInGroup_creator._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_creator;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_creator build() => _build();

  _$GsettleInGroupData_settleInGroup_creator _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsettleInGroupData_settleInGroup_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_fromUser
    extends GsettleInGroupData_settleInGroup_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsettleInGroupData_settleInGroup_fromUser(
          [void Function(GsettleInGroupData_settleInGroup_fromUserBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_fromUserBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsettleInGroupData_settleInGroup_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsettleInGroupData_settleInGroup_fromUser', 'isSignedUp');
  }

  @override
  GsettleInGroupData_settleInGroup_fromUser rebuild(
          void Function(GsettleInGroupData_settleInGroup_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_fromUserBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_fromUserBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_fromUser,
            GsettleInGroupData_settleInGroup_fromUserBuilder> {
  _$GsettleInGroupData_settleInGroup_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsettleInGroupData_settleInGroup_fromUserBuilder() {
    GsettleInGroupData_settleInGroup_fromUser._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_fromUser;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_fromUser build() => _build();

  _$GsettleInGroupData_settleInGroup_fromUser _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsettleInGroupData_settleInGroup_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_toUser
    extends GsettleInGroupData_settleInGroup_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsettleInGroupData_settleInGroup_toUser(
          [void Function(GsettleInGroupData_settleInGroup_toUserBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_toUserBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData_settleInGroup_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsettleInGroupData_settleInGroup_toUser', 'isSignedUp');
  }

  @override
  GsettleInGroupData_settleInGroup_toUser rebuild(
          void Function(GsettleInGroupData_settleInGroup_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_toUserBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_toUserBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_toUser,
            GsettleInGroupData_settleInGroup_toUserBuilder> {
  _$GsettleInGroupData_settleInGroup_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsettleInGroupData_settleInGroup_toUserBuilder() {
    GsettleInGroupData_settleInGroup_toUser._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_toUser;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_toUser build() => _build();

  _$GsettleInGroupData_settleInGroup_toUser _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsettleInGroupData_settleInGroup_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData extends GsimplifyUserData {
  @override
  final String G__typename;
  @override
  final BuiltList<GsimplifyUserData_simplifyCrossGroup> simplifyCrossGroup;

  factory _$GsimplifyUserData(
          [void Function(GsimplifyUserDataBuilder)? updates]) =>
      (new GsimplifyUserDataBuilder()..update(updates))._build();

  _$GsimplifyUserData._(
      {required this.G__typename, required this.simplifyCrossGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsimplifyUserData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        simplifyCrossGroup, r'GsimplifyUserData', 'simplifyCrossGroup');
  }

  @override
  GsimplifyUserData rebuild(void Function(GsimplifyUserDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserDataBuilder toBuilder() =>
      new GsimplifyUserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData &&
        G__typename == other.G__typename &&
        simplifyCrossGroup == other.simplifyCrossGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, simplifyCrossGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsimplifyUserData')
          ..add('G__typename', G__typename)
          ..add('simplifyCrossGroup', simplifyCrossGroup))
        .toString();
  }
}

class GsimplifyUserDataBuilder
    implements Builder<GsimplifyUserData, GsimplifyUserDataBuilder> {
  _$GsimplifyUserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GsimplifyUserData_simplifyCrossGroup>? _simplifyCrossGroup;
  ListBuilder<GsimplifyUserData_simplifyCrossGroup> get simplifyCrossGroup =>
      _$this._simplifyCrossGroup ??=
          new ListBuilder<GsimplifyUserData_simplifyCrossGroup>();
  set simplifyCrossGroup(
          ListBuilder<GsimplifyUserData_simplifyCrossGroup>?
              simplifyCrossGroup) =>
      _$this._simplifyCrossGroup = simplifyCrossGroup;

  GsimplifyUserDataBuilder() {
    GsimplifyUserData._initializeBuilder(this);
  }

  GsimplifyUserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _simplifyCrossGroup = $v.simplifyCrossGroup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData;
  }

  @override
  void update(void Function(GsimplifyUserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData build() => _build();

  _$GsimplifyUserData _build() {
    _$GsimplifyUserData _$result;
    try {
      _$result = _$v ??
          new _$GsimplifyUserData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsimplifyUserData', 'G__typename'),
              simplifyCrossGroup: simplifyCrossGroup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'simplifyCrossGroup';
        simplifyCrossGroup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsimplifyUserData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup
    extends GsimplifyUserData_simplifyCrossGroup {
  @override
  final String G__typename;
  @override
  final GsimplifyUserData_simplifyCrossGroup_expense? expense;
  @override
  final GsimplifyUserData_simplifyCrossGroup_group group;
  @override
  final GsimplifyUserData_simplifyCrossGroup_creator creator;
  @override
  final GsimplifyUserData_simplifyCrossGroup_fromUser fromUser;
  @override
  final GsimplifyUserData_simplifyCrossGroup_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GsimplifyUserData_simplifyCrossGroup(
          [void Function(GsimplifyUserData_simplifyCrossGroupBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroupBuilder()..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsimplifyUserData_simplifyCrossGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GsimplifyUserData_simplifyCrossGroup', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GsimplifyUserData_simplifyCrossGroup', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GsimplifyUserData_simplifyCrossGroup', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GsimplifyUserData_simplifyCrossGroup', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsimplifyUserData_simplifyCrossGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GsimplifyUserData_simplifyCrossGroup', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsimplifyUserData_simplifyCrossGroup', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GsimplifyUserData_simplifyCrossGroup', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GsimplifyUserData_simplifyCrossGroup', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsimplifyUserData_simplifyCrossGroup', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GsimplifyUserData_simplifyCrossGroup', 'groupId');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroupBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsimplifyUserData_simplifyCrossGroup')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroupBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup,
            GsimplifyUserData_simplifyCrossGroupBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsimplifyUserData_simplifyCrossGroup_expenseBuilder? _expense;
  GsimplifyUserData_simplifyCrossGroup_expenseBuilder get expense =>
      _$this._expense ??=
          new GsimplifyUserData_simplifyCrossGroup_expenseBuilder();
  set expense(GsimplifyUserData_simplifyCrossGroup_expenseBuilder? expense) =>
      _$this._expense = expense;

  GsimplifyUserData_simplifyCrossGroup_groupBuilder? _group;
  GsimplifyUserData_simplifyCrossGroup_groupBuilder get group =>
      _$this._group ??= new GsimplifyUserData_simplifyCrossGroup_groupBuilder();
  set group(GsimplifyUserData_simplifyCrossGroup_groupBuilder? group) =>
      _$this._group = group;

  GsimplifyUserData_simplifyCrossGroup_creatorBuilder? _creator;
  GsimplifyUserData_simplifyCrossGroup_creatorBuilder get creator =>
      _$this._creator ??=
          new GsimplifyUserData_simplifyCrossGroup_creatorBuilder();
  set creator(GsimplifyUserData_simplifyCrossGroup_creatorBuilder? creator) =>
      _$this._creator = creator;

  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder? _fromUser;
  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GsimplifyUserData_simplifyCrossGroup_fromUserBuilder();
  set fromUser(
          GsimplifyUserData_simplifyCrossGroup_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GsimplifyUserData_simplifyCrossGroup_toUserBuilder? _toUser;
  GsimplifyUserData_simplifyCrossGroup_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GsimplifyUserData_simplifyCrossGroup_toUserBuilder();
  set toUser(GsimplifyUserData_simplifyCrossGroup_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GsimplifyUserData_simplifyCrossGroupBuilder() {
    GsimplifyUserData_simplifyCrossGroup._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup _build() {
    _$GsimplifyUserData_simplifyCrossGroup _$result;
    try {
      _$result = _$v ??
          new _$GsimplifyUserData_simplifyCrossGroup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsimplifyUserData_simplifyCrossGroup', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsimplifyUserData_simplifyCrossGroup', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GsimplifyUserData_simplifyCrossGroup', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GsimplifyUserData_simplifyCrossGroup', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsimplifyUserData_simplifyCrossGroup', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GsimplifyUserData_simplifyCrossGroup', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GsimplifyUserData_simplifyCrossGroup', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GsimplifyUserData_simplifyCrossGroup', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GsimplifyUserData_simplifyCrossGroup', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsimplifyUserData_simplifyCrossGroup',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_expense
    extends GsimplifyUserData_simplifyCrossGroup_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GsimplifyUserData_simplifyCrossGroup_expense(
          [void Function(GsimplifyUserData_simplifyCrossGroup_expenseBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_expenseBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GsimplifyUserData_simplifyCrossGroup_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GsimplifyUserData_simplifyCrossGroup_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsimplifyUserData_simplifyCrossGroup_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GsimplifyUserData_simplifyCrossGroup_expense', 'creatorId');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_expenseBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_expenseBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_expense,
            GsimplifyUserData_simplifyCrossGroup_expenseBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GsimplifyUserData_simplifyCrossGroup_expenseBuilder() {
    GsimplifyUserData_simplifyCrossGroup_expense._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_expense;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_expense _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_expense', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GsimplifyUserData_simplifyCrossGroup_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GsimplifyUserData_simplifyCrossGroup_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GsimplifyUserData_simplifyCrossGroup_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                r'GsimplifyUserData_simplifyCrossGroup_expense', 'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_group
    extends GsimplifyUserData_simplifyCrossGroup_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GsimplifyUserData_simplifyCrossGroup_group(
          [void Function(GsimplifyUserData_simplifyCrossGroup_groupBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_groupBuilder()..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_group', 'id');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_group rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_groupBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_groupBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_group,
            GsimplifyUserData_simplifyCrossGroup_groupBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GsimplifyUserData_simplifyCrossGroup_groupBuilder() {
    GsimplifyUserData_simplifyCrossGroup_group._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_group;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_group build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_group _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_creator
    extends GsimplifyUserData_simplifyCrossGroup_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsimplifyUserData_simplifyCrossGroup_creator(
          [void Function(GsimplifyUserData_simplifyCrossGroup_creatorBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_creatorBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsimplifyUserData_simplifyCrossGroup_creator', 'isSignedUp');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_creator rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_creatorBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_creatorBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_creator,
            GsimplifyUserData_simplifyCrossGroup_creatorBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsimplifyUserData_simplifyCrossGroup_creatorBuilder() {
    GsimplifyUserData_simplifyCrossGroup_creator._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_creator;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_creator build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_creator _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsimplifyUserData_simplifyCrossGroup_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_fromUser
    extends GsimplifyUserData_simplifyCrossGroup_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsimplifyUserData_simplifyCrossGroup_fromUser(
          [void Function(GsimplifyUserData_simplifyCrossGroup_fromUserBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsimplifyUserData_simplifyCrossGroup_fromUser', 'isSignedUp');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_fromUser rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_fromUserBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_fromUser,
            GsimplifyUserData_simplifyCrossGroup_fromUserBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder() {
    GsimplifyUserData_simplifyCrossGroup_fromUser._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_fromUser;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_fromUser build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_fromUser _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GsimplifyUserData_simplifyCrossGroup_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_toUser
    extends GsimplifyUserData_simplifyCrossGroup_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsimplifyUserData_simplifyCrossGroup_toUser(
          [void Function(GsimplifyUserData_simplifyCrossGroup_toUserBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_toUserBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsimplifyUserData_simplifyCrossGroup_toUser', 'isSignedUp');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_toUser rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_toUserBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_toUserBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_toUser,
            GsimplifyUserData_simplifyCrossGroup_toUserBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsimplifyUserData_simplifyCrossGroup_toUserBuilder() {
    GsimplifyUserData_simplifyCrossGroup_toUser._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_toUser;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_toUser build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_toUser _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsimplifyUserData_simplifyCrossGroup_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData extends GautoSettleWithUserData {
  @override
  final String G__typename;
  @override
  final BuiltList<GautoSettleWithUserData_autoSettleWithUser>
      autoSettleWithUser;

  factory _$GautoSettleWithUserData(
          [void Function(GautoSettleWithUserDataBuilder)? updates]) =>
      (new GautoSettleWithUserDataBuilder()..update(updates))._build();

  _$GautoSettleWithUserData._(
      {required this.G__typename, required this.autoSettleWithUser})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GautoSettleWithUserData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        autoSettleWithUser, r'GautoSettleWithUserData', 'autoSettleWithUser');
  }

  @override
  GautoSettleWithUserData rebuild(
          void Function(GautoSettleWithUserDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserDataBuilder toBuilder() =>
      new GautoSettleWithUserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData &&
        G__typename == other.G__typename &&
        autoSettleWithUser == other.autoSettleWithUser;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, autoSettleWithUser.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GautoSettleWithUserData')
          ..add('G__typename', G__typename)
          ..add('autoSettleWithUser', autoSettleWithUser))
        .toString();
  }
}

class GautoSettleWithUserDataBuilder
    implements
        Builder<GautoSettleWithUserData, GautoSettleWithUserDataBuilder> {
  _$GautoSettleWithUserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GautoSettleWithUserData_autoSettleWithUser>? _autoSettleWithUser;
  ListBuilder<GautoSettleWithUserData_autoSettleWithUser>
      get autoSettleWithUser => _$this._autoSettleWithUser ??=
          new ListBuilder<GautoSettleWithUserData_autoSettleWithUser>();
  set autoSettleWithUser(
          ListBuilder<GautoSettleWithUserData_autoSettleWithUser>?
              autoSettleWithUser) =>
      _$this._autoSettleWithUser = autoSettleWithUser;

  GautoSettleWithUserDataBuilder() {
    GautoSettleWithUserData._initializeBuilder(this);
  }

  GautoSettleWithUserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _autoSettleWithUser = $v.autoSettleWithUser.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData;
  }

  @override
  void update(void Function(GautoSettleWithUserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData build() => _build();

  _$GautoSettleWithUserData _build() {
    _$GautoSettleWithUserData _$result;
    try {
      _$result = _$v ??
          new _$GautoSettleWithUserData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GautoSettleWithUserData', 'G__typename'),
              autoSettleWithUser: autoSettleWithUser.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'autoSettleWithUser';
        autoSettleWithUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GautoSettleWithUserData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser
    extends GautoSettleWithUserData_autoSettleWithUser {
  @override
  final String G__typename;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_expense? expense;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_group group;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_creator creator;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_fromUser fromUser;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GautoSettleWithUserData_autoSettleWithUser(
          [void Function(GautoSettleWithUserData_autoSettleWithUserBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUserBuilder()..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GautoSettleWithUserData_autoSettleWithUser', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GautoSettleWithUserData_autoSettleWithUser', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GautoSettleWithUserData_autoSettleWithUser', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GautoSettleWithUserData_autoSettleWithUser', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GautoSettleWithUserData_autoSettleWithUser', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GautoSettleWithUserData_autoSettleWithUser', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GautoSettleWithUserData_autoSettleWithUser', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(fromUserId,
        r'GautoSettleWithUserData_autoSettleWithUser', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GautoSettleWithUserData_autoSettleWithUser', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GautoSettleWithUserData_autoSettleWithUser', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GautoSettleWithUserData_autoSettleWithUser', 'groupId');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser rebuild(
          void Function(GautoSettleWithUserData_autoSettleWithUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUserBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUserBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser,
            GautoSettleWithUserData_autoSettleWithUserBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder? _expense;
  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder get expense =>
      _$this._expense ??=
          new GautoSettleWithUserData_autoSettleWithUser_expenseBuilder();
  set expense(
          GautoSettleWithUserData_autoSettleWithUser_expenseBuilder? expense) =>
      _$this._expense = expense;

  GautoSettleWithUserData_autoSettleWithUser_groupBuilder? _group;
  GautoSettleWithUserData_autoSettleWithUser_groupBuilder get group =>
      _$this._group ??=
          new GautoSettleWithUserData_autoSettleWithUser_groupBuilder();
  set group(GautoSettleWithUserData_autoSettleWithUser_groupBuilder? group) =>
      _$this._group = group;

  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder? _creator;
  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder get creator =>
      _$this._creator ??=
          new GautoSettleWithUserData_autoSettleWithUser_creatorBuilder();
  set creator(
          GautoSettleWithUserData_autoSettleWithUser_creatorBuilder? creator) =>
      _$this._creator = creator;

  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder? _fromUser;
  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder();
  set fromUser(
          GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder? _toUser;
  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GautoSettleWithUserData_autoSettleWithUser_toUserBuilder();
  set toUser(
          GautoSettleWithUserData_autoSettleWithUser_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GautoSettleWithUserData_autoSettleWithUserBuilder() {
    GautoSettleWithUserData_autoSettleWithUser._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser _build() {
    _$GautoSettleWithUserData_autoSettleWithUser _$result;
    try {
      _$result = _$v ??
          new _$GautoSettleWithUserData_autoSettleWithUser._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GautoSettleWithUserData_autoSettleWithUser', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GautoSettleWithUserData_autoSettleWithUser', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GautoSettleWithUserData_autoSettleWithUser', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GautoSettleWithUserData_autoSettleWithUser', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GautoSettleWithUserData_autoSettleWithUser', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GautoSettleWithUserData_autoSettleWithUser', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GautoSettleWithUserData_autoSettleWithUser', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GautoSettleWithUserData_autoSettleWithUser', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GautoSettleWithUserData_autoSettleWithUser', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GautoSettleWithUserData_autoSettleWithUser',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_expense
    extends GautoSettleWithUserData_autoSettleWithUser_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GautoSettleWithUserData_autoSettleWithUser_expense(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_expenseBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'creatorId');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_expenseBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_expenseBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_expense,
            GautoSettleWithUserData_autoSettleWithUser_expenseBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_expense._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_expense;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_expense _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_expense',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(
                creatorId,
                r'GautoSettleWithUserData_autoSettleWithUser_expense',
                'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_group
    extends GautoSettleWithUserData_autoSettleWithUser_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GautoSettleWithUserData_autoSettleWithUser_group(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_groupBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_groupBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_group', 'id');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_group rebuild(
          void Function(GautoSettleWithUserData_autoSettleWithUser_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_groupBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_groupBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_groupBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_group,
            GautoSettleWithUserData_autoSettleWithUser_groupBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GautoSettleWithUserData_autoSettleWithUser_groupBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_group._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_group;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_group build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_group _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_group',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GautoSettleWithUserData_autoSettleWithUser_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_creator
    extends GautoSettleWithUserData_autoSettleWithUser_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GautoSettleWithUserData_autoSettleWithUser_creator(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_creatorBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GautoSettleWithUserData_autoSettleWithUser_creator', 'isSignedUp');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_creator rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_creatorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_creatorBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_creator,
            GautoSettleWithUserData_autoSettleWithUser_creatorBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_creator._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_creator;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_creator build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_creator _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_creator',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(id,
                r'GautoSettleWithUserData_autoSettleWithUser_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GautoSettleWithUserData_autoSettleWithUser_creator',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_fromUser
    extends GautoSettleWithUserData_autoSettleWithUser_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GautoSettleWithUserData_autoSettleWithUser_fromUser(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GautoSettleWithUserData_autoSettleWithUser_fromUser', 'isSignedUp');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_fromUser rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_fromUser,
            GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_fromUser._initializeBuilder(
        this);
  }

  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_fromUser;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_fromUser build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_fromUser _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(id,
                r'GautoSettleWithUserData_autoSettleWithUser_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GautoSettleWithUserData_autoSettleWithUser_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_toUser
    extends GautoSettleWithUserData_autoSettleWithUser_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GautoSettleWithUserData_autoSettleWithUser_toUser(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_toUserBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GautoSettleWithUserData_autoSettleWithUser_toUser', 'isSignedUp');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_toUser rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_toUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_toUserBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_toUser,
            GautoSettleWithUserData_autoSettleWithUser_toUserBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_toUser._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_toUser;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_toUser build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_toUser _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GautoSettleWithUserData_autoSettleWithUser_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GautoSettleWithUserData_autoSettleWithUser_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData extends GtransactionWithUserData {
  @override
  final String G__typename;
  @override
  final BuiltList<GtransactionWithUserData_getTransactionsWithUser>
      getTransactionsWithUser;

  factory _$GtransactionWithUserData(
          [void Function(GtransactionWithUserDataBuilder)? updates]) =>
      (new GtransactionWithUserDataBuilder()..update(updates))._build();

  _$GtransactionWithUserData._(
      {required this.G__typename, required this.getTransactionsWithUser})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GtransactionWithUserData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(getTransactionsWithUser,
        r'GtransactionWithUserData', 'getTransactionsWithUser');
  }

  @override
  GtransactionWithUserData rebuild(
          void Function(GtransactionWithUserDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserDataBuilder toBuilder() =>
      new GtransactionWithUserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionWithUserData &&
        G__typename == other.G__typename &&
        getTransactionsWithUser == other.getTransactionsWithUser;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, getTransactionsWithUser.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GtransactionWithUserData')
          ..add('G__typename', G__typename)
          ..add('getTransactionsWithUser', getTransactionsWithUser))
        .toString();
  }
}

class GtransactionWithUserDataBuilder
    implements
        Builder<GtransactionWithUserData, GtransactionWithUserDataBuilder> {
  _$GtransactionWithUserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GtransactionWithUserData_getTransactionsWithUser>?
      _getTransactionsWithUser;
  ListBuilder<GtransactionWithUserData_getTransactionsWithUser>
      get getTransactionsWithUser => _$this._getTransactionsWithUser ??=
          new ListBuilder<GtransactionWithUserData_getTransactionsWithUser>();
  set getTransactionsWithUser(
          ListBuilder<GtransactionWithUserData_getTransactionsWithUser>?
              getTransactionsWithUser) =>
      _$this._getTransactionsWithUser = getTransactionsWithUser;

  GtransactionWithUserDataBuilder() {
    GtransactionWithUserData._initializeBuilder(this);
  }

  GtransactionWithUserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _getTransactionsWithUser = $v.getTransactionsWithUser.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionWithUserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData;
  }

  @override
  void update(void Function(GtransactionWithUserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData build() => _build();

  _$GtransactionWithUserData _build() {
    _$GtransactionWithUserData _$result;
    try {
      _$result = _$v ??
          new _$GtransactionWithUserData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GtransactionWithUserData', 'G__typename'),
              getTransactionsWithUser: getTransactionsWithUser.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'getTransactionsWithUser';
        getTransactionsWithUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionWithUserData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser
    extends GtransactionWithUserData_getTransactionsWithUser {
  @override
  final String G__typename;
  @override
  final GtransactionWithUserData_getTransactionsWithUser_expense? expense;
  @override
  final GtransactionWithUserData_getTransactionsWithUser_group group;
  @override
  final GtransactionWithUserData_getTransactionsWithUser_creator creator;
  @override
  final GtransactionWithUserData_getTransactionsWithUser_fromUser fromUser;
  @override
  final GtransactionWithUserData_getTransactionsWithUser_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GtransactionWithUserData_getTransactionsWithUser(
          [void Function(
                  GtransactionWithUserData_getTransactionsWithUserBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsWithUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsWithUser._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GtransactionWithUserData_getTransactionsWithUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GtransactionWithUserData_getTransactionsWithUser', 'group');
    BuiltValueNullFieldError.checkNotNull(creator,
        r'GtransactionWithUserData_getTransactionsWithUser', 'creator');
    BuiltValueNullFieldError.checkNotNull(fromUser,
        r'GtransactionWithUserData_getTransactionsWithUser', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GtransactionWithUserData_getTransactionsWithUser', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GtransactionWithUserData_getTransactionsWithUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GtransactionWithUserData_getTransactionsWithUser', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GtransactionWithUserData_getTransactionsWithUser', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GtransactionWithUserData_getTransactionsWithUser', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(fromUserId,
        r'GtransactionWithUserData_getTransactionsWithUser', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(toUserId,
        r'GtransactionWithUserData_getTransactionsWithUser', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GtransactionWithUserData_getTransactionsWithUser', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(groupId,
        r'GtransactionWithUserData_getTransactionsWithUser', 'groupId');
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser rebuild(
          void Function(GtransactionWithUserData_getTransactionsWithUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsWithUserBuilder toBuilder() =>
      new GtransactionWithUserData_getTransactionsWithUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionWithUserData_getTransactionsWithUser &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsWithUser')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsWithUserBuilder
    implements
        Builder<GtransactionWithUserData_getTransactionsWithUser,
            GtransactionWithUserData_getTransactionsWithUserBuilder> {
  _$GtransactionWithUserData_getTransactionsWithUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GtransactionWithUserData_getTransactionsWithUser_expenseBuilder? _expense;
  GtransactionWithUserData_getTransactionsWithUser_expenseBuilder get expense =>
      _$this._expense ??=
          new GtransactionWithUserData_getTransactionsWithUser_expenseBuilder();
  set expense(
          GtransactionWithUserData_getTransactionsWithUser_expenseBuilder?
              expense) =>
      _$this._expense = expense;

  GtransactionWithUserData_getTransactionsWithUser_groupBuilder? _group;
  GtransactionWithUserData_getTransactionsWithUser_groupBuilder get group =>
      _$this._group ??=
          new GtransactionWithUserData_getTransactionsWithUser_groupBuilder();
  set group(
          GtransactionWithUserData_getTransactionsWithUser_groupBuilder?
              group) =>
      _$this._group = group;

  GtransactionWithUserData_getTransactionsWithUser_creatorBuilder? _creator;
  GtransactionWithUserData_getTransactionsWithUser_creatorBuilder get creator =>
      _$this._creator ??=
          new GtransactionWithUserData_getTransactionsWithUser_creatorBuilder();
  set creator(
          GtransactionWithUserData_getTransactionsWithUser_creatorBuilder?
              creator) =>
      _$this._creator = creator;

  GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder? _fromUser;
  GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder
      get fromUser => _$this._fromUser ??=
          new GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder();
  set fromUser(
          GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GtransactionWithUserData_getTransactionsWithUser_toUserBuilder? _toUser;
  GtransactionWithUserData_getTransactionsWithUser_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GtransactionWithUserData_getTransactionsWithUser_toUserBuilder();
  set toUser(
          GtransactionWithUserData_getTransactionsWithUser_toUserBuilder?
              toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GtransactionWithUserData_getTransactionsWithUserBuilder() {
    GtransactionWithUserData_getTransactionsWithUser._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsWithUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionWithUserData_getTransactionsWithUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData_getTransactionsWithUser;
  }

  @override
  void update(
      void Function(GtransactionWithUserData_getTransactionsWithUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser build() => _build();

  _$GtransactionWithUserData_getTransactionsWithUser _build() {
    _$GtransactionWithUserData_getTransactionsWithUser _$result;
    try {
      _$result = _$v ??
          new _$GtransactionWithUserData_getTransactionsWithUser._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GtransactionWithUserData_getTransactionsWithUser', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GtransactionWithUserData_getTransactionsWithUser', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GtransactionWithUserData_getTransactionsWithUser', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GtransactionWithUserData_getTransactionsWithUser', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GtransactionWithUserData_getTransactionsWithUser', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GtransactionWithUserData_getTransactionsWithUser', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GtransactionWithUserData_getTransactionsWithUser', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GtransactionWithUserData_getTransactionsWithUser', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GtransactionWithUserData_getTransactionsWithUser', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionWithUserData_getTransactionsWithUser',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_expense
    extends GtransactionWithUserData_getTransactionsWithUser_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GtransactionWithUserData_getTransactionsWithUser_expense(
          [void Function(
                  GtransactionWithUserData_getTransactionsWithUser_expenseBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsWithUser_expenseBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsWithUser_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsWithUser_expense',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GtransactionWithUserData_getTransactionsWithUser_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(title,
        r'GtransactionWithUserData_getTransactionsWithUser_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GtransactionWithUserData_getTransactionsWithUser_expense',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GtransactionWithUserData_getTransactionsWithUser_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GtransactionWithUserData_getTransactionsWithUser_expense',
        'creatorId');
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_expense rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsWithUser_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsWithUser_expenseBuilder toBuilder() =>
      new GtransactionWithUserData_getTransactionsWithUser_expenseBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionWithUserData_getTransactionsWithUser_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsWithUser_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsWithUser_expenseBuilder
    implements
        Builder<GtransactionWithUserData_getTransactionsWithUser_expense,
            GtransactionWithUserData_getTransactionsWithUser_expenseBuilder> {
  _$GtransactionWithUserData_getTransactionsWithUser_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GtransactionWithUserData_getTransactionsWithUser_expenseBuilder() {
    GtransactionWithUserData_getTransactionsWithUser_expense._initializeBuilder(
        this);
  }

  GtransactionWithUserData_getTransactionsWithUser_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionWithUserData_getTransactionsWithUser_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData_getTransactionsWithUser_expense;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsWithUser_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_expense build() => _build();

  _$GtransactionWithUserData_getTransactionsWithUser_expense _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsWithUser_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsWithUser_expense',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GtransactionWithUserData_getTransactionsWithUser_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GtransactionWithUserData_getTransactionsWithUser_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GtransactionWithUserData_getTransactionsWithUser_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GtransactionWithUserData_getTransactionsWithUser_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(
                creatorId,
                r'GtransactionWithUserData_getTransactionsWithUser_expense',
                'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_group
    extends GtransactionWithUserData_getTransactionsWithUser_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GtransactionWithUserData_getTransactionsWithUser_group(
          [void Function(
                  GtransactionWithUserData_getTransactionsWithUser_groupBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsWithUser_groupBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsWithUser_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsWithUser_group',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GtransactionWithUserData_getTransactionsWithUser_group', 'id');
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_group rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsWithUser_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsWithUser_groupBuilder toBuilder() =>
      new GtransactionWithUserData_getTransactionsWithUser_groupBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionWithUserData_getTransactionsWithUser_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsWithUser_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsWithUser_groupBuilder
    implements
        Builder<GtransactionWithUserData_getTransactionsWithUser_group,
            GtransactionWithUserData_getTransactionsWithUser_groupBuilder> {
  _$GtransactionWithUserData_getTransactionsWithUser_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GtransactionWithUserData_getTransactionsWithUser_groupBuilder() {
    GtransactionWithUserData_getTransactionsWithUser_group._initializeBuilder(
        this);
  }

  GtransactionWithUserData_getTransactionsWithUser_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionWithUserData_getTransactionsWithUser_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData_getTransactionsWithUser_group;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsWithUser_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_group build() => _build();

  _$GtransactionWithUserData_getTransactionsWithUser_group _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsWithUser_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsWithUser_group',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionWithUserData_getTransactionsWithUser_group',
                'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_creator
    extends GtransactionWithUserData_getTransactionsWithUser_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionWithUserData_getTransactionsWithUser_creator(
          [void Function(
                  GtransactionWithUserData_getTransactionsWithUser_creatorBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsWithUser_creatorBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsWithUser_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsWithUser_creator',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GtransactionWithUserData_getTransactionsWithUser_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionWithUserData_getTransactionsWithUser_creator',
        'isSignedUp');
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_creator rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsWithUser_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsWithUser_creatorBuilder toBuilder() =>
      new GtransactionWithUserData_getTransactionsWithUser_creatorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionWithUserData_getTransactionsWithUser_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsWithUser_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsWithUser_creatorBuilder
    implements
        Builder<GtransactionWithUserData_getTransactionsWithUser_creator,
            GtransactionWithUserData_getTransactionsWithUser_creatorBuilder> {
  _$GtransactionWithUserData_getTransactionsWithUser_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionWithUserData_getTransactionsWithUser_creatorBuilder() {
    GtransactionWithUserData_getTransactionsWithUser_creator._initializeBuilder(
        this);
  }

  GtransactionWithUserData_getTransactionsWithUser_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionWithUserData_getTransactionsWithUser_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData_getTransactionsWithUser_creator;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsWithUser_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_creator build() => _build();

  _$GtransactionWithUserData_getTransactionsWithUser_creator _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsWithUser_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsWithUser_creator',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionWithUserData_getTransactionsWithUser_creator',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionWithUserData_getTransactionsWithUser_creator',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_fromUser
    extends GtransactionWithUserData_getTransactionsWithUser_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionWithUserData_getTransactionsWithUser_fromUser(
          [void Function(
                  GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsWithUser_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsWithUser_fromUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GtransactionWithUserData_getTransactionsWithUser_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionWithUserData_getTransactionsWithUser_fromUser',
        'isSignedUp');
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_fromUser rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder
      toBuilder() =>
          new GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionWithUserData_getTransactionsWithUser_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsWithUser_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder
    implements
        Builder<GtransactionWithUserData_getTransactionsWithUser_fromUser,
            GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder> {
  _$GtransactionWithUserData_getTransactionsWithUser_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder() {
    GtransactionWithUserData_getTransactionsWithUser_fromUser
        ._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionWithUserData_getTransactionsWithUser_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData_getTransactionsWithUser_fromUser;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsWithUser_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_fromUser build() => _build();

  _$GtransactionWithUserData_getTransactionsWithUser_fromUser _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsWithUser_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsWithUser_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionWithUserData_getTransactionsWithUser_fromUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionWithUserData_getTransactionsWithUser_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsWithUser_toUser
    extends GtransactionWithUserData_getTransactionsWithUser_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionWithUserData_getTransactionsWithUser_toUser(
          [void Function(
                  GtransactionWithUserData_getTransactionsWithUser_toUserBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsWithUser_toUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsWithUser_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsWithUser_toUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GtransactionWithUserData_getTransactionsWithUser_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionWithUserData_getTransactionsWithUser_toUser',
        'isSignedUp');
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_toUser rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsWithUser_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsWithUser_toUserBuilder toBuilder() =>
      new GtransactionWithUserData_getTransactionsWithUser_toUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionWithUserData_getTransactionsWithUser_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsWithUser_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsWithUser_toUserBuilder
    implements
        Builder<GtransactionWithUserData_getTransactionsWithUser_toUser,
            GtransactionWithUserData_getTransactionsWithUser_toUserBuilder> {
  _$GtransactionWithUserData_getTransactionsWithUser_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionWithUserData_getTransactionsWithUser_toUserBuilder() {
    GtransactionWithUserData_getTransactionsWithUser_toUser._initializeBuilder(
        this);
  }

  GtransactionWithUserData_getTransactionsWithUser_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionWithUserData_getTransactionsWithUser_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData_getTransactionsWithUser_toUser;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsWithUser_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsWithUser_toUser build() => _build();

  _$GtransactionWithUserData_getTransactionsWithUser_toUser _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsWithUser_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsWithUser_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionWithUserData_getTransactionsWithUser_toUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionWithUserData_getTransactionsWithUser_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData extends GtransactionMixExpenseData {
  @override
  final String G__typename;
  @override
  final BuiltList<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>
      getTransactionsMixExpenseWithGroup;

  factory _$GtransactionMixExpenseData(
          [void Function(GtransactionMixExpenseDataBuilder)? updates]) =>
      (new GtransactionMixExpenseDataBuilder()..update(updates))._build();

  _$GtransactionMixExpenseData._(
      {required this.G__typename,
      required this.getTransactionsMixExpenseWithGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GtransactionMixExpenseData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(getTransactionsMixExpenseWithGroup,
        r'GtransactionMixExpenseData', 'getTransactionsMixExpenseWithGroup');
  }

  @override
  GtransactionMixExpenseData rebuild(
          void Function(GtransactionMixExpenseDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseDataBuilder toBuilder() =>
      new GtransactionMixExpenseDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionMixExpenseData &&
        G__typename == other.G__typename &&
        getTransactionsMixExpenseWithGroup ==
            other.getTransactionsMixExpenseWithGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, getTransactionsMixExpenseWithGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GtransactionMixExpenseData')
          ..add('G__typename', G__typename)
          ..add('getTransactionsMixExpenseWithGroup',
              getTransactionsMixExpenseWithGroup))
        .toString();
  }
}

class GtransactionMixExpenseDataBuilder
    implements
        Builder<GtransactionMixExpenseData, GtransactionMixExpenseDataBuilder> {
  _$GtransactionMixExpenseData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>?
      _getTransactionsMixExpenseWithGroup;
  ListBuilder<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>
      get getTransactionsMixExpenseWithGroup =>
          _$this._getTransactionsMixExpenseWithGroup ??= new ListBuilder<
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>();
  set getTransactionsMixExpenseWithGroup(
          ListBuilder<
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>?
              getTransactionsMixExpenseWithGroup) =>
      _$this._getTransactionsMixExpenseWithGroup =
          getTransactionsMixExpenseWithGroup;

  GtransactionMixExpenseDataBuilder() {
    GtransactionMixExpenseData._initializeBuilder(this);
  }

  GtransactionMixExpenseDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _getTransactionsMixExpenseWithGroup =
          $v.getTransactionsMixExpenseWithGroup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionMixExpenseData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionMixExpenseData;
  }

  @override
  void update(void Function(GtransactionMixExpenseDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData build() => _build();

  _$GtransactionMixExpenseData _build() {
    _$GtransactionMixExpenseData _$result;
    try {
      _$result = _$v ??
          new _$GtransactionMixExpenseData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GtransactionMixExpenseData', 'G__typename'),
              getTransactionsMixExpenseWithGroup:
                  getTransactionsMixExpenseWithGroup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'getTransactionsMixExpenseWithGroup';
        getTransactionsMixExpenseWithGroup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionMixExpenseData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup {
  @override
  final String G__typename;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense?
      expense;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split?
      split;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup._(
      {required this.G__typename, this.expense, this.split})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup',
        'G__typename');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup rebuild(
          void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        split == other.split;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, split.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('split', split))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder
    implements
        Builder<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder?
      _expense;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder
      get expense => _$this._expense ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder();
  set expense(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder?
              expense) =>
      _$this._expense = expense;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder?
      _split;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder
      get split => _$this._split ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder();
  set split(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder?
              split) =>
      _$this._split = split;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _split = $v.split?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup build() =>
      _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup _build() {
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup _$result;
    try {
      _$result = _$v ??
          new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup',
                  'G__typename'),
              expense: _expense?.build(),
              split: _split?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'split';
        _split?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        title,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'creatorId');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense rebuild(
          void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
      build() => _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
      _build() {
    final _$result = _$v ??
        new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(
                creatorId,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
                'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split {
  @override
  final String G__typename;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      fromUser;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'groupId');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split rebuild(
          void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder?
      _fromUser;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder
      get fromUser => _$this._fromUser ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder();
  set fromUser(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder?
      _toUser;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder
      get toUser => _$this._toUser ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder();
  set toUser(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder?
              toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split build() =>
      _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
      _build() {
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
        _$result;
    try {
      _$result = _$v ??
          new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
                  'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
                  'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(fromUserId, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(toUserId, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
        'isSignedUp');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      rebuild(
              void Function(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder)
                  updates) =>
          (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      build() => _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      _build() {
    final _$result = _$v ??
        new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
        'isSignedUp');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      rebuild(
              void Function(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder)
                  updates) =>
          (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      build() => _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      _build() {
    final _$result = _$v ??
        new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserFieldsData extends GUserFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GUserFieldsData([void Function(GUserFieldsDataBuilder)? updates]) =>
      (new GUserFieldsDataBuilder()..update(updates))._build();

  _$GUserFieldsData._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GUserFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GUserFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GUserFieldsData', 'isSignedUp');
  }

  @override
  GUserFieldsData rebuild(void Function(GUserFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserFieldsDataBuilder toBuilder() =>
      new GUserFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GUserFieldsDataBuilder
    implements Builder<GUserFieldsData, GUserFieldsDataBuilder> {
  _$GUserFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GUserFieldsDataBuilder() {
    GUserFieldsData._initializeBuilder(this);
  }

  GUserFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserFieldsData;
  }

  @override
  void update(void Function(GUserFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserFieldsData build() => _build();

  _$GUserFieldsData _build() {
    final _$result = _$v ??
        new _$GUserFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GUserFieldsData', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GUserFieldsData', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GUserFieldsData', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserPaysFieldsData extends GUserPaysFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;
  @override
  final BuiltList<String> upiIds;
  @override
  final BuiltList<GUserPaysFieldsData_owes> owes;

  factory _$GUserPaysFieldsData(
          [void Function(GUserPaysFieldsDataBuilder)? updates]) =>
      (new GUserPaysFieldsDataBuilder()..update(updates))._build();

  _$GUserPaysFieldsData._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp,
      required this.upiIds,
      required this.owes})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GUserPaysFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GUserPaysFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GUserPaysFieldsData', 'isSignedUp');
    BuiltValueNullFieldError.checkNotNull(
        upiIds, r'GUserPaysFieldsData', 'upiIds');
    BuiltValueNullFieldError.checkNotNull(owes, r'GUserPaysFieldsData', 'owes');
  }

  @override
  GUserPaysFieldsData rebuild(
          void Function(GUserPaysFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserPaysFieldsDataBuilder toBuilder() =>
      new GUserPaysFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserPaysFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp &&
        upiIds == other.upiIds &&
        owes == other.owes;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jc(_$hash, upiIds.hashCode);
    _$hash = $jc(_$hash, owes.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserPaysFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp)
          ..add('upiIds', upiIds)
          ..add('owes', owes))
        .toString();
  }
}

class GUserPaysFieldsDataBuilder
    implements Builder<GUserPaysFieldsData, GUserPaysFieldsDataBuilder> {
  _$GUserPaysFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  ListBuilder<String>? _upiIds;
  ListBuilder<String> get upiIds =>
      _$this._upiIds ??= new ListBuilder<String>();
  set upiIds(ListBuilder<String>? upiIds) => _$this._upiIds = upiIds;

  ListBuilder<GUserPaysFieldsData_owes>? _owes;
  ListBuilder<GUserPaysFieldsData_owes> get owes =>
      _$this._owes ??= new ListBuilder<GUserPaysFieldsData_owes>();
  set owes(ListBuilder<GUserPaysFieldsData_owes>? owes) => _$this._owes = owes;

  GUserPaysFieldsDataBuilder() {
    GUserPaysFieldsData._initializeBuilder(this);
  }

  GUserPaysFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _upiIds = $v.upiIds.toBuilder();
      _owes = $v.owes.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserPaysFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserPaysFieldsData;
  }

  @override
  void update(void Function(GUserPaysFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserPaysFieldsData build() => _build();

  _$GUserPaysFieldsData _build() {
    _$GUserPaysFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GUserPaysFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GUserPaysFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GUserPaysFieldsData', 'id'),
              name: name,
              phone: phone,
              email: email,
              isSignedUp: BuiltValueNullFieldError.checkNotNull(
                  isSignedUp, r'GUserPaysFieldsData', 'isSignedUp'),
              upiIds: upiIds.build(),
              owes: owes.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'upiIds';
        upiIds.build();
        _$failedField = 'owes';
        owes.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserPaysFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserPaysFieldsData_owes extends GUserPaysFieldsData_owes {
  @override
  final String G__typename;
  @override
  final String groupId;
  @override
  final int amount;

  factory _$GUserPaysFieldsData_owes(
          [void Function(GUserPaysFieldsData_owesBuilder)? updates]) =>
      (new GUserPaysFieldsData_owesBuilder()..update(updates))._build();

  _$GUserPaysFieldsData_owes._(
      {required this.G__typename, required this.groupId, required this.amount})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GUserPaysFieldsData_owes', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GUserPaysFieldsData_owes', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GUserPaysFieldsData_owes', 'amount');
  }

  @override
  GUserPaysFieldsData_owes rebuild(
          void Function(GUserPaysFieldsData_owesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserPaysFieldsData_owesBuilder toBuilder() =>
      new GUserPaysFieldsData_owesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserPaysFieldsData_owes &&
        G__typename == other.G__typename &&
        groupId == other.groupId &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserPaysFieldsData_owes')
          ..add('G__typename', G__typename)
          ..add('groupId', groupId)
          ..add('amount', amount))
        .toString();
  }
}

class GUserPaysFieldsData_owesBuilder
    implements
        Builder<GUserPaysFieldsData_owes, GUserPaysFieldsData_owesBuilder> {
  _$GUserPaysFieldsData_owes? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  GUserPaysFieldsData_owesBuilder() {
    GUserPaysFieldsData_owes._initializeBuilder(this);
  }

  GUserPaysFieldsData_owesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _groupId = $v.groupId;
      _amount = $v.amount;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserPaysFieldsData_owes other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserPaysFieldsData_owes;
  }

  @override
  void update(void Function(GUserPaysFieldsData_owesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserPaysFieldsData_owes build() => _build();

  _$GUserPaysFieldsData_owes _build() {
    final _$result = _$v ??
        new _$GUserPaysFieldsData_owes._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GUserPaysFieldsData_owes', 'G__typename'),
            groupId: BuiltValueNullFieldError.checkNotNull(
                groupId, r'GUserPaysFieldsData_owes', 'groupId'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GUserPaysFieldsData_owes', 'amount'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupBasicData extends GGroupBasicData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GGroupBasicData([void Function(GGroupBasicDataBuilder)? updates]) =>
      (new GGroupBasicDataBuilder()..update(updates))._build();

  _$GGroupBasicData._({required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupBasicData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GGroupBasicData', 'id');
  }

  @override
  GGroupBasicData rebuild(void Function(GGroupBasicDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupBasicDataBuilder toBuilder() =>
      new GGroupBasicDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupBasicData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupBasicData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GGroupBasicDataBuilder
    implements Builder<GGroupBasicData, GGroupBasicDataBuilder> {
  _$GGroupBasicData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GGroupBasicDataBuilder() {
    GGroupBasicData._initializeBuilder(this);
  }

  GGroupBasicDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupBasicData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupBasicData;
  }

  @override
  void update(void Function(GGroupBasicDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupBasicData build() => _build();

  _$GGroupBasicData _build() {
    final _$result = _$v ??
        new _$GGroupBasicData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GGroupBasicData', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupBasicData', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData extends GGroupFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final GGroupFieldsData_creator creator;
  @override
  final BuiltList<GGroupFieldsData_members> members;
  @override
  final int owed;
  @override
  final String createdAt;

  factory _$GGroupFieldsData(
          [void Function(GGroupFieldsDataBuilder)? updates]) =>
      (new GGroupFieldsDataBuilder()..update(updates))._build();

  _$GGroupFieldsData._(
      {required this.G__typename,
      required this.id,
      this.name,
      required this.creator,
      required this.members,
      required this.owed,
      required this.createdAt})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GGroupFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GGroupFieldsData', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GGroupFieldsData', 'members');
    BuiltValueNullFieldError.checkNotNull(owed, r'GGroupFieldsData', 'owed');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GGroupFieldsData', 'createdAt');
  }

  @override
  GGroupFieldsData rebuild(void Function(GGroupFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsDataBuilder toBuilder() =>
      new GGroupFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        creator == other.creator &&
        members == other.members &&
        owed == other.owed &&
        createdAt == other.createdAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, owed.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('creator', creator)
          ..add('members', members)
          ..add('owed', owed)
          ..add('createdAt', createdAt))
        .toString();
  }
}

class GGroupFieldsDataBuilder
    implements Builder<GGroupFieldsData, GGroupFieldsDataBuilder> {
  _$GGroupFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GGroupFieldsData_creatorBuilder? _creator;
  GGroupFieldsData_creatorBuilder get creator =>
      _$this._creator ??= new GGroupFieldsData_creatorBuilder();
  set creator(GGroupFieldsData_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GGroupFieldsData_members>? _members;
  ListBuilder<GGroupFieldsData_members> get members =>
      _$this._members ??= new ListBuilder<GGroupFieldsData_members>();
  set members(ListBuilder<GGroupFieldsData_members>? members) =>
      _$this._members = members;

  int? _owed;
  int? get owed => _$this._owed;
  set owed(int? owed) => _$this._owed = owed;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  GGroupFieldsDataBuilder() {
    GGroupFieldsData._initializeBuilder(this);
  }

  GGroupFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _owed = $v.owed;
      _createdAt = $v.createdAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData;
  }

  @override
  void update(void Function(GGroupFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData build() => _build();

  _$GGroupFieldsData _build() {
    _$GGroupFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GGroupFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GGroupFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GGroupFieldsData', 'id'),
              name: name,
              creator: creator.build(),
              members: members.build(),
              owed: BuiltValueNullFieldError.checkNotNull(
                  owed, r'GGroupFieldsData', 'owed'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GGroupFieldsData', 'createdAt'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData_creator extends GGroupFieldsData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupFieldsData_creator(
          [void Function(GGroupFieldsData_creatorBuilder)? updates]) =>
      (new GGroupFieldsData_creatorBuilder()..update(updates))._build();

  _$GGroupFieldsData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupFieldsData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupFieldsData_creator', 'isSignedUp');
  }

  @override
  GGroupFieldsData_creator rebuild(
          void Function(GGroupFieldsData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsData_creatorBuilder toBuilder() =>
      new GGroupFieldsData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupFieldsData_creatorBuilder
    implements
        Builder<GGroupFieldsData_creator, GGroupFieldsData_creatorBuilder> {
  _$GGroupFieldsData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupFieldsData_creatorBuilder() {
    GGroupFieldsData_creator._initializeBuilder(this);
  }

  GGroupFieldsData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData_creator;
  }

  @override
  void update(void Function(GGroupFieldsData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData_creator build() => _build();

  _$GGroupFieldsData_creator _build() {
    final _$result = _$v ??
        new _$GGroupFieldsData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GGroupFieldsData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupFieldsData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GGroupFieldsData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData_members extends GGroupFieldsData_members {
  @override
  final String G__typename;
  @override
  final int owedInGroup;
  @override
  final GGroupFieldsData_members_member member;

  factory _$GGroupFieldsData_members(
          [void Function(GGroupFieldsData_membersBuilder)? updates]) =>
      (new GGroupFieldsData_membersBuilder()..update(updates))._build();

  _$GGroupFieldsData_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GGroupFieldsData_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GGroupFieldsData_members', 'member');
  }

  @override
  GGroupFieldsData_members rebuild(
          void Function(GGroupFieldsData_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsData_membersBuilder toBuilder() =>
      new GGroupFieldsData_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GGroupFieldsData_membersBuilder
    implements
        Builder<GGroupFieldsData_members, GGroupFieldsData_membersBuilder> {
  _$GGroupFieldsData_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _owedInGroup;
  int? get owedInGroup => _$this._owedInGroup;
  set owedInGroup(int? owedInGroup) => _$this._owedInGroup = owedInGroup;

  GGroupFieldsData_members_memberBuilder? _member;
  GGroupFieldsData_members_memberBuilder get member =>
      _$this._member ??= new GGroupFieldsData_members_memberBuilder();
  set member(GGroupFieldsData_members_memberBuilder? member) =>
      _$this._member = member;

  GGroupFieldsData_membersBuilder() {
    GGroupFieldsData_members._initializeBuilder(this);
  }

  GGroupFieldsData_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup;
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData_members;
  }

  @override
  void update(void Function(GGroupFieldsData_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData_members build() => _build();

  _$GGroupFieldsData_members _build() {
    _$GGroupFieldsData_members _$result;
    try {
      _$result = _$v ??
          new _$GGroupFieldsData_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GGroupFieldsData_members', 'G__typename'),
              owedInGroup: BuiltValueNullFieldError.checkNotNull(
                  owedInGroup, r'GGroupFieldsData_members', 'owedInGroup'),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupFieldsData_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData_members_member
    extends GGroupFieldsData_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupFieldsData_members_member(
          [void Function(GGroupFieldsData_members_memberBuilder)? updates]) =>
      (new GGroupFieldsData_members_memberBuilder()..update(updates))._build();

  _$GGroupFieldsData_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupFieldsData_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupFieldsData_members_member', 'isSignedUp');
  }

  @override
  GGroupFieldsData_members_member rebuild(
          void Function(GGroupFieldsData_members_memberBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsData_members_memberBuilder toBuilder() =>
      new GGroupFieldsData_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupFieldsData_members_memberBuilder
    implements
        Builder<GGroupFieldsData_members_member,
            GGroupFieldsData_members_memberBuilder> {
  _$GGroupFieldsData_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupFieldsData_members_memberBuilder() {
    GGroupFieldsData_members_member._initializeBuilder(this);
  }

  GGroupFieldsData_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData_members_member;
  }

  @override
  void update(void Function(GGroupFieldsData_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData_members_member build() => _build();

  _$GGroupFieldsData_members_member _build() {
    final _$result = _$v ??
        new _$GGroupFieldsData_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GGroupFieldsData_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupFieldsData_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GGroupFieldsData_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseBasicData extends GExpenseBasicData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GExpenseBasicData(
          [void Function(GExpenseBasicDataBuilder)? updates]) =>
      (new GExpenseBasicDataBuilder()..update(updates))._build();

  _$GExpenseBasicData._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseBasicData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GExpenseBasicData', 'id');
    BuiltValueNullFieldError.checkNotNull(title, r'GExpenseBasicData', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseBasicData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseBasicData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseBasicData', 'creatorId');
  }

  @override
  GExpenseBasicData rebuild(void Function(GExpenseBasicDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseBasicDataBuilder toBuilder() =>
      new GExpenseBasicDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseBasicData &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseBasicData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GExpenseBasicDataBuilder
    implements Builder<GExpenseBasicData, GExpenseBasicDataBuilder> {
  _$GExpenseBasicData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GExpenseBasicDataBuilder() {
    GExpenseBasicData._initializeBuilder(this);
  }

  GExpenseBasicDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseBasicData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseBasicData;
  }

  @override
  void update(void Function(GExpenseBasicDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseBasicData build() => _build();

  _$GExpenseBasicData _build() {
    final _$result = _$v ??
        new _$GExpenseBasicData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GExpenseBasicData', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseBasicData', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GExpenseBasicData', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GExpenseBasicData', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GExpenseBasicData', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(
                creatorId, r'GExpenseBasicData', 'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData extends GExpenseFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;
  @override
  final GExpenseFieldsData_creator creator;
  @override
  final BuiltList<GExpenseFieldsData_splits> splits;

  factory _$GExpenseFieldsData(
          [void Function(GExpenseFieldsDataBuilder)? updates]) =>
      (new GExpenseFieldsDataBuilder()..update(updates))._build();

  _$GExpenseFieldsData._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId,
      required this.creator,
      required this.splits})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GExpenseFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GExpenseFieldsData', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseFieldsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseFieldsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GExpenseFieldsData', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GExpenseFieldsData', 'splits');
  }

  @override
  GExpenseFieldsData rebuild(
          void Function(GExpenseFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsDataBuilder toBuilder() =>
      new GExpenseFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        creator == other.creator &&
        splits == other.splits;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('creator', creator)
          ..add('splits', splits))
        .toString();
  }
}

class GExpenseFieldsDataBuilder
    implements Builder<GExpenseFieldsData, GExpenseFieldsDataBuilder> {
  _$GExpenseFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GExpenseFieldsData_creatorBuilder? _creator;
  GExpenseFieldsData_creatorBuilder get creator =>
      _$this._creator ??= new GExpenseFieldsData_creatorBuilder();
  set creator(GExpenseFieldsData_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GExpenseFieldsData_splits>? _splits;
  ListBuilder<GExpenseFieldsData_splits> get splits =>
      _$this._splits ??= new ListBuilder<GExpenseFieldsData_splits>();
  set splits(ListBuilder<GExpenseFieldsData_splits>? splits) =>
      _$this._splits = splits;

  GExpenseFieldsDataBuilder() {
    GExpenseFieldsData._initializeBuilder(this);
  }

  GExpenseFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _creator = $v.creator.toBuilder();
      _splits = $v.splits.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData;
  }

  @override
  void update(void Function(GExpenseFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData build() => _build();

  _$GExpenseFieldsData _build() {
    _$GExpenseFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GExpenseFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GExpenseFieldsData', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GExpenseFieldsData', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GExpenseFieldsData', 'createdAt'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GExpenseFieldsData', 'amount'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GExpenseFieldsData', 'creatorId'),
              creator: creator.build(),
              splits: splits.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'splits';
        splits.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_creator extends GExpenseFieldsData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseFieldsData_creator(
          [void Function(GExpenseFieldsData_creatorBuilder)? updates]) =>
      (new GExpenseFieldsData_creatorBuilder()..update(updates))._build();

  _$GExpenseFieldsData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseFieldsData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseFieldsData_creator', 'isSignedUp');
  }

  @override
  GExpenseFieldsData_creator rebuild(
          void Function(GExpenseFieldsData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_creatorBuilder toBuilder() =>
      new GExpenseFieldsData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseFieldsData_creatorBuilder
    implements
        Builder<GExpenseFieldsData_creator, GExpenseFieldsData_creatorBuilder> {
  _$GExpenseFieldsData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseFieldsData_creatorBuilder() {
    GExpenseFieldsData_creator._initializeBuilder(this);
  }

  GExpenseFieldsData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_creator;
  }

  @override
  void update(void Function(GExpenseFieldsData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_creator build() => _build();

  _$GExpenseFieldsData_creator _build() {
    final _$result = _$v ??
        new _$GExpenseFieldsData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GExpenseFieldsData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseFieldsData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GExpenseFieldsData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_splits extends GExpenseFieldsData_splits {
  @override
  final String G__typename;
  @override
  final GExpenseFieldsData_splits_fromUser fromUser;
  @override
  final GExpenseFieldsData_splits_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GExpenseFieldsData_splits(
          [void Function(GExpenseFieldsData_splitsBuilder)? updates]) =>
      (new GExpenseFieldsData_splitsBuilder()..update(updates))._build();

  _$GExpenseFieldsData_splits._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GExpenseFieldsData_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GExpenseFieldsData_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseFieldsData_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseFieldsData_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GExpenseFieldsData_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseFieldsData_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GExpenseFieldsData_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GExpenseFieldsData_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseFieldsData_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GExpenseFieldsData_splits', 'groupId');
  }

  @override
  GExpenseFieldsData_splits rebuild(
          void Function(GExpenseFieldsData_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_splitsBuilder toBuilder() =>
      new GExpenseFieldsData_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_splits &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_splits')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GExpenseFieldsData_splitsBuilder
    implements
        Builder<GExpenseFieldsData_splits, GExpenseFieldsData_splitsBuilder> {
  _$GExpenseFieldsData_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GExpenseFieldsData_splits_fromUserBuilder? _fromUser;
  GExpenseFieldsData_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GExpenseFieldsData_splits_fromUserBuilder();
  set fromUser(GExpenseFieldsData_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GExpenseFieldsData_splits_toUserBuilder? _toUser;
  GExpenseFieldsData_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new GExpenseFieldsData_splits_toUserBuilder();
  set toUser(GExpenseFieldsData_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GExpenseFieldsData_splitsBuilder() {
    GExpenseFieldsData_splits._initializeBuilder(this);
  }

  GExpenseFieldsData_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_splits;
  }

  @override
  void update(void Function(GExpenseFieldsData_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_splits build() => _build();

  _$GExpenseFieldsData_splits _build() {
    _$GExpenseFieldsData_splits _$result;
    try {
      _$result = _$v ??
          new _$GExpenseFieldsData_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseFieldsData_splits', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GExpenseFieldsData_splits', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GExpenseFieldsData_splits', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GExpenseFieldsData_splits', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GExpenseFieldsData_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GExpenseFieldsData_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GExpenseFieldsData_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GExpenseFieldsData_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GExpenseFieldsData_splits', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseFieldsData_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_splits_fromUser
    extends GExpenseFieldsData_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseFieldsData_splits_fromUser(
          [void Function(GExpenseFieldsData_splits_fromUserBuilder)?
              updates]) =>
      (new GExpenseFieldsData_splits_fromUserBuilder()..update(updates))
          ._build();

  _$GExpenseFieldsData_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseFieldsData_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseFieldsData_splits_fromUser', 'isSignedUp');
  }

  @override
  GExpenseFieldsData_splits_fromUser rebuild(
          void Function(GExpenseFieldsData_splits_fromUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_splits_fromUserBuilder toBuilder() =>
      new GExpenseFieldsData_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseFieldsData_splits_fromUserBuilder
    implements
        Builder<GExpenseFieldsData_splits_fromUser,
            GExpenseFieldsData_splits_fromUserBuilder> {
  _$GExpenseFieldsData_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseFieldsData_splits_fromUserBuilder() {
    GExpenseFieldsData_splits_fromUser._initializeBuilder(this);
  }

  GExpenseFieldsData_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_splits_fromUser;
  }

  @override
  void update(
      void Function(GExpenseFieldsData_splits_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_splits_fromUser build() => _build();

  _$GExpenseFieldsData_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GExpenseFieldsData_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseFieldsData_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseFieldsData_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GExpenseFieldsData_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_splits_toUser
    extends GExpenseFieldsData_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseFieldsData_splits_toUser(
          [void Function(GExpenseFieldsData_splits_toUserBuilder)? updates]) =>
      (new GExpenseFieldsData_splits_toUserBuilder()..update(updates))._build();

  _$GExpenseFieldsData_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseFieldsData_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseFieldsData_splits_toUser', 'isSignedUp');
  }

  @override
  GExpenseFieldsData_splits_toUser rebuild(
          void Function(GExpenseFieldsData_splits_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_splits_toUserBuilder toBuilder() =>
      new GExpenseFieldsData_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseFieldsData_splits_toUserBuilder
    implements
        Builder<GExpenseFieldsData_splits_toUser,
            GExpenseFieldsData_splits_toUserBuilder> {
  _$GExpenseFieldsData_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseFieldsData_splits_toUserBuilder() {
    GExpenseFieldsData_splits_toUser._initializeBuilder(this);
  }

  GExpenseFieldsData_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_splits_toUser;
  }

  @override
  void update(void Function(GExpenseFieldsData_splits_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_splits_toUser build() => _build();

  _$GExpenseFieldsData_splits_toUser _build() {
    final _$result = _$v ??
        new _$GExpenseFieldsData_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseFieldsData_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseFieldsData_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GExpenseFieldsData_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData extends GNewExpenseFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;
  @override
  final BuiltList<GNewExpenseFieldsData_splits> splits;

  factory _$GNewExpenseFieldsData(
          [void Function(GNewExpenseFieldsDataBuilder)? updates]) =>
      (new GNewExpenseFieldsDataBuilder()..update(updates))._build();

  _$GNewExpenseFieldsData._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId,
      required this.splits})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GNewExpenseFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GNewExpenseFieldsData', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GNewExpenseFieldsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GNewExpenseFieldsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GNewExpenseFieldsData', 'splits');
  }

  @override
  GNewExpenseFieldsData rebuild(
          void Function(GNewExpenseFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsDataBuilder toBuilder() =>
      new GNewExpenseFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        splits == other.splits;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('splits', splits))
        .toString();
  }
}

class GNewExpenseFieldsDataBuilder
    implements Builder<GNewExpenseFieldsData, GNewExpenseFieldsDataBuilder> {
  _$GNewExpenseFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  ListBuilder<GNewExpenseFieldsData_splits>? _splits;
  ListBuilder<GNewExpenseFieldsData_splits> get splits =>
      _$this._splits ??= new ListBuilder<GNewExpenseFieldsData_splits>();
  set splits(ListBuilder<GNewExpenseFieldsData_splits>? splits) =>
      _$this._splits = splits;

  GNewExpenseFieldsDataBuilder() {
    GNewExpenseFieldsData._initializeBuilder(this);
  }

  GNewExpenseFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _splits = $v.splits.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData;
  }

  @override
  void update(void Function(GNewExpenseFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData build() => _build();

  _$GNewExpenseFieldsData _build() {
    _$GNewExpenseFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GNewExpenseFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GNewExpenseFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GNewExpenseFieldsData', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GNewExpenseFieldsData', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GNewExpenseFieldsData', 'createdAt'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GNewExpenseFieldsData', 'amount'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GNewExpenseFieldsData', 'creatorId'),
              splits: splits.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'splits';
        splits.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNewExpenseFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits extends GNewExpenseFieldsData_splits {
  @override
  final String G__typename;
  @override
  final GNewExpenseFieldsData_splits_expense? expense;
  @override
  final GNewExpenseFieldsData_splits_group group;
  @override
  final GNewExpenseFieldsData_splits_creator creator;
  @override
  final GNewExpenseFieldsData_splits_fromUser fromUser;
  @override
  final GNewExpenseFieldsData_splits_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GNewExpenseFieldsData_splits(
          [void Function(GNewExpenseFieldsData_splitsBuilder)? updates]) =>
      (new GNewExpenseFieldsData_splitsBuilder()..update(updates))._build();

  _$GNewExpenseFieldsData_splits._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GNewExpenseFieldsData_splits', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GNewExpenseFieldsData_splits', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GNewExpenseFieldsData_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GNewExpenseFieldsData_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GNewExpenseFieldsData_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GNewExpenseFieldsData_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GNewExpenseFieldsData_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GNewExpenseFieldsData_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GNewExpenseFieldsData_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GNewExpenseFieldsData_splits', 'groupId');
  }

  @override
  GNewExpenseFieldsData_splits rebuild(
          void Function(GNewExpenseFieldsData_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splitsBuilder toBuilder() =>
      new GNewExpenseFieldsData_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GNewExpenseFieldsData_splitsBuilder
    implements
        Builder<GNewExpenseFieldsData_splits,
            GNewExpenseFieldsData_splitsBuilder> {
  _$GNewExpenseFieldsData_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GNewExpenseFieldsData_splits_expenseBuilder? _expense;
  GNewExpenseFieldsData_splits_expenseBuilder get expense =>
      _$this._expense ??= new GNewExpenseFieldsData_splits_expenseBuilder();
  set expense(GNewExpenseFieldsData_splits_expenseBuilder? expense) =>
      _$this._expense = expense;

  GNewExpenseFieldsData_splits_groupBuilder? _group;
  GNewExpenseFieldsData_splits_groupBuilder get group =>
      _$this._group ??= new GNewExpenseFieldsData_splits_groupBuilder();
  set group(GNewExpenseFieldsData_splits_groupBuilder? group) =>
      _$this._group = group;

  GNewExpenseFieldsData_splits_creatorBuilder? _creator;
  GNewExpenseFieldsData_splits_creatorBuilder get creator =>
      _$this._creator ??= new GNewExpenseFieldsData_splits_creatorBuilder();
  set creator(GNewExpenseFieldsData_splits_creatorBuilder? creator) =>
      _$this._creator = creator;

  GNewExpenseFieldsData_splits_fromUserBuilder? _fromUser;
  GNewExpenseFieldsData_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GNewExpenseFieldsData_splits_fromUserBuilder();
  set fromUser(GNewExpenseFieldsData_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GNewExpenseFieldsData_splits_toUserBuilder? _toUser;
  GNewExpenseFieldsData_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new GNewExpenseFieldsData_splits_toUserBuilder();
  set toUser(GNewExpenseFieldsData_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GNewExpenseFieldsData_splitsBuilder() {
    GNewExpenseFieldsData_splits._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits;
  }

  @override
  void update(void Function(GNewExpenseFieldsData_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits build() => _build();

  _$GNewExpenseFieldsData_splits _build() {
    _$GNewExpenseFieldsData_splits _$result;
    try {
      _$result = _$v ??
          new _$GNewExpenseFieldsData_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GNewExpenseFieldsData_splits', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GNewExpenseFieldsData_splits', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GNewExpenseFieldsData_splits', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GNewExpenseFieldsData_splits', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GNewExpenseFieldsData_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GNewExpenseFieldsData_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GNewExpenseFieldsData_splits', 'toUserId'),
              creatorId:
                  BuiltValueNullFieldError.checkNotNull(creatorId, r'GNewExpenseFieldsData_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GNewExpenseFieldsData_splits', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNewExpenseFieldsData_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_expense
    extends GNewExpenseFieldsData_splits_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GNewExpenseFieldsData_splits_expense(
          [void Function(GNewExpenseFieldsData_splits_expenseBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_expenseBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GNewExpenseFieldsData_splits_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GNewExpenseFieldsData_splits_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData_splits_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GNewExpenseFieldsData_splits_expense', 'creatorId');
  }

  @override
  GNewExpenseFieldsData_splits_expense rebuild(
          void Function(GNewExpenseFieldsData_splits_expenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_expenseBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_expenseBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_expense,
            GNewExpenseFieldsData_splits_expenseBuilder> {
  _$GNewExpenseFieldsData_splits_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GNewExpenseFieldsData_splits_expenseBuilder() {
    GNewExpenseFieldsData_splits_expense._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_expense;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_expense build() => _build();

  _$GNewExpenseFieldsData_splits_expense _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_expense', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GNewExpenseFieldsData_splits_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(createdAt,
                r'GNewExpenseFieldsData_splits_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GNewExpenseFieldsData_splits_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                r'GNewExpenseFieldsData_splits_expense', 'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_group
    extends GNewExpenseFieldsData_splits_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GNewExpenseFieldsData_splits_group(
          [void Function(GNewExpenseFieldsData_splits_groupBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_groupBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_group', 'id');
  }

  @override
  GNewExpenseFieldsData_splits_group rebuild(
          void Function(GNewExpenseFieldsData_splits_groupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_groupBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_groupBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_group,
            GNewExpenseFieldsData_splits_groupBuilder> {
  _$GNewExpenseFieldsData_splits_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GNewExpenseFieldsData_splits_groupBuilder() {
    GNewExpenseFieldsData_splits_group._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_group;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_group build() => _build();

  _$GNewExpenseFieldsData_splits_group _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_creator
    extends GNewExpenseFieldsData_splits_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GNewExpenseFieldsData_splits_creator(
          [void Function(GNewExpenseFieldsData_splits_creatorBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_creatorBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GNewExpenseFieldsData_splits_creator', 'isSignedUp');
  }

  @override
  GNewExpenseFieldsData_splits_creator rebuild(
          void Function(GNewExpenseFieldsData_splits_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_creatorBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_creatorBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_creator,
            GNewExpenseFieldsData_splits_creatorBuilder> {
  _$GNewExpenseFieldsData_splits_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GNewExpenseFieldsData_splits_creatorBuilder() {
    GNewExpenseFieldsData_splits_creator._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_creator;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_creator build() => _build();

  _$GNewExpenseFieldsData_splits_creator _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GNewExpenseFieldsData_splits_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_fromUser
    extends GNewExpenseFieldsData_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GNewExpenseFieldsData_splits_fromUser(
          [void Function(GNewExpenseFieldsData_splits_fromUserBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_fromUserBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GNewExpenseFieldsData_splits_fromUser', 'isSignedUp');
  }

  @override
  GNewExpenseFieldsData_splits_fromUser rebuild(
          void Function(GNewExpenseFieldsData_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_fromUserBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GNewExpenseFieldsData_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_fromUserBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_fromUser,
            GNewExpenseFieldsData_splits_fromUserBuilder> {
  _$GNewExpenseFieldsData_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GNewExpenseFieldsData_splits_fromUserBuilder() {
    GNewExpenseFieldsData_splits_fromUser._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_fromUser;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_fromUser build() => _build();

  _$GNewExpenseFieldsData_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GNewExpenseFieldsData_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_toUser
    extends GNewExpenseFieldsData_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GNewExpenseFieldsData_splits_toUser(
          [void Function(GNewExpenseFieldsData_splits_toUserBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_toUserBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GNewExpenseFieldsData_splits_toUser', 'isSignedUp');
  }

  @override
  GNewExpenseFieldsData_splits_toUser rebuild(
          void Function(GNewExpenseFieldsData_splits_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_toUserBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_toUserBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_toUser,
            GNewExpenseFieldsData_splits_toUserBuilder> {
  _$GNewExpenseFieldsData_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GNewExpenseFieldsData_splits_toUserBuilder() {
    GNewExpenseFieldsData_splits_toUser._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_toUser;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_toUser build() => _build();

  _$GNewExpenseFieldsData_splits_toUser _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GNewExpenseFieldsData_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsBasicsData extends GSplitFieldsBasicsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GSplitFieldsBasicsData(
          [void Function(GSplitFieldsBasicsDataBuilder)? updates]) =>
      (new GSplitFieldsBasicsDataBuilder()..update(updates))._build();

  _$GSplitFieldsBasicsData._(
      {required this.G__typename,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsBasicsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GSplitFieldsBasicsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitFieldsBasicsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GSplitFieldsBasicsData', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitFieldsBasicsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GSplitFieldsBasicsData', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GSplitFieldsBasicsData', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitFieldsBasicsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GSplitFieldsBasicsData', 'groupId');
  }

  @override
  GSplitFieldsBasicsData rebuild(
          void Function(GSplitFieldsBasicsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsBasicsDataBuilder toBuilder() =>
      new GSplitFieldsBasicsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsBasicsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsBasicsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GSplitFieldsBasicsDataBuilder
    implements Builder<GSplitFieldsBasicsData, GSplitFieldsBasicsDataBuilder> {
  _$GSplitFieldsBasicsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GSplitFieldsBasicsDataBuilder() {
    GSplitFieldsBasicsData._initializeBuilder(this);
  }

  GSplitFieldsBasicsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsBasicsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsBasicsData;
  }

  @override
  void update(void Function(GSplitFieldsBasicsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsBasicsData build() => _build();

  _$GSplitFieldsBasicsData _build() {
    final _$result = _$v ??
        new _$GSplitFieldsBasicsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitFieldsBasicsData', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitFieldsBasicsData', 'id'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GSplitFieldsBasicsData', 'amount'),
            transactionType: BuiltValueNullFieldError.checkNotNull(
                transactionType, r'GSplitFieldsBasicsData', 'transactionType'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GSplitFieldsBasicsData', 'createdAt'),
            transactionPartGroupId: transactionPartGroupId,
            fromUserId: BuiltValueNullFieldError.checkNotNull(
                fromUserId, r'GSplitFieldsBasicsData', 'fromUserId'),
            toUserId: BuiltValueNullFieldError.checkNotNull(
                toUserId, r'GSplitFieldsBasicsData', 'toUserId'),
            creatorId: BuiltValueNullFieldError.checkNotNull(
                creatorId, r'GSplitFieldsBasicsData', 'creatorId'),
            withGroupId: withGroupId,
            groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GSplitFieldsBasicsData', 'groupId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsData extends GSplitFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final GSplitFieldsData_fromUser fromUser;
  @override
  final GSplitFieldsData_toUser toUser;

  factory _$GSplitFieldsData(
          [void Function(GSplitFieldsDataBuilder)? updates]) =>
      (new GSplitFieldsDataBuilder()..update(updates))._build();

  _$GSplitFieldsData._(
      {required this.G__typename,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      required this.fromUser,
      required this.toUser})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GSplitFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GSplitFieldsData', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitFieldsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GSplitFieldsData', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GSplitFieldsData', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitFieldsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GSplitFieldsData', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GSplitFieldsData', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GSplitFieldsData', 'toUser');
  }

  @override
  GSplitFieldsData rebuild(void Function(GSplitFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsDataBuilder toBuilder() =>
      new GSplitFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        fromUser == other.fromUser &&
        toUser == other.toUser;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser))
        .toString();
  }
}

class GSplitFieldsDataBuilder
    implements Builder<GSplitFieldsData, GSplitFieldsDataBuilder> {
  _$GSplitFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GSplitFieldsData_fromUserBuilder? _fromUser;
  GSplitFieldsData_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GSplitFieldsData_fromUserBuilder();
  set fromUser(GSplitFieldsData_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GSplitFieldsData_toUserBuilder? _toUser;
  GSplitFieldsData_toUserBuilder get toUser =>
      _$this._toUser ??= new GSplitFieldsData_toUserBuilder();
  set toUser(GSplitFieldsData_toUserBuilder? toUser) => _$this._toUser = toUser;

  GSplitFieldsDataBuilder() {
    GSplitFieldsData._initializeBuilder(this);
  }

  GSplitFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsData;
  }

  @override
  void update(void Function(GSplitFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsData build() => _build();

  _$GSplitFieldsData _build() {
    _$GSplitFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GSplitFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GSplitFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitFieldsData', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GSplitFieldsData', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GSplitFieldsData', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitFieldsData', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GSplitFieldsData', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GSplitFieldsData', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GSplitFieldsData', 'creatorId'),
              withGroupId: withGroupId,
              groupId:
                  BuiltValueNullFieldError.checkNotNull(groupId, r'GSplitFieldsData', 'groupId'),
              fromUser: fromUser.build(),
              toUser: toUser.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsData_fromUser extends GSplitFieldsData_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitFieldsData_fromUser(
          [void Function(GSplitFieldsData_fromUserBuilder)? updates]) =>
      (new GSplitFieldsData_fromUserBuilder()..update(updates))._build();

  _$GSplitFieldsData_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsData_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitFieldsData_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitFieldsData_fromUser', 'isSignedUp');
  }

  @override
  GSplitFieldsData_fromUser rebuild(
          void Function(GSplitFieldsData_fromUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsData_fromUserBuilder toBuilder() =>
      new GSplitFieldsData_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsData_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsData_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitFieldsData_fromUserBuilder
    implements
        Builder<GSplitFieldsData_fromUser, GSplitFieldsData_fromUserBuilder> {
  _$GSplitFieldsData_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitFieldsData_fromUserBuilder() {
    GSplitFieldsData_fromUser._initializeBuilder(this);
  }

  GSplitFieldsData_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsData_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsData_fromUser;
  }

  @override
  void update(void Function(GSplitFieldsData_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsData_fromUser build() => _build();

  _$GSplitFieldsData_fromUser _build() {
    final _$result = _$v ??
        new _$GSplitFieldsData_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitFieldsData_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitFieldsData_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GSplitFieldsData_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsData_toUser extends GSplitFieldsData_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitFieldsData_toUser(
          [void Function(GSplitFieldsData_toUserBuilder)? updates]) =>
      (new GSplitFieldsData_toUserBuilder()..update(updates))._build();

  _$GSplitFieldsData_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsData_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GSplitFieldsData_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitFieldsData_toUser', 'isSignedUp');
  }

  @override
  GSplitFieldsData_toUser rebuild(
          void Function(GSplitFieldsData_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsData_toUserBuilder toBuilder() =>
      new GSplitFieldsData_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsData_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsData_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitFieldsData_toUserBuilder
    implements
        Builder<GSplitFieldsData_toUser, GSplitFieldsData_toUserBuilder> {
  _$GSplitFieldsData_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitFieldsData_toUserBuilder() {
    GSplitFieldsData_toUser._initializeBuilder(this);
  }

  GSplitFieldsData_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsData_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsData_toUser;
  }

  @override
  void update(void Function(GSplitFieldsData_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsData_toUser build() => _build();

  _$GSplitFieldsData_toUser _build() {
    final _$result = _$v ??
        new _$GSplitFieldsData_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitFieldsData_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitFieldsData_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GSplitFieldsData_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData extends GSplitTransactionFieldsData {
  @override
  final String G__typename;
  @override
  final GSplitTransactionFieldsData_fromUser fromUser;
  @override
  final GSplitTransactionFieldsData_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final GSplitTransactionFieldsData_expense? expense;
  @override
  final GSplitTransactionFieldsData_group group;
  @override
  final GSplitTransactionFieldsData_creator creator;

  factory _$GSplitTransactionFieldsData(
          [void Function(GSplitTransactionFieldsDataBuilder)? updates]) =>
      (new GSplitTransactionFieldsDataBuilder()..update(updates))._build();

  _$GSplitTransactionFieldsData._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.expense,
      required this.group,
      required this.creator})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GSplitTransactionFieldsData', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GSplitTransactionFieldsData', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitTransactionFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GSplitTransactionFieldsData', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitTransactionFieldsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GSplitTransactionFieldsData', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GSplitTransactionFieldsData', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitTransactionFieldsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GSplitTransactionFieldsData', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GSplitTransactionFieldsData', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GSplitTransactionFieldsData', 'creator');
  }

  @override
  GSplitTransactionFieldsData rebuild(
          void Function(GSplitTransactionFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsDataBuilder toBuilder() =>
      new GSplitTransactionFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator))
        .toString();
  }
}

class GSplitTransactionFieldsDataBuilder
    implements
        Builder<GSplitTransactionFieldsData,
            GSplitTransactionFieldsDataBuilder> {
  _$GSplitTransactionFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GSplitTransactionFieldsData_fromUserBuilder? _fromUser;
  GSplitTransactionFieldsData_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GSplitTransactionFieldsData_fromUserBuilder();
  set fromUser(GSplitTransactionFieldsData_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GSplitTransactionFieldsData_toUserBuilder? _toUser;
  GSplitTransactionFieldsData_toUserBuilder get toUser =>
      _$this._toUser ??= new GSplitTransactionFieldsData_toUserBuilder();
  set toUser(GSplitTransactionFieldsData_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GSplitTransactionFieldsData_expenseBuilder? _expense;
  GSplitTransactionFieldsData_expenseBuilder get expense =>
      _$this._expense ??= new GSplitTransactionFieldsData_expenseBuilder();
  set expense(GSplitTransactionFieldsData_expenseBuilder? expense) =>
      _$this._expense = expense;

  GSplitTransactionFieldsData_groupBuilder? _group;
  GSplitTransactionFieldsData_groupBuilder get group =>
      _$this._group ??= new GSplitTransactionFieldsData_groupBuilder();
  set group(GSplitTransactionFieldsData_groupBuilder? group) =>
      _$this._group = group;

  GSplitTransactionFieldsData_creatorBuilder? _creator;
  GSplitTransactionFieldsData_creatorBuilder get creator =>
      _$this._creator ??= new GSplitTransactionFieldsData_creatorBuilder();
  set creator(GSplitTransactionFieldsData_creatorBuilder? creator) =>
      _$this._creator = creator;

  GSplitTransactionFieldsDataBuilder() {
    GSplitTransactionFieldsData._initializeBuilder(this);
  }

  GSplitTransactionFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData;
  }

  @override
  void update(void Function(GSplitTransactionFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData build() => _build();

  _$GSplitTransactionFieldsData _build() {
    _$GSplitTransactionFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GSplitTransactionFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GSplitTransactionFieldsData', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitTransactionFieldsData', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GSplitTransactionFieldsData', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GSplitTransactionFieldsData', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitTransactionFieldsData', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GSplitTransactionFieldsData', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GSplitTransactionFieldsData', 'toUserId'),
              creatorId:
                  BuiltValueNullFieldError.checkNotNull(creatorId, r'GSplitTransactionFieldsData', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GSplitTransactionFieldsData', 'groupId'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitTransactionFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_fromUser
    extends GSplitTransactionFieldsData_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitTransactionFieldsData_fromUser(
          [void Function(GSplitTransactionFieldsData_fromUserBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_fromUserBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitTransactionFieldsData_fromUser', 'isSignedUp');
  }

  @override
  GSplitTransactionFieldsData_fromUser rebuild(
          void Function(GSplitTransactionFieldsData_fromUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_fromUserBuilder toBuilder() =>
      new GSplitTransactionFieldsData_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitTransactionFieldsData_fromUserBuilder
    implements
        Builder<GSplitTransactionFieldsData_fromUser,
            GSplitTransactionFieldsData_fromUserBuilder> {
  _$GSplitTransactionFieldsData_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitTransactionFieldsData_fromUserBuilder() {
    GSplitTransactionFieldsData_fromUser._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_fromUser;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_fromUser build() => _build();

  _$GSplitTransactionFieldsData_fromUser _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitTransactionFieldsData_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_toUser
    extends GSplitTransactionFieldsData_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitTransactionFieldsData_toUser(
          [void Function(GSplitTransactionFieldsData_toUserBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_toUserBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitTransactionFieldsData_toUser', 'isSignedUp');
  }

  @override
  GSplitTransactionFieldsData_toUser rebuild(
          void Function(GSplitTransactionFieldsData_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_toUserBuilder toBuilder() =>
      new GSplitTransactionFieldsData_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitTransactionFieldsData_toUserBuilder
    implements
        Builder<GSplitTransactionFieldsData_toUser,
            GSplitTransactionFieldsData_toUserBuilder> {
  _$GSplitTransactionFieldsData_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitTransactionFieldsData_toUserBuilder() {
    GSplitTransactionFieldsData_toUser._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_toUser;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_toUser build() => _build();

  _$GSplitTransactionFieldsData_toUser _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitTransactionFieldsData_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_expense
    extends GSplitTransactionFieldsData_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GSplitTransactionFieldsData_expense(
          [void Function(GSplitTransactionFieldsData_expenseBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_expenseBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GSplitTransactionFieldsData_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitTransactionFieldsData_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitTransactionFieldsData_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitTransactionFieldsData_expense', 'creatorId');
  }

  @override
  GSplitTransactionFieldsData_expense rebuild(
          void Function(GSplitTransactionFieldsData_expenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_expenseBuilder toBuilder() =>
      new GSplitTransactionFieldsData_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GSplitTransactionFieldsData_expenseBuilder
    implements
        Builder<GSplitTransactionFieldsData_expense,
            GSplitTransactionFieldsData_expenseBuilder> {
  _$GSplitTransactionFieldsData_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GSplitTransactionFieldsData_expenseBuilder() {
    GSplitTransactionFieldsData_expense._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_expense;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_expense build() => _build();

  _$GSplitTransactionFieldsData_expense _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_expense', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GSplitTransactionFieldsData_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GSplitTransactionFieldsData_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GSplitTransactionFieldsData_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                r'GSplitTransactionFieldsData_expense', 'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_group
    extends GSplitTransactionFieldsData_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GSplitTransactionFieldsData_group(
          [void Function(GSplitTransactionFieldsData_groupBuilder)? updates]) =>
      (new GSplitTransactionFieldsData_groupBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_group', 'id');
  }

  @override
  GSplitTransactionFieldsData_group rebuild(
          void Function(GSplitTransactionFieldsData_groupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_groupBuilder toBuilder() =>
      new GSplitTransactionFieldsData_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GSplitTransactionFieldsData_groupBuilder
    implements
        Builder<GSplitTransactionFieldsData_group,
            GSplitTransactionFieldsData_groupBuilder> {
  _$GSplitTransactionFieldsData_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GSplitTransactionFieldsData_groupBuilder() {
    GSplitTransactionFieldsData_group._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_group;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_group build() => _build();

  _$GSplitTransactionFieldsData_group _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_creator
    extends GSplitTransactionFieldsData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitTransactionFieldsData_creator(
          [void Function(GSplitTransactionFieldsData_creatorBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_creatorBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitTransactionFieldsData_creator', 'isSignedUp');
  }

  @override
  GSplitTransactionFieldsData_creator rebuild(
          void Function(GSplitTransactionFieldsData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_creatorBuilder toBuilder() =>
      new GSplitTransactionFieldsData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitTransactionFieldsData_creatorBuilder
    implements
        Builder<GSplitTransactionFieldsData_creator,
            GSplitTransactionFieldsData_creatorBuilder> {
  _$GSplitTransactionFieldsData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitTransactionFieldsData_creatorBuilder() {
    GSplitTransactionFieldsData_creator._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_creator;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_creator build() => _build();

  _$GSplitTransactionFieldsData_creator _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitTransactionFieldsData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData extends GGroupWithExpensesData {
  @override
  final String G__typename;
  @override
  final GGroupWithExpensesData_creator creator;
  @override
  final BuiltList<GGroupWithExpensesData_members> members;
  @override
  final int owed;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;
  @override
  final BuiltList<GGroupWithExpensesData_expenses> expenses;

  factory _$GGroupWithExpensesData(
          [void Function(GGroupWithExpensesDataBuilder)? updates]) =>
      (new GGroupWithExpensesDataBuilder()..update(updates))._build();

  _$GGroupWithExpensesData._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.owed,
      required this.createdAt,
      required this.id,
      this.name,
      required this.expenses})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GGroupWithExpensesData', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GGroupWithExpensesData', 'members');
    BuiltValueNullFieldError.checkNotNull(
        owed, r'GGroupWithExpensesData', 'owed');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GGroupWithExpensesData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(id, r'GGroupWithExpensesData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        expenses, r'GGroupWithExpensesData', 'expenses');
  }

  @override
  GGroupWithExpensesData rebuild(
          void Function(GGroupWithExpensesDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesDataBuilder toBuilder() =>
      new GGroupWithExpensesDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        owed == other.owed &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name &&
        expenses == other.expenses;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, owed.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, expenses.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupWithExpensesData')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('owed', owed)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name)
          ..add('expenses', expenses))
        .toString();
  }
}

class GGroupWithExpensesDataBuilder
    implements Builder<GGroupWithExpensesData, GGroupWithExpensesDataBuilder> {
  _$GGroupWithExpensesData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GGroupWithExpensesData_creatorBuilder? _creator;
  GGroupWithExpensesData_creatorBuilder get creator =>
      _$this._creator ??= new GGroupWithExpensesData_creatorBuilder();
  set creator(GGroupWithExpensesData_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GGroupWithExpensesData_members>? _members;
  ListBuilder<GGroupWithExpensesData_members> get members =>
      _$this._members ??= new ListBuilder<GGroupWithExpensesData_members>();
  set members(ListBuilder<GGroupWithExpensesData_members>? members) =>
      _$this._members = members;

  int? _owed;
  int? get owed => _$this._owed;
  set owed(int? owed) => _$this._owed = owed;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  ListBuilder<GGroupWithExpensesData_expenses>? _expenses;
  ListBuilder<GGroupWithExpensesData_expenses> get expenses =>
      _$this._expenses ??= new ListBuilder<GGroupWithExpensesData_expenses>();
  set expenses(ListBuilder<GGroupWithExpensesData_expenses>? expenses) =>
      _$this._expenses = expenses;

  GGroupWithExpensesDataBuilder() {
    GGroupWithExpensesData._initializeBuilder(this);
  }

  GGroupWithExpensesDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _owed = $v.owed;
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _expenses = $v.expenses.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData;
  }

  @override
  void update(void Function(GGroupWithExpensesDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData build() => _build();

  _$GGroupWithExpensesData _build() {
    _$GGroupWithExpensesData _$result;
    try {
      _$result = _$v ??
          new _$GGroupWithExpensesData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GGroupWithExpensesData', 'G__typename'),
              creator: creator.build(),
              members: members.build(),
              owed: BuiltValueNullFieldError.checkNotNull(
                  owed, r'GGroupWithExpensesData', 'owed'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GGroupWithExpensesData', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GGroupWithExpensesData', 'id'),
              name: name,
              expenses: expenses.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();

        _$failedField = 'expenses';
        expenses.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupWithExpensesData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_creator extends GGroupWithExpensesData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_creator(
          [void Function(GGroupWithExpensesData_creatorBuilder)? updates]) =>
      (new GGroupWithExpensesData_creatorBuilder()..update(updates))._build();

  _$GGroupWithExpensesData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupWithExpensesData_creator', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_creator rebuild(
          void Function(GGroupWithExpensesData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_creatorBuilder toBuilder() =>
      new GGroupWithExpensesData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupWithExpensesData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_creatorBuilder
    implements
        Builder<GGroupWithExpensesData_creator,
            GGroupWithExpensesData_creatorBuilder> {
  _$GGroupWithExpensesData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_creatorBuilder() {
    GGroupWithExpensesData_creator._initializeBuilder(this);
  }

  GGroupWithExpensesData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_creator;
  }

  @override
  void update(void Function(GGroupWithExpensesData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_creator build() => _build();

  _$GGroupWithExpensesData_creator _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GGroupWithExpensesData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GGroupWithExpensesData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_members extends GGroupWithExpensesData_members {
  @override
  final String G__typename;
  @override
  final int owedInGroup;
  @override
  final GGroupWithExpensesData_members_member member;

  factory _$GGroupWithExpensesData_members(
          [void Function(GGroupWithExpensesData_membersBuilder)? updates]) =>
      (new GGroupWithExpensesData_membersBuilder()..update(updates))._build();

  _$GGroupWithExpensesData_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GGroupWithExpensesData_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GGroupWithExpensesData_members', 'member');
  }

  @override
  GGroupWithExpensesData_members rebuild(
          void Function(GGroupWithExpensesData_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_membersBuilder toBuilder() =>
      new GGroupWithExpensesData_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupWithExpensesData_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GGroupWithExpensesData_membersBuilder
    implements
        Builder<GGroupWithExpensesData_members,
            GGroupWithExpensesData_membersBuilder> {
  _$GGroupWithExpensesData_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _owedInGroup;
  int? get owedInGroup => _$this._owedInGroup;
  set owedInGroup(int? owedInGroup) => _$this._owedInGroup = owedInGroup;

  GGroupWithExpensesData_members_memberBuilder? _member;
  GGroupWithExpensesData_members_memberBuilder get member =>
      _$this._member ??= new GGroupWithExpensesData_members_memberBuilder();
  set member(GGroupWithExpensesData_members_memberBuilder? member) =>
      _$this._member = member;

  GGroupWithExpensesData_membersBuilder() {
    GGroupWithExpensesData_members._initializeBuilder(this);
  }

  GGroupWithExpensesData_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup;
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_members;
  }

  @override
  void update(void Function(GGroupWithExpensesData_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_members build() => _build();

  _$GGroupWithExpensesData_members _build() {
    _$GGroupWithExpensesData_members _$result;
    try {
      _$result = _$v ??
          new _$GGroupWithExpensesData_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GGroupWithExpensesData_members', 'G__typename'),
              owedInGroup: BuiltValueNullFieldError.checkNotNull(owedInGroup,
                  r'GGroupWithExpensesData_members', 'owedInGroup'),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupWithExpensesData_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_members_member
    extends GGroupWithExpensesData_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_members_member(
          [void Function(GGroupWithExpensesData_members_memberBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_members_memberBuilder()..update(updates))
          ._build();

  _$GGroupWithExpensesData_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupWithExpensesData_members_member', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_members_member rebuild(
          void Function(GGroupWithExpensesData_members_memberBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_members_memberBuilder toBuilder() =>
      new GGroupWithExpensesData_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_members_memberBuilder
    implements
        Builder<GGroupWithExpensesData_members_member,
            GGroupWithExpensesData_members_memberBuilder> {
  _$GGroupWithExpensesData_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_members_memberBuilder() {
    GGroupWithExpensesData_members_member._initializeBuilder(this);
  }

  GGroupWithExpensesData_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_members_member;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_members_member build() => _build();

  _$GGroupWithExpensesData_members_member _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GGroupWithExpensesData_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GGroupWithExpensesData_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses
    extends GGroupWithExpensesData_expenses {
  @override
  final String G__typename;
  @override
  final GGroupWithExpensesData_expenses_creator creator;
  @override
  final BuiltList<GGroupWithExpensesData_expenses_splits> splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GGroupWithExpensesData_expenses(
          [void Function(GGroupWithExpensesData_expensesBuilder)? updates]) =>
      (new GGroupWithExpensesData_expensesBuilder()..update(updates))._build();

  _$GGroupWithExpensesData_expenses._(
      {required this.G__typename,
      required this.creator,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_expenses', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GGroupWithExpensesData_expenses', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GGroupWithExpensesData_expenses', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GGroupWithExpensesData_expenses', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GGroupWithExpensesData_expenses', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GGroupWithExpensesData_expenses', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GGroupWithExpensesData_expenses', 'creatorId');
  }

  @override
  GGroupWithExpensesData_expenses rebuild(
          void Function(GGroupWithExpensesData_expensesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expensesBuilder toBuilder() =>
      new GGroupWithExpensesData_expensesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupWithExpensesData_expenses')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GGroupWithExpensesData_expensesBuilder
    implements
        Builder<GGroupWithExpensesData_expenses,
            GGroupWithExpensesData_expensesBuilder> {
  _$GGroupWithExpensesData_expenses? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GGroupWithExpensesData_expenses_creatorBuilder? _creator;
  GGroupWithExpensesData_expenses_creatorBuilder get creator =>
      _$this._creator ??= new GGroupWithExpensesData_expenses_creatorBuilder();
  set creator(GGroupWithExpensesData_expenses_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GGroupWithExpensesData_expenses_splits>? _splits;
  ListBuilder<GGroupWithExpensesData_expenses_splits> get splits =>
      _$this._splits ??=
          new ListBuilder<GGroupWithExpensesData_expenses_splits>();
  set splits(ListBuilder<GGroupWithExpensesData_expenses_splits>? splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GGroupWithExpensesData_expensesBuilder() {
    GGroupWithExpensesData_expenses._initializeBuilder(this);
  }

  GGroupWithExpensesData_expensesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses;
  }

  @override
  void update(void Function(GGroupWithExpensesData_expensesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses build() => _build();

  _$GGroupWithExpensesData_expenses _build() {
    _$GGroupWithExpensesData_expenses _$result;
    try {
      _$result = _$v ??
          new _$GGroupWithExpensesData_expenses._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GGroupWithExpensesData_expenses', 'G__typename'),
              creator: creator.build(),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GGroupWithExpensesData_expenses', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GGroupWithExpensesData_expenses', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GGroupWithExpensesData_expenses', 'createdAt'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GGroupWithExpensesData_expenses', 'amount'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GGroupWithExpensesData_expenses', 'creatorId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'splits';
        splits.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupWithExpensesData_expenses', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_creator
    extends GGroupWithExpensesData_expenses_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_expenses_creator(
          [void Function(GGroupWithExpensesData_expenses_creatorBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_creatorBuilder()..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_expenses_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupWithExpensesData_expenses_creator', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_expenses_creator rebuild(
          void Function(GGroupWithExpensesData_expenses_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_creatorBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_creatorBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_creator,
            GGroupWithExpensesData_expenses_creatorBuilder> {
  _$GGroupWithExpensesData_expenses_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_expenses_creatorBuilder() {
    GGroupWithExpensesData_expenses_creator._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_creator;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_creator build() => _build();

  _$GGroupWithExpensesData_expenses_creator _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_expenses_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GGroupWithExpensesData_expenses_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_expenses_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GGroupWithExpensesData_expenses_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_splits
    extends GGroupWithExpensesData_expenses_splits {
  @override
  final String G__typename;
  @override
  final GGroupWithExpensesData_expenses_splits_fromUser fromUser;
  @override
  final GGroupWithExpensesData_expenses_splits_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GGroupWithExpensesData_expenses_splits(
          [void Function(GGroupWithExpensesData_expenses_splitsBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_splitsBuilder()..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_splits._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_expenses_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GGroupWithExpensesData_expenses_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GGroupWithExpensesData_expenses_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GGroupWithExpensesData_expenses_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GGroupWithExpensesData_expenses_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GGroupWithExpensesData_expenses_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GGroupWithExpensesData_expenses_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GGroupWithExpensesData_expenses_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GGroupWithExpensesData_expenses_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GGroupWithExpensesData_expenses_splits', 'groupId');
  }

  @override
  GGroupWithExpensesData_expenses_splits rebuild(
          void Function(GGroupWithExpensesData_expenses_splitsBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_splitsBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_splits &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_splits')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_splitsBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_splits,
            GGroupWithExpensesData_expenses_splitsBuilder> {
  _$GGroupWithExpensesData_expenses_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GGroupWithExpensesData_expenses_splits_fromUserBuilder? _fromUser;
  GGroupWithExpensesData_expenses_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GGroupWithExpensesData_expenses_splits_fromUserBuilder();
  set fromUser(
          GGroupWithExpensesData_expenses_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GGroupWithExpensesData_expenses_splits_toUserBuilder? _toUser;
  GGroupWithExpensesData_expenses_splits_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GGroupWithExpensesData_expenses_splits_toUserBuilder();
  set toUser(GGroupWithExpensesData_expenses_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GGroupWithExpensesData_expenses_splitsBuilder() {
    GGroupWithExpensesData_expenses_splits._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_splits;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_splits build() => _build();

  _$GGroupWithExpensesData_expenses_splits _build() {
    _$GGroupWithExpensesData_expenses_splits _$result;
    try {
      _$result = _$v ??
          new _$GGroupWithExpensesData_expenses_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GGroupWithExpensesData_expenses_splits', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GGroupWithExpensesData_expenses_splits', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GGroupWithExpensesData_expenses_splits', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GGroupWithExpensesData_expenses_splits', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GGroupWithExpensesData_expenses_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GGroupWithExpensesData_expenses_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GGroupWithExpensesData_expenses_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GGroupWithExpensesData_expenses_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GGroupWithExpensesData_expenses_splits', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupWithExpensesData_expenses_splits',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_splits_fromUser
    extends GGroupWithExpensesData_expenses_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_expenses_splits_fromUser(
          [void Function(
                  GGroupWithExpensesData_expenses_splits_fromUserBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_splits_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GGroupWithExpensesData_expenses_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GGroupWithExpensesData_expenses_splits_fromUser', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_expenses_splits_fromUser rebuild(
          void Function(GGroupWithExpensesData_expenses_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_splits_fromUserBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_splits_fromUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_splits_fromUserBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_splits_fromUser,
            GGroupWithExpensesData_expenses_splits_fromUserBuilder> {
  _$GGroupWithExpensesData_expenses_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_expenses_splits_fromUserBuilder() {
    GGroupWithExpensesData_expenses_splits_fromUser._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_splits_fromUser;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_splits_fromUser build() => _build();

  _$GGroupWithExpensesData_expenses_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_expenses_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GGroupWithExpensesData_expenses_splits_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_expenses_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GGroupWithExpensesData_expenses_splits_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_splits_toUser
    extends GGroupWithExpensesData_expenses_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_expenses_splits_toUser(
          [void Function(GGroupWithExpensesData_expenses_splits_toUserBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_splits_toUserBuilder()
            ..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GGroupWithExpensesData_expenses_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GGroupWithExpensesData_expenses_splits_toUser', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_expenses_splits_toUser rebuild(
          void Function(GGroupWithExpensesData_expenses_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_splits_toUserBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_splits_toUserBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_splits_toUser,
            GGroupWithExpensesData_expenses_splits_toUserBuilder> {
  _$GGroupWithExpensesData_expenses_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_expenses_splits_toUserBuilder() {
    GGroupWithExpensesData_expenses_splits_toUser._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_splits_toUser;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_splits_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_splits_toUser build() => _build();

  _$GGroupWithExpensesData_expenses_splits_toUser _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_expenses_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GGroupWithExpensesData_expenses_splits_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_expenses_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GGroupWithExpensesData_expenses_splits_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData extends GExpenseMixSplitFieldsData {
  @override
  final String G__typename;
  @override
  final GExpenseMixSplitFieldsData_expense? expense;
  @override
  final GExpenseMixSplitFieldsData_split? split;

  factory _$GExpenseMixSplitFieldsData(
          [void Function(GExpenseMixSplitFieldsDataBuilder)? updates]) =>
      (new GExpenseMixSplitFieldsDataBuilder()..update(updates))._build();

  _$GExpenseMixSplitFieldsData._(
      {required this.G__typename, this.expense, this.split})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData', 'G__typename');
  }

  @override
  GExpenseMixSplitFieldsData rebuild(
          void Function(GExpenseMixSplitFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsDataBuilder toBuilder() =>
      new GExpenseMixSplitFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        split == other.split;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, split.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseMixSplitFieldsData')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('split', split))
        .toString();
  }
}

class GExpenseMixSplitFieldsDataBuilder
    implements
        Builder<GExpenseMixSplitFieldsData, GExpenseMixSplitFieldsDataBuilder> {
  _$GExpenseMixSplitFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GExpenseMixSplitFieldsData_expenseBuilder? _expense;
  GExpenseMixSplitFieldsData_expenseBuilder get expense =>
      _$this._expense ??= new GExpenseMixSplitFieldsData_expenseBuilder();
  set expense(GExpenseMixSplitFieldsData_expenseBuilder? expense) =>
      _$this._expense = expense;

  GExpenseMixSplitFieldsData_splitBuilder? _split;
  GExpenseMixSplitFieldsData_splitBuilder get split =>
      _$this._split ??= new GExpenseMixSplitFieldsData_splitBuilder();
  set split(GExpenseMixSplitFieldsData_splitBuilder? split) =>
      _$this._split = split;

  GExpenseMixSplitFieldsDataBuilder() {
    GExpenseMixSplitFieldsData._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _split = $v.split?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData;
  }

  @override
  void update(void Function(GExpenseMixSplitFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData build() => _build();

  _$GExpenseMixSplitFieldsData _build() {
    _$GExpenseMixSplitFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GExpenseMixSplitFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseMixSplitFieldsData', 'G__typename'),
              expense: _expense?.build(),
              split: _split?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'split';
        _split?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseMixSplitFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_expense
    extends GExpenseMixSplitFieldsData_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final int amount;
  @override
  final String creatorId;

  factory _$GExpenseMixSplitFieldsData_expense(
          [void Function(GExpenseMixSplitFieldsData_expenseBuilder)?
              updates]) =>
      (new GExpenseMixSplitFieldsData_expenseBuilder()..update(updates))
          ._build();

  _$GExpenseMixSplitFieldsData_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.amount,
      required this.creatorId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseMixSplitFieldsData_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GExpenseMixSplitFieldsData_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseMixSplitFieldsData_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseMixSplitFieldsData_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseMixSplitFieldsData_expense', 'creatorId');
  }

  @override
  GExpenseMixSplitFieldsData_expense rebuild(
          void Function(GExpenseMixSplitFieldsData_expenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_expenseBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        amount == other.amount &&
        creatorId == other.creatorId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseMixSplitFieldsData_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('amount', amount)
          ..add('creatorId', creatorId))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_expenseBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_expense,
            GExpenseMixSplitFieldsData_expenseBuilder> {
  _$GExpenseMixSplitFieldsData_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  GExpenseMixSplitFieldsData_expenseBuilder() {
    GExpenseMixSplitFieldsData_expense._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _amount = $v.amount;
      _creatorId = $v.creatorId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_expense;
  }

  @override
  void update(
      void Function(GExpenseMixSplitFieldsData_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_expense build() => _build();

  _$GExpenseMixSplitFieldsData_expense _build() {
    final _$result = _$v ??
        new _$GExpenseMixSplitFieldsData_expense._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseMixSplitFieldsData_expense', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseMixSplitFieldsData_expense', 'id'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GExpenseMixSplitFieldsData_expense', 'title'),
            createdAt: BuiltValueNullFieldError.checkNotNull(
                createdAt, r'GExpenseMixSplitFieldsData_expense', 'createdAt'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GExpenseMixSplitFieldsData_expense', 'amount'),
            creatorId: BuiltValueNullFieldError.checkNotNull(
                creatorId, r'GExpenseMixSplitFieldsData_expense', 'creatorId'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_split
    extends GExpenseMixSplitFieldsData_split {
  @override
  final String G__typename;
  @override
  final GExpenseMixSplitFieldsData_split_fromUser fromUser;
  @override
  final GExpenseMixSplitFieldsData_split_toUser toUser;
  @override
  final String id;
  @override
  final int amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;

  factory _$GExpenseMixSplitFieldsData_split(
          [void Function(GExpenseMixSplitFieldsData_splitBuilder)? updates]) =>
      (new GExpenseMixSplitFieldsData_splitBuilder()..update(updates))._build();

  _$GExpenseMixSplitFieldsData_split._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData_split', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GExpenseMixSplitFieldsData_split', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GExpenseMixSplitFieldsData_split', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseMixSplitFieldsData_split', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseMixSplitFieldsData_split', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GExpenseMixSplitFieldsData_split', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseMixSplitFieldsData_split', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GExpenseMixSplitFieldsData_split', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GExpenseMixSplitFieldsData_split', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseMixSplitFieldsData_split', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GExpenseMixSplitFieldsData_split', 'groupId');
  }

  @override
  GExpenseMixSplitFieldsData_split rebuild(
          void Function(GExpenseMixSplitFieldsData_splitBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_splitBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_splitBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_split &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseMixSplitFieldsData_split')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_splitBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_split,
            GExpenseMixSplitFieldsData_splitBuilder> {
  _$GExpenseMixSplitFieldsData_split? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GExpenseMixSplitFieldsData_split_fromUserBuilder? _fromUser;
  GExpenseMixSplitFieldsData_split_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GExpenseMixSplitFieldsData_split_fromUserBuilder();
  set fromUser(GExpenseMixSplitFieldsData_split_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GExpenseMixSplitFieldsData_split_toUserBuilder? _toUser;
  GExpenseMixSplitFieldsData_split_toUserBuilder get toUser =>
      _$this._toUser ??= new GExpenseMixSplitFieldsData_split_toUserBuilder();
  set toUser(GExpenseMixSplitFieldsData_split_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GExpenseMixSplitFieldsData_splitBuilder() {
    GExpenseMixSplitFieldsData_split._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_splitBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount;
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_split other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_split;
  }

  @override
  void update(void Function(GExpenseMixSplitFieldsData_splitBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_split build() => _build();

  _$GExpenseMixSplitFieldsData_split _build() {
    _$GExpenseMixSplitFieldsData_split _$result;
    try {
      _$result = _$v ??
          new _$GExpenseMixSplitFieldsData_split._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseMixSplitFieldsData_split', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GExpenseMixSplitFieldsData_split', 'id'),
              amount: BuiltValueNullFieldError.checkNotNull(
                  amount, r'GExpenseMixSplitFieldsData_split', 'amount'),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GExpenseMixSplitFieldsData_split',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GExpenseMixSplitFieldsData_split', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GExpenseMixSplitFieldsData_split', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GExpenseMixSplitFieldsData_split', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GExpenseMixSplitFieldsData_split', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GExpenseMixSplitFieldsData_split', 'groupId'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseMixSplitFieldsData_split', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_split_fromUser
    extends GExpenseMixSplitFieldsData_split_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseMixSplitFieldsData_split_fromUser(
          [void Function(GExpenseMixSplitFieldsData_split_fromUserBuilder)?
              updates]) =>
      (new GExpenseMixSplitFieldsData_split_fromUserBuilder()..update(updates))
          ._build();

  _$GExpenseMixSplitFieldsData_split_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GExpenseMixSplitFieldsData_split_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseMixSplitFieldsData_split_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseMixSplitFieldsData_split_fromUser', 'isSignedUp');
  }

  @override
  GExpenseMixSplitFieldsData_split_fromUser rebuild(
          void Function(GExpenseMixSplitFieldsData_split_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_split_fromUserBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_split_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_split_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExpenseMixSplitFieldsData_split_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_split_fromUserBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_split_fromUser,
            GExpenseMixSplitFieldsData_split_fromUserBuilder> {
  _$GExpenseMixSplitFieldsData_split_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseMixSplitFieldsData_split_fromUserBuilder() {
    GExpenseMixSplitFieldsData_split_fromUser._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_split_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_split_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_split_fromUser;
  }

  @override
  void update(
      void Function(GExpenseMixSplitFieldsData_split_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_split_fromUser build() => _build();

  _$GExpenseMixSplitFieldsData_split_fromUser _build() {
    final _$result = _$v ??
        new _$GExpenseMixSplitFieldsData_split_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseMixSplitFieldsData_split_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseMixSplitFieldsData_split_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GExpenseMixSplitFieldsData_split_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_split_toUser
    extends GExpenseMixSplitFieldsData_split_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseMixSplitFieldsData_split_toUser(
          [void Function(GExpenseMixSplitFieldsData_split_toUserBuilder)?
              updates]) =>
      (new GExpenseMixSplitFieldsData_split_toUserBuilder()..update(updates))
          ._build();

  _$GExpenseMixSplitFieldsData_split_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData_split_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseMixSplitFieldsData_split_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseMixSplitFieldsData_split_toUser', 'isSignedUp');
  }

  @override
  GExpenseMixSplitFieldsData_split_toUser rebuild(
          void Function(GExpenseMixSplitFieldsData_split_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_split_toUserBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_split_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_split_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExpenseMixSplitFieldsData_split_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_split_toUserBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_split_toUser,
            GExpenseMixSplitFieldsData_split_toUserBuilder> {
  _$GExpenseMixSplitFieldsData_split_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseMixSplitFieldsData_split_toUserBuilder() {
    GExpenseMixSplitFieldsData_split_toUser._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_split_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_split_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_split_toUser;
  }

  @override
  void update(
      void Function(GExpenseMixSplitFieldsData_split_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_split_toUser build() => _build();

  _$GExpenseMixSplitFieldsData_split_toUser _build() {
    final _$result = _$v ??
        new _$GExpenseMixSplitFieldsData_split_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseMixSplitFieldsData_split_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseMixSplitFieldsData_split_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GExpenseMixSplitFieldsData_split_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
