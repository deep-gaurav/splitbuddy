// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'queries.data.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

Serializer<GuserData> _$guserDataSerializer = new _$GuserDataSerializer();
Serializer<GuserData_user__base> _$guserDataUserBaseSerializer =
    new _$GuserData_user__baseSerializer();
Serializer<GuserData_user__asRegistered> _$guserDataUserAsRegisteredSerializer =
    new _$GuserData_user__asRegisteredSerializer();
Serializer<GuserData_user__asRegistered_user>
    _$guserDataUserAsRegisteredUserSerializer =
    new _$GuserData_user__asRegistered_userSerializer();
Serializer<GuserData_user__asUnregistered>
    _$guserDataUserAsUnregisteredSerializer =
    new _$GuserData_user__asUnregisteredSerializer();
Serializer<GuserConfigData> _$guserConfigDataSerializer =
    new _$GuserConfigDataSerializer();
Serializer<GuserConfigData_config> _$guserConfigDataConfigSerializer =
    new _$GuserConfigData_configSerializer();
Serializer<GgroupsData> _$ggroupsDataSerializer = new _$GgroupsDataSerializer();
Serializer<GgroupsData_groups> _$ggroupsDataGroupsSerializer =
    new _$GgroupsData_groupsSerializer();
Serializer<GgroupsData_groups_creator> _$ggroupsDataGroupsCreatorSerializer =
    new _$GgroupsData_groups_creatorSerializer();
Serializer<GgroupsData_groups_members> _$ggroupsDataGroupsMembersSerializer =
    new _$GgroupsData_groups_membersSerializer();
Serializer<GgroupsData_groups_members_owedInGroup>
    _$ggroupsDataGroupsMembersOwedInGroupSerializer =
    new _$GgroupsData_groups_members_owedInGroupSerializer();
Serializer<GgroupsData_groups_members_member>
    _$ggroupsDataGroupsMembersMemberSerializer =
    new _$GgroupsData_groups_members_memberSerializer();
Serializer<Ginteracted_usersData> _$ginteractedUsersDataSerializer =
    new _$Ginteracted_usersDataSerializer();
Serializer<Ginteracted_usersData_interactedUsers>
    _$ginteractedUsersDataInteractedUsersSerializer =
    new _$Ginteracted_usersData_interactedUsersSerializer();
Serializer<Ginteracted_usersData_interactedUsers_owes>
    _$ginteractedUsersDataInteractedUsersOwesSerializer =
    new _$Ginteracted_usersData_interactedUsers_owesSerializer();
Serializer<Ginteracted_usersData_interactedUsers_owes_amount>
    _$ginteractedUsersDataInteractedUsersOwesAmountSerializer =
    new _$Ginteracted_usersData_interactedUsers_owes_amountSerializer();
Serializer<GrefreshData> _$grefreshDataSerializer =
    new _$GrefreshDataSerializer();
Serializer<GrefreshData_user__base> _$grefreshDataUserBaseSerializer =
    new _$GrefreshData_user__baseSerializer();
Serializer<GrefreshData_user__asRegistered>
    _$grefreshDataUserAsRegisteredSerializer =
    new _$GrefreshData_user__asRegisteredSerializer();
Serializer<GrefreshData_user__asRegistered_user>
    _$grefreshDataUserAsRegisteredUserSerializer =
    new _$GrefreshData_user__asRegistered_userSerializer();
Serializer<GrefreshData_user__asUnregistered>
    _$grefreshDataUserAsUnregisteredSerializer =
    new _$GrefreshData_user__asUnregisteredSerializer();
Serializer<GrefreshData_config> _$grefreshDataConfigSerializer =
    new _$GrefreshData_configSerializer();
Serializer<GrefreshData_groups> _$grefreshDataGroupsSerializer =
    new _$GrefreshData_groupsSerializer();
Serializer<GrefreshData_groups_creator> _$grefreshDataGroupsCreatorSerializer =
    new _$GrefreshData_groups_creatorSerializer();
Serializer<GrefreshData_groups_members> _$grefreshDataGroupsMembersSerializer =
    new _$GrefreshData_groups_membersSerializer();
Serializer<GrefreshData_groups_members_owedInGroup>
    _$grefreshDataGroupsMembersOwedInGroupSerializer =
    new _$GrefreshData_groups_members_owedInGroupSerializer();
Serializer<GrefreshData_groups_members_member>
    _$grefreshDataGroupsMembersMemberSerializer =
    new _$GrefreshData_groups_members_memberSerializer();
Serializer<GrefreshData_interactedUsers>
    _$grefreshDataInteractedUsersSerializer =
    new _$GrefreshData_interactedUsersSerializer();
Serializer<GrefreshData_interactedUsers_owes>
    _$grefreshDataInteractedUsersOwesSerializer =
    new _$GrefreshData_interactedUsers_owesSerializer();
Serializer<GrefreshData_interactedUsers_owes_amount>
    _$grefreshDataInteractedUsersOwesAmountSerializer =
    new _$GrefreshData_interactedUsers_owes_amountSerializer();
Serializer<GrefreshData_currencies> _$grefreshDataCurrenciesSerializer =
    new _$GrefreshData_currenciesSerializer();
Serializer<GcurrenciesData> _$gcurrenciesDataSerializer =
    new _$GcurrenciesDataSerializer();
Serializer<GcurrenciesData_currencies> _$gcurrenciesDataCurrenciesSerializer =
    new _$GcurrenciesData_currenciesSerializer();
Serializer<GgroupData> _$ggroupDataSerializer = new _$GgroupDataSerializer();
Serializer<GgroupData_group> _$ggroupDataGroupSerializer =
    new _$GgroupData_groupSerializer();
Serializer<GgroupData_group_expenses> _$ggroupDataGroupExpensesSerializer =
    new _$GgroupData_group_expensesSerializer();
Serializer<GgroupData_group_expenses_creator>
    _$ggroupDataGroupExpensesCreatorSerializer =
    new _$GgroupData_group_expenses_creatorSerializer();
Serializer<GgroupData_group_expenses_splits>
    _$ggroupDataGroupExpensesSplitsSerializer =
    new _$GgroupData_group_expenses_splitsSerializer();
Serializer<GgroupData_group_expenses_splits_fromUser>
    _$ggroupDataGroupExpensesSplitsFromUserSerializer =
    new _$GgroupData_group_expenses_splits_fromUserSerializer();
Serializer<GgroupData_group_expenses_splits_toUser>
    _$ggroupDataGroupExpensesSplitsToUserSerializer =
    new _$GgroupData_group_expenses_splits_toUserSerializer();
Serializer<GgroupData_group_expenses_splits_amount>
    _$ggroupDataGroupExpensesSplitsAmountSerializer =
    new _$GgroupData_group_expenses_splits_amountSerializer();
Serializer<GgroupData_group_expenses_amount>
    _$ggroupDataGroupExpensesAmountSerializer =
    new _$GgroupData_group_expenses_amountSerializer();
Serializer<GgroupData_group_creator> _$ggroupDataGroupCreatorSerializer =
    new _$GgroupData_group_creatorSerializer();
Serializer<GgroupData_group_members> _$ggroupDataGroupMembersSerializer =
    new _$GgroupData_group_membersSerializer();
Serializer<GgroupData_group_members_owedInGroup>
    _$ggroupDataGroupMembersOwedInGroupSerializer =
    new _$GgroupData_group_members_owedInGroupSerializer();
Serializer<GgroupData_group_members_member>
    _$ggroupDataGroupMembersMemberSerializer =
    new _$GgroupData_group_members_memberSerializer();
Serializer<GsignupData> _$gsignupDataSerializer = new _$GsignupDataSerializer();
Serializer<GsignupData_signup> _$gsignupDataSignupSerializer =
    new _$GsignupData_signupSerializer();
Serializer<GsignupData_signup_user> _$gsignupDataSignupUserSerializer =
    new _$GsignupData_signup_userSerializer();
Serializer<GsignupData_signup_tokens> _$gsignupDataSignupTokensSerializer =
    new _$GsignupData_signup_tokensSerializer();
Serializer<Gcreate_groupData> _$gcreateGroupDataSerializer =
    new _$Gcreate_groupDataSerializer();
Serializer<Gcreate_groupData_createGroup>
    _$gcreateGroupDataCreateGroupSerializer =
    new _$Gcreate_groupData_createGroupSerializer();
Serializer<Gcreate_groupData_createGroup_creator>
    _$gcreateGroupDataCreateGroupCreatorSerializer =
    new _$Gcreate_groupData_createGroup_creatorSerializer();
Serializer<Gcreate_groupData_createGroup_members>
    _$gcreateGroupDataCreateGroupMembersSerializer =
    new _$Gcreate_groupData_createGroup_membersSerializer();
Serializer<Gcreate_groupData_createGroup_members_owedInGroup>
    _$gcreateGroupDataCreateGroupMembersOwedInGroupSerializer =
    new _$Gcreate_groupData_createGroup_members_owedInGroupSerializer();
Serializer<Gcreate_groupData_createGroup_members_member>
    _$gcreateGroupDataCreateGroupMembersMemberSerializer =
    new _$Gcreate_groupData_createGroup_members_memberSerializer();
Serializer<Gadd_to_groupData> _$gaddToGroupDataSerializer =
    new _$Gadd_to_groupDataSerializer();
Serializer<Gadd_expenseData> _$gaddExpenseDataSerializer =
    new _$Gadd_expenseDataSerializer();
Serializer<Gadd_expenseData_addExpense> _$gaddExpenseDataAddExpenseSerializer =
    new _$Gadd_expenseData_addExpenseSerializer();
Serializer<Gadd_expenseData_addExpense_splits>
    _$gaddExpenseDataAddExpenseSplitsSerializer =
    new _$Gadd_expenseData_addExpense_splitsSerializer();
Serializer<Gadd_expenseData_addExpense_splits_expense>
    _$gaddExpenseDataAddExpenseSplitsExpenseSerializer =
    new _$Gadd_expenseData_addExpense_splits_expenseSerializer();
Serializer<Gadd_expenseData_addExpense_splits_expense_amount>
    _$gaddExpenseDataAddExpenseSplitsExpenseAmountSerializer =
    new _$Gadd_expenseData_addExpense_splits_expense_amountSerializer();
Serializer<Gadd_expenseData_addExpense_splits_group>
    _$gaddExpenseDataAddExpenseSplitsGroupSerializer =
    new _$Gadd_expenseData_addExpense_splits_groupSerializer();
Serializer<Gadd_expenseData_addExpense_splits_creator>
    _$gaddExpenseDataAddExpenseSplitsCreatorSerializer =
    new _$Gadd_expenseData_addExpense_splits_creatorSerializer();
Serializer<Gadd_expenseData_addExpense_splits_fromUser>
    _$gaddExpenseDataAddExpenseSplitsFromUserSerializer =
    new _$Gadd_expenseData_addExpense_splits_fromUserSerializer();
Serializer<Gadd_expenseData_addExpense_splits_toUser>
    _$gaddExpenseDataAddExpenseSplitsToUserSerializer =
    new _$Gadd_expenseData_addExpense_splits_toUserSerializer();
Serializer<Gadd_expenseData_addExpense_splits_amount>
    _$gaddExpenseDataAddExpenseSplitsAmountSerializer =
    new _$Gadd_expenseData_addExpense_splits_amountSerializer();
Serializer<Gadd_expenseData_addExpense_amount>
    _$gaddExpenseDataAddExpenseAmountSerializer =
    new _$Gadd_expenseData_addExpense_amountSerializer();
Serializer<Gsend_email_otpData> _$gsendEmailOtpDataSerializer =
    new _$Gsend_email_otpDataSerializer();
Serializer<Gverify_email_otpData> _$gverifyEmailOtpDataSerializer =
    new _$Gverify_email_otpDataSerializer();
Serializer<Gverify_email_otpData_verifyOtp__base>
    _$gverifyEmailOtpDataVerifyOtpBaseSerializer =
    new _$Gverify_email_otpData_verifyOtp__baseSerializer();
Serializer<Gverify_email_otpData_verifyOtp__asUserSignedUp>
    _$gverifyEmailOtpDataVerifyOtpAsUserSignedUpSerializer =
    new _$Gverify_email_otpData_verifyOtp__asUserSignedUpSerializer();
Serializer<Gverify_email_otpData_verifyOtp__asUserNotSignedUp>
    _$gverifyEmailOtpDataVerifyOtpAsUserNotSignedUpSerializer =
    new _$Gverify_email_otpData_verifyOtp__asUserNotSignedUpSerializer();
Serializer<Grefresh_tokenData> _$grefreshTokenDataSerializer =
    new _$Grefresh_tokenDataSerializer();
Serializer<Grefresh_tokenData_refreshToken>
    _$grefreshTokenDataRefreshTokenSerializer =
    new _$Grefresh_tokenData_refreshTokenSerializer();
Serializer<GsearchUserByEmailData> _$gsearchUserByEmailDataSerializer =
    new _$GsearchUserByEmailDataSerializer();
Serializer<GsearchUserByEmailData_findUserByEmail>
    _$gsearchUserByEmailDataFindUserByEmailSerializer =
    new _$GsearchUserByEmailData_findUserByEmailSerializer();
Serializer<GcreateNonGroupExpenseData> _$gcreateNonGroupExpenseDataSerializer =
    new _$GcreateNonGroupExpenseDataSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpenseSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_group>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_groupSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_group_creator>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupCreatorSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_group_members>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupMembersSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_membersSerializer();
Serializer<
        GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupMembersOwedInGroupSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseGroupMembersMemberSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expenseSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsExpenseSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseSerializer();
Serializer<
        GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsExpenseAmountSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsGroupSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsCreatorSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorSerializer();
Serializer<
        GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsFromUserSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsToUserSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseSplitsAmountSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountSerializer();
Serializer<GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount>
    _$gcreateNonGroupExpenseDataAddNonGroupExpenseExpenseAmountSerializer =
    new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountSerializer();
Serializer<GsettleInGroupData> _$gsettleInGroupDataSerializer =
    new _$GsettleInGroupDataSerializer();
Serializer<GsettleInGroupData_settleInGroup>
    _$gsettleInGroupDataSettleInGroupSerializer =
    new _$GsettleInGroupData_settleInGroupSerializer();
Serializer<GsettleInGroupData_settleInGroup_expense>
    _$gsettleInGroupDataSettleInGroupExpenseSerializer =
    new _$GsettleInGroupData_settleInGroup_expenseSerializer();
Serializer<GsettleInGroupData_settleInGroup_expense_amount>
    _$gsettleInGroupDataSettleInGroupExpenseAmountSerializer =
    new _$GsettleInGroupData_settleInGroup_expense_amountSerializer();
Serializer<GsettleInGroupData_settleInGroup_group>
    _$gsettleInGroupDataSettleInGroupGroupSerializer =
    new _$GsettleInGroupData_settleInGroup_groupSerializer();
Serializer<GsettleInGroupData_settleInGroup_creator>
    _$gsettleInGroupDataSettleInGroupCreatorSerializer =
    new _$GsettleInGroupData_settleInGroup_creatorSerializer();
Serializer<GsettleInGroupData_settleInGroup_fromUser>
    _$gsettleInGroupDataSettleInGroupFromUserSerializer =
    new _$GsettleInGroupData_settleInGroup_fromUserSerializer();
Serializer<GsettleInGroupData_settleInGroup_toUser>
    _$gsettleInGroupDataSettleInGroupToUserSerializer =
    new _$GsettleInGroupData_settleInGroup_toUserSerializer();
Serializer<GsettleInGroupData_settleInGroup_amount>
    _$gsettleInGroupDataSettleInGroupAmountSerializer =
    new _$GsettleInGroupData_settleInGroup_amountSerializer();
Serializer<GsimplifyUserData> _$gsimplifyUserDataSerializer =
    new _$GsimplifyUserDataSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup>
    _$gsimplifyUserDataSimplifyCrossGroupSerializer =
    new _$GsimplifyUserData_simplifyCrossGroupSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_expense>
    _$gsimplifyUserDataSimplifyCrossGroupExpenseSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_expenseSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_expense_amount>
    _$gsimplifyUserDataSimplifyCrossGroupExpenseAmountSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_expense_amountSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_group>
    _$gsimplifyUserDataSimplifyCrossGroupGroupSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_groupSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_creator>
    _$gsimplifyUserDataSimplifyCrossGroupCreatorSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_creatorSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_fromUser>
    _$gsimplifyUserDataSimplifyCrossGroupFromUserSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_fromUserSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_toUser>
    _$gsimplifyUserDataSimplifyCrossGroupToUserSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_toUserSerializer();
Serializer<GsimplifyUserData_simplifyCrossGroup_amount>
    _$gsimplifyUserDataSimplifyCrossGroupAmountSerializer =
    new _$GsimplifyUserData_simplifyCrossGroup_amountSerializer();
Serializer<GautoSettleWithUserData> _$gautoSettleWithUserDataSerializer =
    new _$GautoSettleWithUserDataSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser>
    _$gautoSettleWithUserDataAutoSettleWithUserSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUserSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_expense>
    _$gautoSettleWithUserDataAutoSettleWithUserExpenseSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_expenseSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_expense_amount>
    _$gautoSettleWithUserDataAutoSettleWithUserExpenseAmountSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_expense_amountSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_group>
    _$gautoSettleWithUserDataAutoSettleWithUserGroupSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_groupSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_creator>
    _$gautoSettleWithUserDataAutoSettleWithUserCreatorSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_creatorSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_fromUser>
    _$gautoSettleWithUserDataAutoSettleWithUserFromUserSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_fromUserSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_toUser>
    _$gautoSettleWithUserDataAutoSettleWithUserToUserSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_toUserSerializer();
Serializer<GautoSettleWithUserData_autoSettleWithUser_amount>
    _$gautoSettleWithUserDataAutoSettleWithUserAmountSerializer =
    new _$GautoSettleWithUserData_autoSettleWithUser_amountSerializer();
Serializer<GtransactionWithUserData> _$gtransactionWithUserDataSerializer =
    new _$GtransactionWithUserDataSerializer();
Serializer<GtransactionWithUserData_getTransactionsMixExpenseWithUser>
    _$gtransactionWithUserDataGetTransactionsMixExpenseWithUserSerializer =
    new _$GtransactionWithUserData_getTransactionsMixExpenseWithUserSerializer();
Serializer<GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense>
    _$gtransactionWithUserDataGetTransactionsMixExpenseWithUserExpenseSerializer =
    new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseSerializer();
Serializer<
        GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount>
    _$gtransactionWithUserDataGetTransactionsMixExpenseWithUserExpenseAmountSerializer =
    new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountSerializer();
Serializer<GtransactionWithUserData_getTransactionsMixExpenseWithUser_split>
    _$gtransactionWithUserDataGetTransactionsMixExpenseWithUserSplitSerializer =
    new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitSerializer();
Serializer<
        GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser>
    _$gtransactionWithUserDataGetTransactionsMixExpenseWithUserSplitFromUserSerializer =
    new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserSerializer();
Serializer<
        GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser>
    _$gtransactionWithUserDataGetTransactionsMixExpenseWithUserSplitToUserSerializer =
    new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserSerializer();
Serializer<
        GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount>
    _$gtransactionWithUserDataGetTransactionsMixExpenseWithUserSplitAmountSerializer =
    new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountSerializer();
Serializer<GtransactionMixExpenseData> _$gtransactionMixExpenseDataSerializer =
    new _$GtransactionMixExpenseDataSerializer();
Serializer<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupSerializer();
Serializer<
        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupExpenseSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseSerializer();
Serializer<
        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupExpenseAmountSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountSerializer();
Serializer<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSplitSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitSerializer();
Serializer<
        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSplitFromUserSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserSerializer();
Serializer<
        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSplitToUserSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserSerializer();
Serializer<
        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount>
    _$gtransactionMixExpenseDataGetTransactionsMixExpenseWithGroupSplitAmountSerializer =
    new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountSerializer();
Serializer<GsetDefaultCurrencyData> _$gsetDefaultCurrencyDataSerializer =
    new _$GsetDefaultCurrencyDataSerializer();
Serializer<GsetDefaultCurrencyData_setDefaultCurrency>
    _$gsetDefaultCurrencyDataSetDefaultCurrencySerializer =
    new _$GsetDefaultCurrencyData_setDefaultCurrencySerializer();
Serializer<GcurrencyConvertData> _$gcurrencyConvertDataSerializer =
    new _$GcurrencyConvertDataSerializer();
Serializer<GcurrencyConvertData_convertCurrency>
    _$gcurrencyConvertDataConvertCurrencySerializer =
    new _$GcurrencyConvertData_convertCurrencySerializer();
Serializer<GcurrencyConvertData_convertCurrency_expense>
    _$gcurrencyConvertDataConvertCurrencyExpenseSerializer =
    new _$GcurrencyConvertData_convertCurrency_expenseSerializer();
Serializer<GcurrencyConvertData_convertCurrency_expense_amount>
    _$gcurrencyConvertDataConvertCurrencyExpenseAmountSerializer =
    new _$GcurrencyConvertData_convertCurrency_expense_amountSerializer();
Serializer<GcurrencyConvertData_convertCurrency_group>
    _$gcurrencyConvertDataConvertCurrencyGroupSerializer =
    new _$GcurrencyConvertData_convertCurrency_groupSerializer();
Serializer<GcurrencyConvertData_convertCurrency_creator>
    _$gcurrencyConvertDataConvertCurrencyCreatorSerializer =
    new _$GcurrencyConvertData_convertCurrency_creatorSerializer();
Serializer<GcurrencyConvertData_convertCurrency_fromUser>
    _$gcurrencyConvertDataConvertCurrencyFromUserSerializer =
    new _$GcurrencyConvertData_convertCurrency_fromUserSerializer();
Serializer<GcurrencyConvertData_convertCurrency_toUser>
    _$gcurrencyConvertDataConvertCurrencyToUserSerializer =
    new _$GcurrencyConvertData_convertCurrency_toUserSerializer();
Serializer<GcurrencyConvertData_convertCurrency_amount>
    _$gcurrencyConvertDataConvertCurrencyAmountSerializer =
    new _$GcurrencyConvertData_convertCurrency_amountSerializer();
Serializer<GchangeNameData> _$gchangeNameDataSerializer =
    new _$GchangeNameDataSerializer();
Serializer<GchangeNameData_changeName> _$gchangeNameDataChangeNameSerializer =
    new _$GchangeNameData_changeNameSerializer();
Serializer<GgetTransactionsData> _$ggetTransactionsDataSerializer =
    new _$GgetTransactionsDataSerializer();
Serializer<GgetTransactionsData_getTransactions>
    _$ggetTransactionsDataGetTransactionsSerializer =
    new _$GgetTransactionsData_getTransactionsSerializer();
Serializer<GgetTransactionsData_getTransactions_expense>
    _$ggetTransactionsDataGetTransactionsExpenseSerializer =
    new _$GgetTransactionsData_getTransactions_expenseSerializer();
Serializer<GgetTransactionsData_getTransactions_expense_amount>
    _$ggetTransactionsDataGetTransactionsExpenseAmountSerializer =
    new _$GgetTransactionsData_getTransactions_expense_amountSerializer();
Serializer<GgetTransactionsData_getTransactions_split>
    _$ggetTransactionsDataGetTransactionsSplitSerializer =
    new _$GgetTransactionsData_getTransactions_splitSerializer();
Serializer<GgetTransactionsData_getTransactions_split_fromUser>
    _$ggetTransactionsDataGetTransactionsSplitFromUserSerializer =
    new _$GgetTransactionsData_getTransactions_split_fromUserSerializer();
Serializer<GgetTransactionsData_getTransactions_split_toUser>
    _$ggetTransactionsDataGetTransactionsSplitToUserSerializer =
    new _$GgetTransactionsData_getTransactions_split_toUserSerializer();
Serializer<GgetTransactionsData_getTransactions_split_amount>
    _$ggetTransactionsDataGetTransactionsSplitAmountSerializer =
    new _$GgetTransactionsData_getTransactions_split_amountSerializer();
Serializer<GsetNotificationTokenData> _$gsetNotificationTokenDataSerializer =
    new _$GsetNotificationTokenDataSerializer();
Serializer<GgetImageUploadUrlData> _$ggetImageUploadUrlDataSerializer =
    new _$GgetImageUploadUrlDataSerializer();
Serializer<GgetImageUploadUrlData_uploadImage>
    _$ggetImageUploadUrlDataUploadImageSerializer =
    new _$GgetImageUploadUrlData_uploadImageSerializer();
Serializer<GgetImageViewUrlData> _$ggetImageViewUrlDataSerializer =
    new _$GgetImageViewUrlDataSerializer();
Serializer<GgetExpenseData> _$ggetExpenseDataSerializer =
    new _$GgetExpenseDataSerializer();
Serializer<GgetExpenseData_expenseById> _$ggetExpenseDataExpenseByIdSerializer =
    new _$GgetExpenseData_expenseByIdSerializer();
Serializer<GgetExpenseData_expenseById_creator>
    _$ggetExpenseDataExpenseByIdCreatorSerializer =
    new _$GgetExpenseData_expenseById_creatorSerializer();
Serializer<GgetExpenseData_expenseById_splits>
    _$ggetExpenseDataExpenseByIdSplitsSerializer =
    new _$GgetExpenseData_expenseById_splitsSerializer();
Serializer<GgetExpenseData_expenseById_splits_fromUser>
    _$ggetExpenseDataExpenseByIdSplitsFromUserSerializer =
    new _$GgetExpenseData_expenseById_splits_fromUserSerializer();
Serializer<GgetExpenseData_expenseById_splits_toUser>
    _$ggetExpenseDataExpenseByIdSplitsToUserSerializer =
    new _$GgetExpenseData_expenseById_splits_toUserSerializer();
Serializer<GgetExpenseData_expenseById_splits_amount>
    _$ggetExpenseDataExpenseByIdSplitsAmountSerializer =
    new _$GgetExpenseData_expenseById_splits_amountSerializer();
Serializer<GgetExpenseData_expenseById_amount>
    _$ggetExpenseDataExpenseByIdAmountSerializer =
    new _$GgetExpenseData_expenseById_amountSerializer();
Serializer<GsplitFromidData> _$gsplitFromidDataSerializer =
    new _$GsplitFromidDataSerializer();
Serializer<GsplitFromidData_splitById> _$gsplitFromidDataSplitByIdSerializer =
    new _$GsplitFromidData_splitByIdSerializer();
Serializer<GsplitFromidData_splitById_siblings>
    _$gsplitFromidDataSplitByIdSiblingsSerializer =
    new _$GsplitFromidData_splitById_siblingsSerializer();
Serializer<GsplitFromidData_splitById_siblings_expense>
    _$gsplitFromidDataSplitByIdSiblingsExpenseSerializer =
    new _$GsplitFromidData_splitById_siblings_expenseSerializer();
Serializer<GsplitFromidData_splitById_siblings_expense_amount>
    _$gsplitFromidDataSplitByIdSiblingsExpenseAmountSerializer =
    new _$GsplitFromidData_splitById_siblings_expense_amountSerializer();
Serializer<GsplitFromidData_splitById_siblings_group>
    _$gsplitFromidDataSplitByIdSiblingsGroupSerializer =
    new _$GsplitFromidData_splitById_siblings_groupSerializer();
Serializer<GsplitFromidData_splitById_siblings_creator>
    _$gsplitFromidDataSplitByIdSiblingsCreatorSerializer =
    new _$GsplitFromidData_splitById_siblings_creatorSerializer();
Serializer<GsplitFromidData_splitById_siblings_fromUser>
    _$gsplitFromidDataSplitByIdSiblingsFromUserSerializer =
    new _$GsplitFromidData_splitById_siblings_fromUserSerializer();
Serializer<GsplitFromidData_splitById_siblings_toUser>
    _$gsplitFromidDataSplitByIdSiblingsToUserSerializer =
    new _$GsplitFromidData_splitById_siblings_toUserSerializer();
Serializer<GsplitFromidData_splitById_siblings_amount>
    _$gsplitFromidDataSplitByIdSiblingsAmountSerializer =
    new _$GsplitFromidData_splitById_siblings_amountSerializer();
Serializer<GsplitFromidData_splitById_expense>
    _$gsplitFromidDataSplitByIdExpenseSerializer =
    new _$GsplitFromidData_splitById_expenseSerializer();
Serializer<GsplitFromidData_splitById_expense_amount>
    _$gsplitFromidDataSplitByIdExpenseAmountSerializer =
    new _$GsplitFromidData_splitById_expense_amountSerializer();
Serializer<GsplitFromidData_splitById_group>
    _$gsplitFromidDataSplitByIdGroupSerializer =
    new _$GsplitFromidData_splitById_groupSerializer();
Serializer<GsplitFromidData_splitById_creator>
    _$gsplitFromidDataSplitByIdCreatorSerializer =
    new _$GsplitFromidData_splitById_creatorSerializer();
Serializer<GsplitFromidData_splitById_fromUser>
    _$gsplitFromidDataSplitByIdFromUserSerializer =
    new _$GsplitFromidData_splitById_fromUserSerializer();
Serializer<GsplitFromidData_splitById_toUser>
    _$gsplitFromidDataSplitByIdToUserSerializer =
    new _$GsplitFromidData_splitById_toUserSerializer();
Serializer<GsplitFromidData_splitById_amount>
    _$gsplitFromidDataSplitByIdAmountSerializer =
    new _$GsplitFromidData_splitById_amountSerializer();
Serializer<GsplitFromGroupData> _$gsplitFromGroupDataSerializer =
    new _$GsplitFromGroupDataSerializer();
Serializer<GsplitFromGroupData_splitsByPart>
    _$gsplitFromGroupDataSplitsByPartSerializer =
    new _$GsplitFromGroupData_splitsByPartSerializer();
Serializer<GsplitFromGroupData_splitsByPart_fromUser>
    _$gsplitFromGroupDataSplitsByPartFromUserSerializer =
    new _$GsplitFromGroupData_splitsByPart_fromUserSerializer();
Serializer<GsplitFromGroupData_splitsByPart_toUser>
    _$gsplitFromGroupDataSplitsByPartToUserSerializer =
    new _$GsplitFromGroupData_splitsByPart_toUserSerializer();
Serializer<GsplitFromGroupData_splitsByPart_amount>
    _$gsplitFromGroupDataSplitsByPartAmountSerializer =
    new _$GsplitFromGroupData_splitsByPart_amountSerializer();
Serializer<GexpenseSummaryCategorisedData>
    _$gexpenseSummaryCategorisedDataSerializer =
    new _$GexpenseSummaryCategorisedDataSerializer();
Serializer<GexpenseSummaryCategorisedData_expenseSummaryByCategory>
    _$gexpenseSummaryCategorisedDataExpenseSummaryByCategorySerializer =
    new _$GexpenseSummaryCategorisedData_expenseSummaryByCategorySerializer();
Serializer<GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount>
    _$gexpenseSummaryCategorisedDataExpenseSummaryByCategoryAmountSerializer =
    new _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountSerializer();
Serializer<GUploadFieldsData> _$gUploadFieldsDataSerializer =
    new _$GUploadFieldsDataSerializer();
Serializer<GUserFieldsData> _$gUserFieldsDataSerializer =
    new _$GUserFieldsDataSerializer();
Serializer<GAmountFieldsData> _$gAmountFieldsDataSerializer =
    new _$GAmountFieldsDataSerializer();
Serializer<GCurrencyFieldsData> _$gCurrencyFieldsDataSerializer =
    new _$GCurrencyFieldsDataSerializer();
Serializer<GUserPaysFieldsData> _$gUserPaysFieldsDataSerializer =
    new _$GUserPaysFieldsDataSerializer();
Serializer<GUserPaysFieldsData_owes> _$gUserPaysFieldsDataOwesSerializer =
    new _$GUserPaysFieldsData_owesSerializer();
Serializer<GUserPaysFieldsData_owes_amount>
    _$gUserPaysFieldsDataOwesAmountSerializer =
    new _$GUserPaysFieldsData_owes_amountSerializer();
Serializer<GGroupBasicData> _$gGroupBasicDataSerializer =
    new _$GGroupBasicDataSerializer();
Serializer<GGroupFieldsData> _$gGroupFieldsDataSerializer =
    new _$GGroupFieldsDataSerializer();
Serializer<GGroupFieldsData_creator> _$gGroupFieldsDataCreatorSerializer =
    new _$GGroupFieldsData_creatorSerializer();
Serializer<GGroupFieldsData_members> _$gGroupFieldsDataMembersSerializer =
    new _$GGroupFieldsData_membersSerializer();
Serializer<GGroupFieldsData_members_owedInGroup>
    _$gGroupFieldsDataMembersOwedInGroupSerializer =
    new _$GGroupFieldsData_members_owedInGroupSerializer();
Serializer<GGroupFieldsData_members_member>
    _$gGroupFieldsDataMembersMemberSerializer =
    new _$GGroupFieldsData_members_memberSerializer();
Serializer<GExpenseBasicData> _$gExpenseBasicDataSerializer =
    new _$GExpenseBasicDataSerializer();
Serializer<GExpenseBasicData_amount> _$gExpenseBasicDataAmountSerializer =
    new _$GExpenseBasicData_amountSerializer();
Serializer<GExpenseFieldsData> _$gExpenseFieldsDataSerializer =
    new _$GExpenseFieldsDataSerializer();
Serializer<GExpenseFieldsData_amount> _$gExpenseFieldsDataAmountSerializer =
    new _$GExpenseFieldsData_amountSerializer();
Serializer<GExpenseFieldsData_creator> _$gExpenseFieldsDataCreatorSerializer =
    new _$GExpenseFieldsData_creatorSerializer();
Serializer<GExpenseFieldsData_splits> _$gExpenseFieldsDataSplitsSerializer =
    new _$GExpenseFieldsData_splitsSerializer();
Serializer<GExpenseFieldsData_splits_fromUser>
    _$gExpenseFieldsDataSplitsFromUserSerializer =
    new _$GExpenseFieldsData_splits_fromUserSerializer();
Serializer<GExpenseFieldsData_splits_toUser>
    _$gExpenseFieldsDataSplitsToUserSerializer =
    new _$GExpenseFieldsData_splits_toUserSerializer();
Serializer<GExpenseFieldsData_splits_amount>
    _$gExpenseFieldsDataSplitsAmountSerializer =
    new _$GExpenseFieldsData_splits_amountSerializer();
Serializer<GNewExpenseFieldsData> _$gNewExpenseFieldsDataSerializer =
    new _$GNewExpenseFieldsDataSerializer();
Serializer<GNewExpenseFieldsData_amount>
    _$gNewExpenseFieldsDataAmountSerializer =
    new _$GNewExpenseFieldsData_amountSerializer();
Serializer<GNewExpenseFieldsData_splits>
    _$gNewExpenseFieldsDataSplitsSerializer =
    new _$GNewExpenseFieldsData_splitsSerializer();
Serializer<GNewExpenseFieldsData_splits_expense>
    _$gNewExpenseFieldsDataSplitsExpenseSerializer =
    new _$GNewExpenseFieldsData_splits_expenseSerializer();
Serializer<GNewExpenseFieldsData_splits_expense_amount>
    _$gNewExpenseFieldsDataSplitsExpenseAmountSerializer =
    new _$GNewExpenseFieldsData_splits_expense_amountSerializer();
Serializer<GNewExpenseFieldsData_splits_group>
    _$gNewExpenseFieldsDataSplitsGroupSerializer =
    new _$GNewExpenseFieldsData_splits_groupSerializer();
Serializer<GNewExpenseFieldsData_splits_creator>
    _$gNewExpenseFieldsDataSplitsCreatorSerializer =
    new _$GNewExpenseFieldsData_splits_creatorSerializer();
Serializer<GNewExpenseFieldsData_splits_fromUser>
    _$gNewExpenseFieldsDataSplitsFromUserSerializer =
    new _$GNewExpenseFieldsData_splits_fromUserSerializer();
Serializer<GNewExpenseFieldsData_splits_toUser>
    _$gNewExpenseFieldsDataSplitsToUserSerializer =
    new _$GNewExpenseFieldsData_splits_toUserSerializer();
Serializer<GNewExpenseFieldsData_splits_amount>
    _$gNewExpenseFieldsDataSplitsAmountSerializer =
    new _$GNewExpenseFieldsData_splits_amountSerializer();
Serializer<GConfigFieldsData> _$gConfigFieldsDataSerializer =
    new _$GConfigFieldsDataSerializer();
Serializer<GSplitFieldsBasicsData> _$gSplitFieldsBasicsDataSerializer =
    new _$GSplitFieldsBasicsDataSerializer();
Serializer<GSplitFieldsBasicsData_amount>
    _$gSplitFieldsBasicsDataAmountSerializer =
    new _$GSplitFieldsBasicsData_amountSerializer();
Serializer<GSplitFieldsData> _$gSplitFieldsDataSerializer =
    new _$GSplitFieldsDataSerializer();
Serializer<GSplitFieldsData_amount> _$gSplitFieldsDataAmountSerializer =
    new _$GSplitFieldsData_amountSerializer();
Serializer<GSplitFieldsData_fromUser> _$gSplitFieldsDataFromUserSerializer =
    new _$GSplitFieldsData_fromUserSerializer();
Serializer<GSplitFieldsData_toUser> _$gSplitFieldsDataToUserSerializer =
    new _$GSplitFieldsData_toUserSerializer();
Serializer<GSplitTransactionFieldsData>
    _$gSplitTransactionFieldsDataSerializer =
    new _$GSplitTransactionFieldsDataSerializer();
Serializer<GSplitTransactionFieldsData_fromUser>
    _$gSplitTransactionFieldsDataFromUserSerializer =
    new _$GSplitTransactionFieldsData_fromUserSerializer();
Serializer<GSplitTransactionFieldsData_toUser>
    _$gSplitTransactionFieldsDataToUserSerializer =
    new _$GSplitTransactionFieldsData_toUserSerializer();
Serializer<GSplitTransactionFieldsData_amount>
    _$gSplitTransactionFieldsDataAmountSerializer =
    new _$GSplitTransactionFieldsData_amountSerializer();
Serializer<GSplitTransactionFieldsData_expense>
    _$gSplitTransactionFieldsDataExpenseSerializer =
    new _$GSplitTransactionFieldsData_expenseSerializer();
Serializer<GSplitTransactionFieldsData_expense_amount>
    _$gSplitTransactionFieldsDataExpenseAmountSerializer =
    new _$GSplitTransactionFieldsData_expense_amountSerializer();
Serializer<GSplitTransactionFieldsData_group>
    _$gSplitTransactionFieldsDataGroupSerializer =
    new _$GSplitTransactionFieldsData_groupSerializer();
Serializer<GSplitTransactionFieldsData_creator>
    _$gSplitTransactionFieldsDataCreatorSerializer =
    new _$GSplitTransactionFieldsData_creatorSerializer();
Serializer<GSplitWithSiblingsData> _$gSplitWithSiblingsDataSerializer =
    new _$GSplitWithSiblingsDataSerializer();
Serializer<GSplitWithSiblingsData_expense>
    _$gSplitWithSiblingsDataExpenseSerializer =
    new _$GSplitWithSiblingsData_expenseSerializer();
Serializer<GSplitWithSiblingsData_expense_amount>
    _$gSplitWithSiblingsDataExpenseAmountSerializer =
    new _$GSplitWithSiblingsData_expense_amountSerializer();
Serializer<GSplitWithSiblingsData_group>
    _$gSplitWithSiblingsDataGroupSerializer =
    new _$GSplitWithSiblingsData_groupSerializer();
Serializer<GSplitWithSiblingsData_creator>
    _$gSplitWithSiblingsDataCreatorSerializer =
    new _$GSplitWithSiblingsData_creatorSerializer();
Serializer<GSplitWithSiblingsData_fromUser>
    _$gSplitWithSiblingsDataFromUserSerializer =
    new _$GSplitWithSiblingsData_fromUserSerializer();
Serializer<GSplitWithSiblingsData_toUser>
    _$gSplitWithSiblingsDataToUserSerializer =
    new _$GSplitWithSiblingsData_toUserSerializer();
Serializer<GSplitWithSiblingsData_amount>
    _$gSplitWithSiblingsDataAmountSerializer =
    new _$GSplitWithSiblingsData_amountSerializer();
Serializer<GSplitWithSiblingsData_siblings>
    _$gSplitWithSiblingsDataSiblingsSerializer =
    new _$GSplitWithSiblingsData_siblingsSerializer();
Serializer<GSplitWithSiblingsData_siblings_expense>
    _$gSplitWithSiblingsDataSiblingsExpenseSerializer =
    new _$GSplitWithSiblingsData_siblings_expenseSerializer();
Serializer<GSplitWithSiblingsData_siblings_expense_amount>
    _$gSplitWithSiblingsDataSiblingsExpenseAmountSerializer =
    new _$GSplitWithSiblingsData_siblings_expense_amountSerializer();
Serializer<GSplitWithSiblingsData_siblings_group>
    _$gSplitWithSiblingsDataSiblingsGroupSerializer =
    new _$GSplitWithSiblingsData_siblings_groupSerializer();
Serializer<GSplitWithSiblingsData_siblings_creator>
    _$gSplitWithSiblingsDataSiblingsCreatorSerializer =
    new _$GSplitWithSiblingsData_siblings_creatorSerializer();
Serializer<GSplitWithSiblingsData_siblings_fromUser>
    _$gSplitWithSiblingsDataSiblingsFromUserSerializer =
    new _$GSplitWithSiblingsData_siblings_fromUserSerializer();
Serializer<GSplitWithSiblingsData_siblings_toUser>
    _$gSplitWithSiblingsDataSiblingsToUserSerializer =
    new _$GSplitWithSiblingsData_siblings_toUserSerializer();
Serializer<GSplitWithSiblingsData_siblings_amount>
    _$gSplitWithSiblingsDataSiblingsAmountSerializer =
    new _$GSplitWithSiblingsData_siblings_amountSerializer();
Serializer<GGroupWithExpensesData> _$gGroupWithExpensesDataSerializer =
    new _$GGroupWithExpensesDataSerializer();
Serializer<GGroupWithExpensesData_creator>
    _$gGroupWithExpensesDataCreatorSerializer =
    new _$GGroupWithExpensesData_creatorSerializer();
Serializer<GGroupWithExpensesData_members>
    _$gGroupWithExpensesDataMembersSerializer =
    new _$GGroupWithExpensesData_membersSerializer();
Serializer<GGroupWithExpensesData_members_owedInGroup>
    _$gGroupWithExpensesDataMembersOwedInGroupSerializer =
    new _$GGroupWithExpensesData_members_owedInGroupSerializer();
Serializer<GGroupWithExpensesData_members_member>
    _$gGroupWithExpensesDataMembersMemberSerializer =
    new _$GGroupWithExpensesData_members_memberSerializer();
Serializer<GGroupWithExpensesData_expenses>
    _$gGroupWithExpensesDataExpensesSerializer =
    new _$GGroupWithExpensesData_expensesSerializer();
Serializer<GGroupWithExpensesData_expenses_creator>
    _$gGroupWithExpensesDataExpensesCreatorSerializer =
    new _$GGroupWithExpensesData_expenses_creatorSerializer();
Serializer<GGroupWithExpensesData_expenses_splits>
    _$gGroupWithExpensesDataExpensesSplitsSerializer =
    new _$GGroupWithExpensesData_expenses_splitsSerializer();
Serializer<GGroupWithExpensesData_expenses_splits_fromUser>
    _$gGroupWithExpensesDataExpensesSplitsFromUserSerializer =
    new _$GGroupWithExpensesData_expenses_splits_fromUserSerializer();
Serializer<GGroupWithExpensesData_expenses_splits_toUser>
    _$gGroupWithExpensesDataExpensesSplitsToUserSerializer =
    new _$GGroupWithExpensesData_expenses_splits_toUserSerializer();
Serializer<GGroupWithExpensesData_expenses_splits_amount>
    _$gGroupWithExpensesDataExpensesSplitsAmountSerializer =
    new _$GGroupWithExpensesData_expenses_splits_amountSerializer();
Serializer<GGroupWithExpensesData_expenses_amount>
    _$gGroupWithExpensesDataExpensesAmountSerializer =
    new _$GGroupWithExpensesData_expenses_amountSerializer();
Serializer<GExpenseMixSplitFieldsData> _$gExpenseMixSplitFieldsDataSerializer =
    new _$GExpenseMixSplitFieldsDataSerializer();
Serializer<GExpenseMixSplitFieldsData_expense>
    _$gExpenseMixSplitFieldsDataExpenseSerializer =
    new _$GExpenseMixSplitFieldsData_expenseSerializer();
Serializer<GExpenseMixSplitFieldsData_expense_amount>
    _$gExpenseMixSplitFieldsDataExpenseAmountSerializer =
    new _$GExpenseMixSplitFieldsData_expense_amountSerializer();
Serializer<GExpenseMixSplitFieldsData_split>
    _$gExpenseMixSplitFieldsDataSplitSerializer =
    new _$GExpenseMixSplitFieldsData_splitSerializer();
Serializer<GExpenseMixSplitFieldsData_split_fromUser>
    _$gExpenseMixSplitFieldsDataSplitFromUserSerializer =
    new _$GExpenseMixSplitFieldsData_split_fromUserSerializer();
Serializer<GExpenseMixSplitFieldsData_split_toUser>
    _$gExpenseMixSplitFieldsDataSplitToUserSerializer =
    new _$GExpenseMixSplitFieldsData_split_toUserSerializer();
Serializer<GExpenseMixSplitFieldsData_split_amount>
    _$gExpenseMixSplitFieldsDataSplitAmountSerializer =
    new _$GExpenseMixSplitFieldsData_split_amountSerializer();
Serializer<GCategorisedAmountFieldsData>
    _$gCategorisedAmountFieldsDataSerializer =
    new _$GCategorisedAmountFieldsDataSerializer();
Serializer<GCategorisedAmountFieldsData_amount>
    _$gCategorisedAmountFieldsDataAmountSerializer =
    new _$GCategorisedAmountFieldsData_amountSerializer();

class _$GuserDataSerializer implements StructuredSerializer<GuserData> {
  @override
  final Iterable<Type> types = const [GuserData, _$GuserData];
  @override
  final String wireName = 'GuserData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GuserData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'user',
      serializers.serialize(object.user,
          specifiedType: const FullType(GuserData_user)),
    ];

    return result;
  }

  @override
  GuserData deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(GuserData_user))! as GuserData_user;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData_user__baseSerializer
    implements StructuredSerializer<GuserData_user__base> {
  @override
  final Iterable<Type> types = const [
    GuserData_user__base,
    _$GuserData_user__base
  ];
  @override
  final String wireName = 'GuserData_user__base';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserData_user__base object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GuserData_user__base deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserData_user__baseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData_user__asRegisteredSerializer
    implements StructuredSerializer<GuserData_user__asRegistered> {
  @override
  final Iterable<Type> types = const [
    GuserData_user__asRegistered,
    _$GuserData_user__asRegistered
  ];
  @override
  final String wireName = 'GuserData_user__asRegistered';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserData_user__asRegistered object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'user',
      serializers.serialize(object.user,
          specifiedType: const FullType(GuserData_user__asRegistered_user)),
    ];

    return result;
  }

  @override
  GuserData_user__asRegistered deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserData_user__asRegisteredBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GuserData_user__asRegistered_user))!
              as GuserData_user__asRegistered_user);
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData_user__asRegistered_userSerializer
    implements StructuredSerializer<GuserData_user__asRegistered_user> {
  @override
  final Iterable<Type> types = const [
    GuserData_user__asRegistered_user,
    _$GuserData_user__asRegistered_user
  ];
  @override
  final String wireName = 'GuserData_user__asRegistered_user';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserData_user__asRegistered_user object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GuserData_user__asRegistered_user deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserData_user__asRegistered_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData_user__asUnregisteredSerializer
    implements StructuredSerializer<GuserData_user__asUnregistered> {
  @override
  final Iterable<Type> types = const [
    GuserData_user__asUnregistered,
    _$GuserData_user__asUnregistered
  ];
  @override
  final String wireName = 'GuserData_user__asUnregistered';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserData_user__asUnregistered object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GuserData_user__asUnregistered deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserData_user__asUnregisteredBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserConfigDataSerializer
    implements StructuredSerializer<GuserConfigData> {
  @override
  final Iterable<Type> types = const [GuserConfigData, _$GuserConfigData];
  @override
  final String wireName = 'GuserConfigData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GuserConfigData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'config',
      serializers.serialize(object.config,
          specifiedType: const FullType(GuserConfigData_config)),
    ];

    return result;
  }

  @override
  GuserConfigData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserConfigDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'config':
          result.config.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GuserConfigData_config))!
              as GuserConfigData_config);
          break;
      }
    }

    return result.build();
  }
}

class _$GuserConfigData_configSerializer
    implements StructuredSerializer<GuserConfigData_config> {
  @override
  final Iterable<Type> types = const [
    GuserConfigData_config,
    _$GuserConfigData_config
  ];
  @override
  final String wireName = 'GuserConfigData_config';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GuserConfigData_config object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'defaultCurrencyId',
      serializers.serialize(object.defaultCurrencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GuserConfigData_config deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GuserConfigData_configBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'defaultCurrencyId':
          result.defaultCurrencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsDataSerializer implements StructuredSerializer<GgroupsData> {
  @override
  final Iterable<Type> types = const [GgroupsData, _$GgroupsData];
  @override
  final String wireName = 'GgroupsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GgroupsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'groups',
      serializers.serialize(object.groups,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GgroupsData_groups)])),
    ];

    return result;
  }

  @override
  GgroupsData deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groups':
          result.groups.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GgroupsData_groups)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groupsSerializer
    implements StructuredSerializer<GgroupsData_groups> {
  @override
  final Iterable<Type> types = const [GgroupsData_groups, _$GgroupsData_groups];
  @override
  final String wireName = 'GgroupsData_groups';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GgroupsData_groups_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GgroupsData_groups_members)])),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupsData_groups deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groupsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GgroupsData_groups_creator))!
              as GgroupsData_groups_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupsData_groups_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groups_creatorSerializer
    implements StructuredSerializer<GgroupsData_groups_creator> {
  @override
  final Iterable<Type> types = const [
    GgroupsData_groups_creator,
    _$GgroupsData_groups_creator
  ];
  @override
  final String wireName = 'GgroupsData_groups_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupsData_groups_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groups_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groups_membersSerializer
    implements StructuredSerializer<GgroupsData_groups_members> {
  @override
  final Iterable<Type> types = const [
    GgroupsData_groups_members,
    _$GgroupsData_groups_members
  ];
  @override
  final String wireName = 'GgroupsData_groups_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GgroupsData_groups_members_owedInGroup)])),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GgroupsData_groups_members_member)),
    ];

    return result;
  }

  @override
  GgroupsData_groups_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groups_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupsData_groups_members_owedInGroup)
              ]))! as BuiltList<Object?>);
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupsData_groups_members_member))!
              as GgroupsData_groups_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groups_members_owedInGroupSerializer
    implements StructuredSerializer<GgroupsData_groups_members_owedInGroup> {
  @override
  final Iterable<Type> types = const [
    GgroupsData_groups_members_owedInGroup,
    _$GgroupsData_groups_members_owedInGroup
  ];
  @override
  final String wireName = 'GgroupsData_groups_members_owedInGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups_members_owedInGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgroupsData_groups_members_owedInGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groups_members_owedInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupsData_groups_members_memberSerializer
    implements StructuredSerializer<GgroupsData_groups_members_member> {
  @override
  final Iterable<Type> types = const [
    GgroupsData_groups_members_member,
    _$GgroupsData_groups_members_member
  ];
  @override
  final String wireName = 'GgroupsData_groups_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupsData_groups_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupsData_groups_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupsData_groups_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Ginteracted_usersDataSerializer
    implements StructuredSerializer<Ginteracted_usersData> {
  @override
  final Iterable<Type> types = const [
    Ginteracted_usersData,
    _$Ginteracted_usersData
  ];
  @override
  final String wireName = 'Ginteracted_usersData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Ginteracted_usersData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'interactedUsers',
      serializers.serialize(object.interactedUsers,
          specifiedType: const FullType(BuiltList,
              const [const FullType(Ginteracted_usersData_interactedUsers)])),
    ];

    return result;
  }

  @override
  Ginteracted_usersData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Ginteracted_usersDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'interactedUsers':
          result.interactedUsers.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Ginteracted_usersData_interactedUsers)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Ginteracted_usersData_interactedUsersSerializer
    implements StructuredSerializer<Ginteracted_usersData_interactedUsers> {
  @override
  final Iterable<Type> types = const [
    Ginteracted_usersData_interactedUsers,
    _$Ginteracted_usersData_interactedUsers
  ];
  @override
  final String wireName = 'Ginteracted_usersData_interactedUsers';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Ginteracted_usersData_interactedUsers object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'upiIds',
      serializers.serialize(object.upiIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'owes',
      serializers.serialize(object.owes,
          specifiedType: const FullType(BuiltList, const [
            const FullType(Ginteracted_usersData_interactedUsers_owes)
          ])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Ginteracted_usersData_interactedUsers deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Ginteracted_usersData_interactedUsersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'upiIds':
          result.upiIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'owes':
          result.owes.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Ginteracted_usersData_interactedUsers_owes)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Ginteracted_usersData_interactedUsers_owesSerializer
    implements
        StructuredSerializer<Ginteracted_usersData_interactedUsers_owes> {
  @override
  final Iterable<Type> types = const [
    Ginteracted_usersData_interactedUsers_owes,
    _$Ginteracted_usersData_interactedUsers_owes
  ];
  @override
  final String wireName = 'Ginteracted_usersData_interactedUsers_owes';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Ginteracted_usersData_interactedUsers_owes object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              Ginteracted_usersData_interactedUsers_owes_amount)),
    ];

    return result;
  }

  @override
  Ginteracted_usersData_interactedUsers_owes deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Ginteracted_usersData_interactedUsers_owesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Ginteracted_usersData_interactedUsers_owes_amount))!
              as Ginteracted_usersData_interactedUsers_owes_amount);
          break;
      }
    }

    return result.build();
  }
}

class _$Ginteracted_usersData_interactedUsers_owes_amountSerializer
    implements
        StructuredSerializer<
            Ginteracted_usersData_interactedUsers_owes_amount> {
  @override
  final Iterable<Type> types = const [
    Ginteracted_usersData_interactedUsers_owes_amount,
    _$Ginteracted_usersData_interactedUsers_owes_amount
  ];
  @override
  final String wireName = 'Ginteracted_usersData_interactedUsers_owes_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Ginteracted_usersData_interactedUsers_owes_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Ginteracted_usersData_interactedUsers_owes_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new Ginteracted_usersData_interactedUsers_owes_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshDataSerializer implements StructuredSerializer<GrefreshData> {
  @override
  final Iterable<Type> types = const [GrefreshData, _$GrefreshData];
  @override
  final String wireName = 'GrefreshData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GrefreshData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'user',
      serializers.serialize(object.user,
          specifiedType: const FullType(GrefreshData_user)),
      'config',
      serializers.serialize(object.config,
          specifiedType: const FullType(GrefreshData_config)),
      'groups',
      serializers.serialize(object.groups,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GrefreshData_groups)])),
      'interactedUsers',
      serializers.serialize(object.interactedUsers,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GrefreshData_interactedUsers)])),
      'currencies',
      serializers.serialize(object.currencies,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GrefreshData_currencies)])),
    ];

    return result;
  }

  @override
  GrefreshData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'user':
          result.user = serializers.deserialize(value,
                  specifiedType: const FullType(GrefreshData_user))!
              as GrefreshData_user;
          break;
        case 'config':
          result.config.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GrefreshData_config))!
              as GrefreshData_config);
          break;
        case 'groups':
          result.groups.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GrefreshData_groups)]))!
              as BuiltList<Object?>);
          break;
        case 'interactedUsers':
          result.interactedUsers.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GrefreshData_interactedUsers)
              ]))! as BuiltList<Object?>);
          break;
        case 'currencies':
          result.currencies.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GrefreshData_currencies)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_user__baseSerializer
    implements StructuredSerializer<GrefreshData_user__base> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_user__base,
    _$GrefreshData_user__base
  ];
  @override
  final String wireName = 'GrefreshData_user__base';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_user__base object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GrefreshData_user__base deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_user__baseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_user__asRegisteredSerializer
    implements StructuredSerializer<GrefreshData_user__asRegistered> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_user__asRegistered,
    _$GrefreshData_user__asRegistered
  ];
  @override
  final String wireName = 'GrefreshData_user__asRegistered';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_user__asRegistered object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'user',
      serializers.serialize(object.user,
          specifiedType: const FullType(GrefreshData_user__asRegistered_user)),
    ];

    return result;
  }

  @override
  GrefreshData_user__asRegistered deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_user__asRegisteredBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GrefreshData_user__asRegistered_user))!
              as GrefreshData_user__asRegistered_user);
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_user__asRegistered_userSerializer
    implements StructuredSerializer<GrefreshData_user__asRegistered_user> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_user__asRegistered_user,
    _$GrefreshData_user__asRegistered_user
  ];
  @override
  final String wireName = 'GrefreshData_user__asRegistered_user';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_user__asRegistered_user object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GrefreshData_user__asRegistered_user deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_user__asRegistered_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_user__asUnregisteredSerializer
    implements StructuredSerializer<GrefreshData_user__asUnregistered> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_user__asUnregistered,
    _$GrefreshData_user__asUnregistered
  ];
  @override
  final String wireName = 'GrefreshData_user__asUnregistered';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_user__asUnregistered object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GrefreshData_user__asUnregistered deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_user__asUnregisteredBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_configSerializer
    implements StructuredSerializer<GrefreshData_config> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_config,
    _$GrefreshData_config
  ];
  @override
  final String wireName = 'GrefreshData_config';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_config object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'defaultCurrencyId',
      serializers.serialize(object.defaultCurrencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GrefreshData_config deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_configBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'defaultCurrencyId':
          result.defaultCurrencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_groupsSerializer
    implements StructuredSerializer<GrefreshData_groups> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_groups,
    _$GrefreshData_groups
  ];
  @override
  final String wireName = 'GrefreshData_groups';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_groups object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GrefreshData_groups_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GrefreshData_groups_members)])),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GrefreshData_groups deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_groupsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GrefreshData_groups_creator))!
              as GrefreshData_groups_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GrefreshData_groups_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_groups_creatorSerializer
    implements StructuredSerializer<GrefreshData_groups_creator> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_groups_creator,
    _$GrefreshData_groups_creator
  ];
  @override
  final String wireName = 'GrefreshData_groups_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_groups_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GrefreshData_groups_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_groups_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_groups_membersSerializer
    implements StructuredSerializer<GrefreshData_groups_members> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_groups_members,
    _$GrefreshData_groups_members
  ];
  @override
  final String wireName = 'GrefreshData_groups_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_groups_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GrefreshData_groups_members_owedInGroup)])),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GrefreshData_groups_members_member)),
    ];

    return result;
  }

  @override
  GrefreshData_groups_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_groups_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GrefreshData_groups_members_owedInGroup)
              ]))! as BuiltList<Object?>);
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GrefreshData_groups_members_member))!
              as GrefreshData_groups_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_groups_members_owedInGroupSerializer
    implements StructuredSerializer<GrefreshData_groups_members_owedInGroup> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_groups_members_owedInGroup,
    _$GrefreshData_groups_members_owedInGroup
  ];
  @override
  final String wireName = 'GrefreshData_groups_members_owedInGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_groups_members_owedInGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GrefreshData_groups_members_owedInGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_groups_members_owedInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_groups_members_memberSerializer
    implements StructuredSerializer<GrefreshData_groups_members_member> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_groups_members_member,
    _$GrefreshData_groups_members_member
  ];
  @override
  final String wireName = 'GrefreshData_groups_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_groups_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GrefreshData_groups_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_groups_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_interactedUsersSerializer
    implements StructuredSerializer<GrefreshData_interactedUsers> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_interactedUsers,
    _$GrefreshData_interactedUsers
  ];
  @override
  final String wireName = 'GrefreshData_interactedUsers';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_interactedUsers object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'upiIds',
      serializers.serialize(object.upiIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'owes',
      serializers.serialize(object.owes,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GrefreshData_interactedUsers_owes)])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GrefreshData_interactedUsers deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_interactedUsersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'upiIds':
          result.upiIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'owes':
          result.owes.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GrefreshData_interactedUsers_owes)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_interactedUsers_owesSerializer
    implements StructuredSerializer<GrefreshData_interactedUsers_owes> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_interactedUsers_owes,
    _$GrefreshData_interactedUsers_owes
  ];
  @override
  final String wireName = 'GrefreshData_interactedUsers_owes';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_interactedUsers_owes object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GrefreshData_interactedUsers_owes_amount)),
    ];

    return result;
  }

  @override
  GrefreshData_interactedUsers_owes deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_interactedUsers_owesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GrefreshData_interactedUsers_owes_amount))!
              as GrefreshData_interactedUsers_owes_amount);
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_interactedUsers_owes_amountSerializer
    implements StructuredSerializer<GrefreshData_interactedUsers_owes_amount> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_interactedUsers_owes_amount,
    _$GrefreshData_interactedUsers_owes_amount
  ];
  @override
  final String wireName = 'GrefreshData_interactedUsers_owes_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_interactedUsers_owes_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GrefreshData_interactedUsers_owes_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_interactedUsers_owes_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GrefreshData_currenciesSerializer
    implements StructuredSerializer<GrefreshData_currencies> {
  @override
  final Iterable<Type> types = const [
    GrefreshData_currencies,
    _$GrefreshData_currencies
  ];
  @override
  final String wireName = 'GrefreshData_currencies';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GrefreshData_currencies object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'rate',
      serializers.serialize(object.rate, specifiedType: const FullType(double)),
      'symbol',
      serializers.serialize(object.symbol,
          specifiedType: const FullType(String)),
      'displayName',
      serializers.serialize(object.displayName,
          specifiedType: const FullType(String)),
      'decimals',
      serializers.serialize(object.decimals,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GrefreshData_currencies deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GrefreshData_currenciesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'rate':
          result.rate = serializers.deserialize(value,
              specifiedType: const FullType(double))! as double;
          break;
        case 'symbol':
          result.symbol = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'decimals':
          result.decimals = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrenciesDataSerializer
    implements StructuredSerializer<GcurrenciesData> {
  @override
  final Iterable<Type> types = const [GcurrenciesData, _$GcurrenciesData];
  @override
  final String wireName = 'GcurrenciesData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GcurrenciesData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'currencies',
      serializers.serialize(object.currencies,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GcurrenciesData_currencies)])),
    ];

    return result;
  }

  @override
  GcurrenciesData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrenciesDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'currencies':
          result.currencies.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GcurrenciesData_currencies)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrenciesData_currenciesSerializer
    implements StructuredSerializer<GcurrenciesData_currencies> {
  @override
  final Iterable<Type> types = const [
    GcurrenciesData_currencies,
    _$GcurrenciesData_currencies
  ];
  @override
  final String wireName = 'GcurrenciesData_currencies';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GcurrenciesData_currencies object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'rate',
      serializers.serialize(object.rate, specifiedType: const FullType(double)),
      'symbol',
      serializers.serialize(object.symbol,
          specifiedType: const FullType(String)),
      'displayName',
      serializers.serialize(object.displayName,
          specifiedType: const FullType(String)),
      'decimals',
      serializers.serialize(object.decimals,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GcurrenciesData_currencies deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrenciesData_currenciesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'rate':
          result.rate = serializers.deserialize(value,
              specifiedType: const FullType(double))! as double;
          break;
        case 'symbol':
          result.symbol = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'decimals':
          result.decimals = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupDataSerializer implements StructuredSerializer<GgroupData> {
  @override
  final Iterable<Type> types = const [GgroupData, _$GgroupData];
  @override
  final String wireName = 'GgroupData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GgroupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GgroupData_group)),
    ];

    return result;
  }

  @override
  GgroupData deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GgroupData_group))!
              as GgroupData_group);
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_groupSerializer
    implements StructuredSerializer<GgroupData_group> {
  @override
  final Iterable<Type> types = const [GgroupData_group, _$GgroupData_group];
  @override
  final String wireName = 'GgroupData_group';

  @override
  Iterable<Object?> serialize(Serializers serializers, GgroupData_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'expenses',
      serializers.serialize(object.expenses,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GgroupData_group_expenses)])),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GgroupData_group_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GgroupData_group_members)])),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expenses':
          result.expenses.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupData_group_expenses)
              ]))! as BuiltList<Object?>);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GgroupData_group_creator))!
              as GgroupData_group_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupData_group_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expensesSerializer
    implements StructuredSerializer<GgroupData_group_expenses> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses,
    _$GgroupData_group_expenses
  ];
  @override
  final String wireName = 'GgroupData_group_expenses';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GgroupData_group_expenses_creator)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GgroupData_group_expenses_splits)])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GgroupData_group_expenses_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expensesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupData_group_expenses_creator))!
              as GgroupData_group_expenses_creator);
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupData_group_expenses_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupData_group_expenses_amount))!
              as GgroupData_group_expenses_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_creatorSerializer
    implements StructuredSerializer<GgroupData_group_expenses_creator> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_creator,
    _$GgroupData_group_expenses_creator
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_splitsSerializer
    implements StructuredSerializer<GgroupData_group_expenses_splits> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_splits,
    _$GgroupData_group_expenses_splits
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GgroupData_group_expenses_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GgroupData_group_expenses_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GgroupData_group_expenses_splits_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgroupData_group_expenses_splits_fromUser))!
              as GgroupData_group_expenses_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupData_group_expenses_splits_toUser))!
              as GgroupData_group_expenses_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupData_group_expenses_splits_amount))!
              as GgroupData_group_expenses_splits_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_splits_fromUserSerializer
    implements StructuredSerializer<GgroupData_group_expenses_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_splits_fromUser,
    _$GgroupData_group_expenses_splits_fromUser
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_splits_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_splits_toUserSerializer
    implements StructuredSerializer<GgroupData_group_expenses_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_splits_toUser,
    _$GgroupData_group_expenses_splits_toUser
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_expenses_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_splits_amountSerializer
    implements StructuredSerializer<GgroupData_group_expenses_splits_amount> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_splits_amount,
    _$GgroupData_group_expenses_splits_amount
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_splits_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_splits_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgroupData_group_expenses_splits_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_splits_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_expenses_amountSerializer
    implements StructuredSerializer<GgroupData_group_expenses_amount> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_expenses_amount,
    _$GgroupData_group_expenses_amount
  ];
  @override
  final String wireName = 'GgroupData_group_expenses_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_expenses_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgroupData_group_expenses_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_expenses_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_creatorSerializer
    implements StructuredSerializer<GgroupData_group_creator> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_creator,
    _$GgroupData_group_creator
  ];
  @override
  final String wireName = 'GgroupData_group_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_membersSerializer
    implements StructuredSerializer<GgroupData_group_members> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_members,
    _$GgroupData_group_members
  ];
  @override
  final String wireName = 'GgroupData_group_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GgroupData_group_members_owedInGroup)])),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GgroupData_group_members_member)),
    ];

    return result;
  }

  @override
  GgroupData_group_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgroupData_group_members_owedInGroup)
              ]))! as BuiltList<Object?>);
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgroupData_group_members_member))!
              as GgroupData_group_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_members_owedInGroupSerializer
    implements StructuredSerializer<GgroupData_group_members_owedInGroup> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_members_owedInGroup,
    _$GgroupData_group_members_owedInGroup
  ];
  @override
  final String wireName = 'GgroupData_group_members_owedInGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_members_owedInGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgroupData_group_members_owedInGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_members_owedInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgroupData_group_members_memberSerializer
    implements StructuredSerializer<GgroupData_group_members_member> {
  @override
  final Iterable<Type> types = const [
    GgroupData_group_members_member,
    _$GgroupData_group_members_member
  ];
  @override
  final String wireName = 'GgroupData_group_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgroupData_group_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgroupData_group_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgroupData_group_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsignupDataSerializer implements StructuredSerializer<GsignupData> {
  @override
  final Iterable<Type> types = const [GsignupData, _$GsignupData];
  @override
  final String wireName = 'GsignupData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GsignupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'signup',
      serializers.serialize(object.signup,
          specifiedType: const FullType(GsignupData_signup)),
    ];

    return result;
  }

  @override
  GsignupData deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsignupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'signup':
          result.signup.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GsignupData_signup))!
              as GsignupData_signup);
          break;
      }
    }

    return result.build();
  }
}

class _$GsignupData_signupSerializer
    implements StructuredSerializer<GsignupData_signup> {
  @override
  final Iterable<Type> types = const [GsignupData_signup, _$GsignupData_signup];
  @override
  final String wireName = 'GsignupData_signup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsignupData_signup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'user',
      serializers.serialize(object.user,
          specifiedType: const FullType(GsignupData_signup_user)),
      'tokens',
      serializers.serialize(object.tokens,
          specifiedType: const FullType(GsignupData_signup_tokens)),
    ];

    return result;
  }

  @override
  GsignupData_signup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsignupData_signupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GsignupData_signup_user))!
              as GsignupData_signup_user);
          break;
        case 'tokens':
          result.tokens.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GsignupData_signup_tokens))!
              as GsignupData_signup_tokens);
          break;
      }
    }

    return result.build();
  }
}

class _$GsignupData_signup_userSerializer
    implements StructuredSerializer<GsignupData_signup_user> {
  @override
  final Iterable<Type> types = const [
    GsignupData_signup_user,
    _$GsignupData_signup_user
  ];
  @override
  final String wireName = 'GsignupData_signup_user';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsignupData_signup_user object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsignupData_signup_user deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsignupData_signup_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsignupData_signup_tokensSerializer
    implements StructuredSerializer<GsignupData_signup_tokens> {
  @override
  final Iterable<Type> types = const [
    GsignupData_signup_tokens,
    _$GsignupData_signup_tokens
  ];
  @override
  final String wireName = 'GsignupData_signup_tokens';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsignupData_signup_tokens object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'accessToken',
      serializers.serialize(object.accessToken,
          specifiedType: const FullType(String)),
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsignupData_signup_tokens deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsignupData_signup_tokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupDataSerializer
    implements StructuredSerializer<Gcreate_groupData> {
  @override
  final Iterable<Type> types = const [Gcreate_groupData, _$Gcreate_groupData];
  @override
  final String wireName = 'Gcreate_groupData';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gcreate_groupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'createGroup',
      serializers.serialize(object.createGroup,
          specifiedType: const FullType(Gcreate_groupData_createGroup)),
    ];

    return result;
  }

  @override
  Gcreate_groupData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createGroup':
          result.createGroup.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gcreate_groupData_createGroup))!
              as Gcreate_groupData_createGroup);
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroupSerializer
    implements StructuredSerializer<Gcreate_groupData_createGroup> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup,
    _$Gcreate_groupData_createGroup
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gcreate_groupData_createGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(Gcreate_groupData_createGroup_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(BuiltList,
              const [const FullType(Gcreate_groupData_createGroup_members)])),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gcreate_groupData_createGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupData_createGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gcreate_groupData_createGroup_creator))!
              as Gcreate_groupData_createGroup_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Gcreate_groupData_createGroup_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroup_creatorSerializer
    implements StructuredSerializer<Gcreate_groupData_createGroup_creator> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup_creator,
    _$Gcreate_groupData_createGroup_creator
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gcreate_groupData_createGroup_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gcreate_groupData_createGroup_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupData_createGroup_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroup_membersSerializer
    implements StructuredSerializer<Gcreate_groupData_createGroup_members> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup_members,
    _$Gcreate_groupData_createGroup_members
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gcreate_groupData_createGroup_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(BuiltList, const [
            const FullType(Gcreate_groupData_createGroup_members_owedInGroup)
          ])),
      'member',
      serializers.serialize(object.member,
          specifiedType:
              const FullType(Gcreate_groupData_createGroup_members_member)),
    ];

    return result;
  }

  @override
  Gcreate_groupData_createGroup_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupData_createGroup_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(
                    Gcreate_groupData_createGroup_members_owedInGroup)
              ]))! as BuiltList<Object?>);
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gcreate_groupData_createGroup_members_member))!
              as Gcreate_groupData_createGroup_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroup_members_owedInGroupSerializer
    implements
        StructuredSerializer<
            Gcreate_groupData_createGroup_members_owedInGroup> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup_members_owedInGroup,
    _$Gcreate_groupData_createGroup_members_owedInGroup
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup_members_owedInGroup';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gcreate_groupData_createGroup_members_owedInGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gcreate_groupData_createGroup_members_owedInGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new Gcreate_groupData_createGroup_members_owedInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gcreate_groupData_createGroup_members_memberSerializer
    implements
        StructuredSerializer<Gcreate_groupData_createGroup_members_member> {
  @override
  final Iterable<Type> types = const [
    Gcreate_groupData_createGroup_members_member,
    _$Gcreate_groupData_createGroup_members_member
  ];
  @override
  final String wireName = 'Gcreate_groupData_createGroup_members_member';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gcreate_groupData_createGroup_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gcreate_groupData_createGroup_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcreate_groupData_createGroup_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_to_groupDataSerializer
    implements StructuredSerializer<Gadd_to_groupData> {
  @override
  final Iterable<Type> types = const [Gadd_to_groupData, _$Gadd_to_groupData];
  @override
  final String wireName = 'Gadd_to_groupData';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gadd_to_groupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'addToGroupByEmail',
      serializers.serialize(object.addToGroupByEmail,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gadd_to_groupData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_to_groupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'addToGroupByEmail':
          result.addToGroupByEmail = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseDataSerializer
    implements StructuredSerializer<Gadd_expenseData> {
  @override
  final Iterable<Type> types = const [Gadd_expenseData, _$Gadd_expenseData];
  @override
  final String wireName = 'Gadd_expenseData';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gadd_expenseData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'addExpense',
      serializers.serialize(object.addExpense,
          specifiedType: const FullType(Gadd_expenseData_addExpense)),
    ];

    return result;
  }

  @override
  Gadd_expenseData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'addExpense':
          result.addExpense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gadd_expenseData_addExpense))!
              as Gadd_expenseData_addExpense);
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpenseSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense,
    _$Gadd_expenseData_addExpense
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList,
              const [const FullType(Gadd_expenseData_addExpense_splits)])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(Gadd_expenseData_addExpense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Gadd_expenseData_addExpense_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gadd_expenseData_addExpense_amount))!
              as Gadd_expenseData_addExpense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splitsSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense_splits> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits,
    _$Gadd_expenseData_addExpense_splits
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(Gadd_expenseData_addExpense_splits_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(Gadd_expenseData_addExpense_splits_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_expense))!
              as Gadd_expenseData_addExpense_splits_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gadd_expenseData_addExpense_splits_group))!
              as Gadd_expenseData_addExpense_splits_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_creator))!
              as Gadd_expenseData_addExpense_splits_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_fromUser))!
              as Gadd_expenseData_addExpense_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_toUser))!
              as Gadd_expenseData_addExpense_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_amount))!
              as Gadd_expenseData_addExpense_splits_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_expenseSerializer
    implements
        StructuredSerializer<Gadd_expenseData_addExpense_splits_expense> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_expense,
    _$Gadd_expenseData_addExpense_splits_expense
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gadd_expenseData_addExpense_splits_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              Gadd_expenseData_addExpense_splits_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gadd_expenseData_addExpense_splits_expense_amount))!
              as Gadd_expenseData_addExpense_splits_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_expense_amountSerializer
    implements
        StructuredSerializer<
            Gadd_expenseData_addExpense_splits_expense_amount> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_expense_amount,
    _$Gadd_expenseData_addExpense_splits_expense_amount
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gadd_expenseData_addExpense_splits_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new Gadd_expenseData_addExpense_splits_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_groupSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense_splits_group> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_group,
    _$Gadd_expenseData_addExpense_splits_group
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense_splits_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_creatorSerializer
    implements
        StructuredSerializer<Gadd_expenseData_addExpense_splits_creator> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_creator,
    _$Gadd_expenseData_addExpense_splits_creator
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gadd_expenseData_addExpense_splits_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_fromUserSerializer
    implements
        StructuredSerializer<Gadd_expenseData_addExpense_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_fromUser,
    _$Gadd_expenseData_addExpense_splits_fromUser
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gadd_expenseData_addExpense_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_toUserSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_toUser,
    _$Gadd_expenseData_addExpense_splits_toUser
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_splits_amountSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense_splits_amount> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_splits_amount,
    _$Gadd_expenseData_addExpense_splits_amount
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_splits_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense_splits_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gadd_expenseData_addExpense_splits_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_splits_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gadd_expenseData_addExpense_amountSerializer
    implements StructuredSerializer<Gadd_expenseData_addExpense_amount> {
  @override
  final Iterable<Type> types = const [
    Gadd_expenseData_addExpense_amount,
    _$Gadd_expenseData_addExpense_amount
  ];
  @override
  final String wireName = 'Gadd_expenseData_addExpense_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gadd_expenseData_addExpense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gadd_expenseData_addExpense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gadd_expenseData_addExpense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gsend_email_otpDataSerializer
    implements StructuredSerializer<Gsend_email_otpData> {
  @override
  final Iterable<Type> types = const [
    Gsend_email_otpData,
    _$Gsend_email_otpData
  ];
  @override
  final String wireName = 'Gsend_email_otpData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gsend_email_otpData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'sendEmailOtp',
      serializers.serialize(object.sendEmailOtp,
          specifiedType: const FullType(bool)),
    ];

    return result;
  }

  @override
  Gsend_email_otpData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gsend_email_otpDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sendEmailOtp':
          result.sendEmailOtp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$Gverify_email_otpDataSerializer
    implements StructuredSerializer<Gverify_email_otpData> {
  @override
  final Iterable<Type> types = const [
    Gverify_email_otpData,
    _$Gverify_email_otpData
  ];
  @override
  final String wireName = 'Gverify_email_otpData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gverify_email_otpData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'verifyOtp',
      serializers.serialize(object.verifyOtp,
          specifiedType: const FullType(Gverify_email_otpData_verifyOtp)),
    ];

    return result;
  }

  @override
  Gverify_email_otpData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gverify_email_otpDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'verifyOtp':
          result.verifyOtp = serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gverify_email_otpData_verifyOtp))!
              as Gverify_email_otpData_verifyOtp;
          break;
      }
    }

    return result.build();
  }
}

class _$Gverify_email_otpData_verifyOtp__baseSerializer
    implements StructuredSerializer<Gverify_email_otpData_verifyOtp__base> {
  @override
  final Iterable<Type> types = const [
    Gverify_email_otpData_verifyOtp__base,
    _$Gverify_email_otpData_verifyOtp__base
  ];
  @override
  final String wireName = 'Gverify_email_otpData_verifyOtp__base';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gverify_email_otpData_verifyOtp__base object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gverify_email_otpData_verifyOtp__base deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gverify_email_otpData_verifyOtp__baseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gverify_email_otpData_verifyOtp__asUserSignedUpSerializer
    implements
        StructuredSerializer<Gverify_email_otpData_verifyOtp__asUserSignedUp> {
  @override
  final Iterable<Type> types = const [
    Gverify_email_otpData_verifyOtp__asUserSignedUp,
    _$Gverify_email_otpData_verifyOtp__asUserSignedUp
  ];
  @override
  final String wireName = 'Gverify_email_otpData_verifyOtp__asUserSignedUp';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gverify_email_otpData_verifyOtp__asUserSignedUp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'accessToken',
      serializers.serialize(object.accessToken,
          specifiedType: const FullType(String)),
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserSignedUp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gverify_email_otpData_verifyOtp__asUserNotSignedUpSerializer
    implements
        StructuredSerializer<
            Gverify_email_otpData_verifyOtp__asUserNotSignedUp> {
  @override
  final Iterable<Type> types = const [
    Gverify_email_otpData_verifyOtp__asUserNotSignedUp,
    _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp
  ];
  @override
  final String wireName = 'Gverify_email_otpData_verifyOtp__asUserNotSignedUp';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      Gverify_email_otpData_verifyOtp__asUserNotSignedUp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'signupToken',
      serializers.serialize(object.signupToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserNotSignedUp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'signupToken':
          result.signupToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Grefresh_tokenDataSerializer
    implements StructuredSerializer<Grefresh_tokenData> {
  @override
  final Iterable<Type> types = const [Grefresh_tokenData, _$Grefresh_tokenData];
  @override
  final String wireName = 'Grefresh_tokenData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Grefresh_tokenData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(Grefresh_tokenData_refreshToken)),
    ];

    return result;
  }

  @override
  Grefresh_tokenData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Grefresh_tokenDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'refreshToken':
          result.refreshToken.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Grefresh_tokenData_refreshToken))!
              as Grefresh_tokenData_refreshToken);
          break;
      }
    }

    return result.build();
  }
}

class _$Grefresh_tokenData_refreshTokenSerializer
    implements StructuredSerializer<Grefresh_tokenData_refreshToken> {
  @override
  final Iterable<Type> types = const [
    Grefresh_tokenData_refreshToken,
    _$Grefresh_tokenData_refreshToken
  ];
  @override
  final String wireName = 'Grefresh_tokenData_refreshToken';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Grefresh_tokenData_refreshToken object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'accessToken',
      serializers.serialize(object.accessToken,
          specifiedType: const FullType(String)),
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Grefresh_tokenData_refreshToken deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Grefresh_tokenData_refreshTokenBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsearchUserByEmailDataSerializer
    implements StructuredSerializer<GsearchUserByEmailData> {
  @override
  final Iterable<Type> types = const [
    GsearchUserByEmailData,
    _$GsearchUserByEmailData
  ];
  @override
  final String wireName = 'GsearchUserByEmailData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsearchUserByEmailData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'findUserByEmail',
      serializers.serialize(object.findUserByEmail,
          specifiedType:
              const FullType(GsearchUserByEmailData_findUserByEmail)),
    ];

    return result;
  }

  @override
  GsearchUserByEmailData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsearchUserByEmailDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'findUserByEmail':
          result.findUserByEmail.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsearchUserByEmailData_findUserByEmail))!
              as GsearchUserByEmailData_findUserByEmail);
          break;
      }
    }

    return result.build();
  }
}

class _$GsearchUserByEmailData_findUserByEmailSerializer
    implements StructuredSerializer<GsearchUserByEmailData_findUserByEmail> {
  @override
  final Iterable<Type> types = const [
    GsearchUserByEmailData_findUserByEmail,
    _$GsearchUserByEmailData_findUserByEmail
  ];
  @override
  final String wireName = 'GsearchUserByEmailData_findUserByEmail';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsearchUserByEmailData_findUserByEmail object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsearchUserByEmailData_findUserByEmail deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsearchUserByEmailData_findUserByEmailBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseDataSerializer
    implements StructuredSerializer<GcreateNonGroupExpenseData> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData,
    _$GcreateNonGroupExpenseData
  ];
  @override
  final String wireName = 'GcreateNonGroupExpenseData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GcreateNonGroupExpenseData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'addNonGroupExpense',
      serializers.serialize(object.addNonGroupExpense,
          specifiedType:
              const FullType(GcreateNonGroupExpenseData_addNonGroupExpense)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcreateNonGroupExpenseDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'addNonGroupExpense':
          result.addNonGroupExpense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense))!
              as GcreateNonGroupExpenseData_addNonGroupExpense);
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpenseSerializer
    implements
        StructuredSerializer<GcreateNonGroupExpenseData_addNonGroupExpense> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense,
    _$GcreateNonGroupExpenseData_addNonGroupExpense
  ];
  @override
  final String wireName = 'GcreateNonGroupExpenseData_addNonGroupExpense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_group)),
      'expense',
      serializers.serialize(object.expense,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcreateNonGroupExpenseData_addNonGroupExpenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_group))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_group);
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense);
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_groupSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group
  ];
  @override
  final String wireName = 'GcreateNonGroupExpenseData_addNonGroupExpense_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GcreateNonGroupExpenseData_addNonGroupExpense_group_members)
          ])),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_group_creator))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_group_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(
                    GcreateNonGroupExpenseData_addNonGroupExpense_group_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_creator> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group_creator,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_membersSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_group_members';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup)
          ])),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(
                    GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup)
              ]))! as BuiltList<Object?>);
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expenseSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits)
          ])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(
                    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount))!
              as GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountSerializer
    implements
        StructuredSerializer<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount,
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount
  ];
  @override
  final String wireName =
      'GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupDataSerializer
    implements StructuredSerializer<GsettleInGroupData> {
  @override
  final Iterable<Type> types = const [GsettleInGroupData, _$GsettleInGroupData];
  @override
  final String wireName = 'GsettleInGroupData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'settleInGroup',
      serializers.serialize(object.settleInGroup,
          specifiedType: const FullType(GsettleInGroupData_settleInGroup)),
    ];

    return result;
  }

  @override
  GsettleInGroupData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'settleInGroup':
          result.settleInGroup.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup))!
              as GsettleInGroupData_settleInGroup);
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroupSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup,
    _$GsettleInGroupData_settleInGroup
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GsettleInGroupData_settleInGroup_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_expense))!
              as GsettleInGroupData_settleInGroup_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_group))!
              as GsettleInGroupData_settleInGroup_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_creator))!
              as GsettleInGroupData_settleInGroup_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsettleInGroupData_settleInGroup_fromUser))!
              as GsettleInGroupData_settleInGroup_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_toUser))!
              as GsettleInGroupData_settleInGroup_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsettleInGroupData_settleInGroup_amount))!
              as GsettleInGroupData_settleInGroup_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_expenseSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_expense> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_expense,
    _$GsettleInGroupData_settleInGroup_expense
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GsettleInGroupData_settleInGroup_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsettleInGroupData_settleInGroup_expense_amount))!
              as GsettleInGroupData_settleInGroup_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_expense_amountSerializer
    implements
        StructuredSerializer<GsettleInGroupData_settleInGroup_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_expense_amount,
    _$GsettleInGroupData_settleInGroup_expense_amount
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsettleInGroupData_settleInGroup_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_groupSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_group> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_group,
    _$GsettleInGroupData_settleInGroup_group
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_creatorSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_creator> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_creator,
    _$GsettleInGroupData_settleInGroup_creator
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_fromUserSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_fromUser> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_fromUser,
    _$GsettleInGroupData_settleInGroup_fromUser
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_toUserSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_toUser> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_toUser,
    _$GsettleInGroupData_settleInGroup_toUser
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsettleInGroupData_settleInGroup_amountSerializer
    implements StructuredSerializer<GsettleInGroupData_settleInGroup_amount> {
  @override
  final Iterable<Type> types = const [
    GsettleInGroupData_settleInGroup_amount,
    _$GsettleInGroupData_settleInGroup_amount
  ];
  @override
  final String wireName = 'GsettleInGroupData_settleInGroup_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsettleInGroupData_settleInGroup_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsettleInGroupData_settleInGroup_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsettleInGroupData_settleInGroup_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserDataSerializer
    implements StructuredSerializer<GsimplifyUserData> {
  @override
  final Iterable<Type> types = const [GsimplifyUserData, _$GsimplifyUserData];
  @override
  final String wireName = 'GsimplifyUserData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GsimplifyUserData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'simplifyCrossGroup',
      serializers.serialize(object.simplifyCrossGroup,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GsimplifyUserData_simplifyCrossGroup)])),
    ];

    return result;
  }

  @override
  GsimplifyUserData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'simplifyCrossGroup':
          result.simplifyCrossGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GsimplifyUserData_simplifyCrossGroup)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroupSerializer
    implements StructuredSerializer<GsimplifyUserData_simplifyCrossGroup> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup,
    _$GsimplifyUserData_simplifyCrossGroup
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsimplifyUserData_simplifyCrossGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GsimplifyUserData_simplifyCrossGroup_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GsimplifyUserData_simplifyCrossGroup_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_expense))!
              as GsimplifyUserData_simplifyCrossGroup_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_group))!
              as GsimplifyUserData_simplifyCrossGroup_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_creator))!
              as GsimplifyUserData_simplifyCrossGroup_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_fromUser))!
              as GsimplifyUserData_simplifyCrossGroup_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_toUser))!
              as GsimplifyUserData_simplifyCrossGroup_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_amount))!
              as GsimplifyUserData_simplifyCrossGroup_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_expenseSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_expense> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_expense,
    _$GsimplifyUserData_simplifyCrossGroup_expense
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GsimplifyUserData_simplifyCrossGroup_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsimplifyUserData_simplifyCrossGroup_expense_amount))!
              as GsimplifyUserData_simplifyCrossGroup_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_expense_amountSerializer
    implements
        StructuredSerializer<
            GsimplifyUserData_simplifyCrossGroup_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_expense_amount,
    _$GsimplifyUserData_simplifyCrossGroup_expense_amount
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_groupSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_group> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_group,
    _$GsimplifyUserData_simplifyCrossGroup_group
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_creatorSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_creator> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_creator,
    _$GsimplifyUserData_simplifyCrossGroup_creator
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_fromUserSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_fromUser> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_fromUser,
    _$GsimplifyUserData_simplifyCrossGroup_fromUser
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_toUserSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_toUser> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_toUser,
    _$GsimplifyUserData_simplifyCrossGroup_toUser
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_amountSerializer
    implements
        StructuredSerializer<GsimplifyUserData_simplifyCrossGroup_amount> {
  @override
  final Iterable<Type> types = const [
    GsimplifyUserData_simplifyCrossGroup_amount,
    _$GsimplifyUserData_simplifyCrossGroup_amount
  ];
  @override
  final String wireName = 'GsimplifyUserData_simplifyCrossGroup_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsimplifyUserData_simplifyCrossGroup_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsimplifyUserData_simplifyCrossGroup_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserDataSerializer
    implements StructuredSerializer<GautoSettleWithUserData> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData,
    _$GautoSettleWithUserData
  ];
  @override
  final String wireName = 'GautoSettleWithUserData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GautoSettleWithUserData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'autoSettleWithUser',
      serializers.serialize(object.autoSettleWithUser,
          specifiedType: const FullType(BuiltList, const [
            const FullType(GautoSettleWithUserData_autoSettleWithUser)
          ])),
    ];

    return result;
  }

  @override
  GautoSettleWithUserData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GautoSettleWithUserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'autoSettleWithUser':
          result.autoSettleWithUser.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GautoSettleWithUserData_autoSettleWithUser)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUserSerializer
    implements
        StructuredSerializer<GautoSettleWithUserData_autoSettleWithUser> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser,
    _$GautoSettleWithUserData_autoSettleWithUser
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(GautoSettleWithUserData_autoSettleWithUser_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(
              GautoSettleWithUserData_autoSettleWithUser_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GautoSettleWithUserData_autoSettleWithUser_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GautoSettleWithUserData_autoSettleWithUser_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GautoSettleWithUserData_autoSettleWithUser_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GautoSettleWithUserData_autoSettleWithUser_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GautoSettleWithUserData_autoSettleWithUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_expense))!
              as GautoSettleWithUserData_autoSettleWithUser_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_group))!
              as GautoSettleWithUserData_autoSettleWithUser_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_creator))!
              as GautoSettleWithUserData_autoSettleWithUser_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_fromUser))!
              as GautoSettleWithUserData_autoSettleWithUser_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_toUser))!
              as GautoSettleWithUserData_autoSettleWithUser_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_amount))!
              as GautoSettleWithUserData_autoSettleWithUser_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_expenseSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_expense> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_expense,
    _$GautoSettleWithUserData_autoSettleWithUser_expense
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GautoSettleWithUserData_autoSettleWithUser_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GautoSettleWithUserData_autoSettleWithUser_expense_amount))!
              as GautoSettleWithUserData_autoSettleWithUser_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_expense_amountSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_expense_amount,
    _$GautoSettleWithUserData_autoSettleWithUser_expense_amount
  ];
  @override
  final String wireName =
      'GautoSettleWithUserData_autoSettleWithUser_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_groupSerializer
    implements
        StructuredSerializer<GautoSettleWithUserData_autoSettleWithUser_group> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_group,
    _$GautoSettleWithUserData_autoSettleWithUser_group
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_creatorSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_creator> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_creator,
    _$GautoSettleWithUserData_autoSettleWithUser_creator
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_fromUserSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_fromUser> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_fromUser,
    _$GautoSettleWithUserData_autoSettleWithUser_fromUser
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_toUserSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_toUser> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_toUser,
    _$GautoSettleWithUserData_autoSettleWithUser_toUser
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_amountSerializer
    implements
        StructuredSerializer<
            GautoSettleWithUserData_autoSettleWithUser_amount> {
  @override
  final Iterable<Type> types = const [
    GautoSettleWithUserData_autoSettleWithUser_amount,
    _$GautoSettleWithUserData_autoSettleWithUser_amount
  ];
  @override
  final String wireName = 'GautoSettleWithUserData_autoSettleWithUser_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GautoSettleWithUserData_autoSettleWithUser_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GautoSettleWithUserData_autoSettleWithUser_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserDataSerializer
    implements StructuredSerializer<GtransactionWithUserData> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData,
    _$GtransactionWithUserData
  ];
  @override
  final String wireName = 'GtransactionWithUserData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GtransactionWithUserData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'getTransactionsMixExpenseWithUser',
      serializers.serialize(object.getTransactionsMixExpenseWithUser,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GtransactionWithUserData_getTransactionsMixExpenseWithUser)
          ])),
    ];

    return result;
  }

  @override
  GtransactionWithUserData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GtransactionWithUserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'getTransactionsMixExpenseWithUser':
          result.getTransactionsMixExpenseWithUser.replace(
              serializers.deserialize(value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType(
                        GtransactionWithUserData_getTransactionsMixExpenseWithUser)
                  ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUserSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsMixExpenseWithUser,
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsMixExpenseWithUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsMixExpenseWithUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense)));
    }
    value = object.split;
    if (value != null) {
      result
        ..add('split')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GtransactionWithUserData_getTransactionsMixExpenseWithUser_split)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense))!
              as GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense);
          break;
        case 'split':
          result.split.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split))!
              as GtransactionWithUserData_getTransactionsMixExpenseWithUser_split);
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense,
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount))!
              as GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount,
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_split,
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser))!
              as GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser))!
              as GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount))!
              as GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser,
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser,
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountSerializer
    implements
        StructuredSerializer<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount> {
  @override
  final Iterable<Type> types = const [
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount,
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
  ];
  @override
  final String wireName =
      'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseDataSerializer
    implements StructuredSerializer<GtransactionMixExpenseData> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData,
    _$GtransactionMixExpenseData
  ];
  @override
  final String wireName = 'GtransactionMixExpenseData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GtransactionMixExpenseData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'getTransactionsMixExpenseWithGroup',
      serializers.serialize(object.getTransactionsMixExpenseWithGroup,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup)
          ])),
    ];

    return result;
  }

  @override
  GtransactionMixExpenseData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GtransactionMixExpenseDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'getTransactionsMixExpenseWithGroup':
          result.getTransactionsMixExpenseWithGroup.replace(serializers
              .deserialize(value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType(
                        GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup)
                  ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense)));
    }
    value = object.split;
    if (value != null) {
      result
        ..add('split')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense);
          break;
        case 'split':
          result.split.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split);
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount))!
              as GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountSerializer
    implements
        StructuredSerializer<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount> {
  @override
  final Iterable<Type> types = const [
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount,
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
  ];
  @override
  final String wireName =
      'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers,
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
          object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
      deserialize(Serializers serializers, Iterable<Object?> serialized,
          {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsetDefaultCurrencyDataSerializer
    implements StructuredSerializer<GsetDefaultCurrencyData> {
  @override
  final Iterable<Type> types = const [
    GsetDefaultCurrencyData,
    _$GsetDefaultCurrencyData
  ];
  @override
  final String wireName = 'GsetDefaultCurrencyData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsetDefaultCurrencyData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'setDefaultCurrency',
      serializers.serialize(object.setDefaultCurrency,
          specifiedType:
              const FullType(GsetDefaultCurrencyData_setDefaultCurrency)),
    ];

    return result;
  }

  @override
  GsetDefaultCurrencyData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsetDefaultCurrencyDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'setDefaultCurrency':
          result.setDefaultCurrency.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsetDefaultCurrencyData_setDefaultCurrency))!
              as GsetDefaultCurrencyData_setDefaultCurrency);
          break;
      }
    }

    return result.build();
  }
}

class _$GsetDefaultCurrencyData_setDefaultCurrencySerializer
    implements
        StructuredSerializer<GsetDefaultCurrencyData_setDefaultCurrency> {
  @override
  final Iterable<Type> types = const [
    GsetDefaultCurrencyData_setDefaultCurrency,
    _$GsetDefaultCurrencyData_setDefaultCurrency
  ];
  @override
  final String wireName = 'GsetDefaultCurrencyData_setDefaultCurrency';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsetDefaultCurrencyData_setDefaultCurrency object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'defaultCurrencyId',
      serializers.serialize(object.defaultCurrencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsetDefaultCurrencyData_setDefaultCurrency deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsetDefaultCurrencyData_setDefaultCurrencyBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'defaultCurrencyId':
          result.defaultCurrencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertDataSerializer
    implements StructuredSerializer<GcurrencyConvertData> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData,
    _$GcurrencyConvertData
  ];
  @override
  final String wireName = 'GcurrencyConvertData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GcurrencyConvertData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'convertCurrency',
      serializers.serialize(object.convertCurrency,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GcurrencyConvertData_convertCurrency)])),
    ];

    return result;
  }

  @override
  GcurrencyConvertData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrencyConvertDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'convertCurrency':
          result.convertCurrency.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GcurrencyConvertData_convertCurrency)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertData_convertCurrencySerializer
    implements StructuredSerializer<GcurrencyConvertData_convertCurrency> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData_convertCurrency,
    _$GcurrencyConvertData_convertCurrency
  ];
  @override
  final String wireName = 'GcurrencyConvertData_convertCurrency';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GcurrencyConvertData_convertCurrency object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(GcurrencyConvertData_convertCurrency_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GcurrencyConvertData_convertCurrency_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GcurrencyConvertData_convertCurrency_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GcurrencyConvertData_convertCurrency_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GcurrencyConvertData_convertCurrency_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GcurrencyConvertData_convertCurrency_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcurrencyConvertData_convertCurrency deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrencyConvertData_convertCurrencyBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcurrencyConvertData_convertCurrency_expense))!
              as GcurrencyConvertData_convertCurrency_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcurrencyConvertData_convertCurrency_group))!
              as GcurrencyConvertData_convertCurrency_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcurrencyConvertData_convertCurrency_creator))!
              as GcurrencyConvertData_convertCurrency_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcurrencyConvertData_convertCurrency_fromUser))!
              as GcurrencyConvertData_convertCurrency_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcurrencyConvertData_convertCurrency_toUser))!
              as GcurrencyConvertData_convertCurrency_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcurrencyConvertData_convertCurrency_amount))!
              as GcurrencyConvertData_convertCurrency_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertData_convertCurrency_expenseSerializer
    implements
        StructuredSerializer<GcurrencyConvertData_convertCurrency_expense> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData_convertCurrency_expense,
    _$GcurrencyConvertData_convertCurrency_expense
  ];
  @override
  final String wireName = 'GcurrencyConvertData_convertCurrency_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcurrencyConvertData_convertCurrency_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GcurrencyConvertData_convertCurrency_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcurrencyConvertData_convertCurrency_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrencyConvertData_convertCurrency_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GcurrencyConvertData_convertCurrency_expense_amount))!
              as GcurrencyConvertData_convertCurrency_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertData_convertCurrency_expense_amountSerializer
    implements
        StructuredSerializer<
            GcurrencyConvertData_convertCurrency_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData_convertCurrency_expense_amount,
    _$GcurrencyConvertData_convertCurrency_expense_amount
  ];
  @override
  final String wireName = 'GcurrencyConvertData_convertCurrency_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcurrencyConvertData_convertCurrency_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GcurrencyConvertData_convertCurrency_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GcurrencyConvertData_convertCurrency_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertData_convertCurrency_groupSerializer
    implements
        StructuredSerializer<GcurrencyConvertData_convertCurrency_group> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData_convertCurrency_group,
    _$GcurrencyConvertData_convertCurrency_group
  ];
  @override
  final String wireName = 'GcurrencyConvertData_convertCurrency_group';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcurrencyConvertData_convertCurrency_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcurrencyConvertData_convertCurrency_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrencyConvertData_convertCurrency_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertData_convertCurrency_creatorSerializer
    implements
        StructuredSerializer<GcurrencyConvertData_convertCurrency_creator> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData_convertCurrency_creator,
    _$GcurrencyConvertData_convertCurrency_creator
  ];
  @override
  final String wireName = 'GcurrencyConvertData_convertCurrency_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcurrencyConvertData_convertCurrency_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcurrencyConvertData_convertCurrency_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrencyConvertData_convertCurrency_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertData_convertCurrency_fromUserSerializer
    implements
        StructuredSerializer<GcurrencyConvertData_convertCurrency_fromUser> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData_convertCurrency_fromUser,
    _$GcurrencyConvertData_convertCurrency_fromUser
  ];
  @override
  final String wireName = 'GcurrencyConvertData_convertCurrency_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcurrencyConvertData_convertCurrency_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcurrencyConvertData_convertCurrency_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrencyConvertData_convertCurrency_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertData_convertCurrency_toUserSerializer
    implements
        StructuredSerializer<GcurrencyConvertData_convertCurrency_toUser> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData_convertCurrency_toUser,
    _$GcurrencyConvertData_convertCurrency_toUser
  ];
  @override
  final String wireName = 'GcurrencyConvertData_convertCurrency_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcurrencyConvertData_convertCurrency_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GcurrencyConvertData_convertCurrency_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrencyConvertData_convertCurrency_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GcurrencyConvertData_convertCurrency_amountSerializer
    implements
        StructuredSerializer<GcurrencyConvertData_convertCurrency_amount> {
  @override
  final Iterable<Type> types = const [
    GcurrencyConvertData_convertCurrency_amount,
    _$GcurrencyConvertData_convertCurrency_amount
  ];
  @override
  final String wireName = 'GcurrencyConvertData_convertCurrency_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GcurrencyConvertData_convertCurrency_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GcurrencyConvertData_convertCurrency_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GcurrencyConvertData_convertCurrency_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GchangeNameDataSerializer
    implements StructuredSerializer<GchangeNameData> {
  @override
  final Iterable<Type> types = const [GchangeNameData, _$GchangeNameData];
  @override
  final String wireName = 'GchangeNameData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GchangeNameData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'changeName',
      serializers.serialize(object.changeName,
          specifiedType: const FullType(GchangeNameData_changeName)),
    ];

    return result;
  }

  @override
  GchangeNameData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GchangeNameDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'changeName':
          result.changeName.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GchangeNameData_changeName))!
              as GchangeNameData_changeName);
          break;
      }
    }

    return result.build();
  }
}

class _$GchangeNameData_changeNameSerializer
    implements StructuredSerializer<GchangeNameData_changeName> {
  @override
  final Iterable<Type> types = const [
    GchangeNameData_changeName,
    _$GchangeNameData_changeName
  ];
  @override
  final String wireName = 'GchangeNameData_changeName';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GchangeNameData_changeName object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GchangeNameData_changeName deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GchangeNameData_changeNameBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetTransactionsDataSerializer
    implements StructuredSerializer<GgetTransactionsData> {
  @override
  final Iterable<Type> types = const [
    GgetTransactionsData,
    _$GgetTransactionsData
  ];
  @override
  final String wireName = 'GgetTransactionsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetTransactionsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'getTransactions',
      serializers.serialize(object.getTransactions,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GgetTransactionsData_getTransactions)])),
    ];

    return result;
  }

  @override
  GgetTransactionsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetTransactionsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'getTransactions':
          result.getTransactions.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgetTransactionsData_getTransactions)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GgetTransactionsData_getTransactionsSerializer
    implements StructuredSerializer<GgetTransactionsData_getTransactions> {
  @override
  final Iterable<Type> types = const [
    GgetTransactionsData_getTransactions,
    _$GgetTransactionsData_getTransactions
  ];
  @override
  final String wireName = 'GgetTransactionsData_getTransactions';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetTransactionsData_getTransactions object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GgetTransactionsData_getTransactions_expense)));
    }
    value = object.split;
    if (value != null) {
      result
        ..add('split')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GgetTransactionsData_getTransactions_split)));
    }
    return result;
  }

  @override
  GgetTransactionsData_getTransactions deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetTransactionsData_getTransactionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetTransactionsData_getTransactions_expense))!
              as GgetTransactionsData_getTransactions_expense);
          break;
        case 'split':
          result.split.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetTransactionsData_getTransactions_split))!
              as GgetTransactionsData_getTransactions_split);
          break;
      }
    }

    return result.build();
  }
}

class _$GgetTransactionsData_getTransactions_expenseSerializer
    implements
        StructuredSerializer<GgetTransactionsData_getTransactions_expense> {
  @override
  final Iterable<Type> types = const [
    GgetTransactionsData_getTransactions_expense,
    _$GgetTransactionsData_getTransactions_expense
  ];
  @override
  final String wireName = 'GgetTransactionsData_getTransactions_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GgetTransactionsData_getTransactions_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GgetTransactionsData_getTransactions_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetTransactionsData_getTransactions_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetTransactionsData_getTransactions_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetTransactionsData_getTransactions_expense_amount))!
              as GgetTransactionsData_getTransactions_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetTransactionsData_getTransactions_expense_amountSerializer
    implements
        StructuredSerializer<
            GgetTransactionsData_getTransactions_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GgetTransactionsData_getTransactions_expense_amount,
    _$GgetTransactionsData_getTransactions_expense_amount
  ];
  @override
  final String wireName = 'GgetTransactionsData_getTransactions_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GgetTransactionsData_getTransactions_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgetTransactionsData_getTransactions_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GgetTransactionsData_getTransactions_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetTransactionsData_getTransactions_splitSerializer
    implements
        StructuredSerializer<GgetTransactionsData_getTransactions_split> {
  @override
  final Iterable<Type> types = const [
    GgetTransactionsData_getTransactions_split,
    _$GgetTransactionsData_getTransactions_split
  ];
  @override
  final String wireName = 'GgetTransactionsData_getTransactions_split';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GgetTransactionsData_getTransactions_split object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(
              GgetTransactionsData_getTransactions_split_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(
              GgetTransactionsData_getTransactions_split_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GgetTransactionsData_getTransactions_split_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetTransactionsData_getTransactions_split deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetTransactionsData_getTransactions_splitBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetTransactionsData_getTransactions_split_fromUser))!
              as GgetTransactionsData_getTransactions_split_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetTransactionsData_getTransactions_split_toUser))!
              as GgetTransactionsData_getTransactions_split_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetTransactionsData_getTransactions_split_amount))!
              as GgetTransactionsData_getTransactions_split_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetTransactionsData_getTransactions_split_fromUserSerializer
    implements
        StructuredSerializer<
            GgetTransactionsData_getTransactions_split_fromUser> {
  @override
  final Iterable<Type> types = const [
    GgetTransactionsData_getTransactions_split_fromUser,
    _$GgetTransactionsData_getTransactions_split_fromUser
  ];
  @override
  final String wireName = 'GgetTransactionsData_getTransactions_split_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GgetTransactionsData_getTransactions_split_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetTransactionsData_getTransactions_split_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GgetTransactionsData_getTransactions_split_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetTransactionsData_getTransactions_split_toUserSerializer
    implements
        StructuredSerializer<
            GgetTransactionsData_getTransactions_split_toUser> {
  @override
  final Iterable<Type> types = const [
    GgetTransactionsData_getTransactions_split_toUser,
    _$GgetTransactionsData_getTransactions_split_toUser
  ];
  @override
  final String wireName = 'GgetTransactionsData_getTransactions_split_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GgetTransactionsData_getTransactions_split_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetTransactionsData_getTransactions_split_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GgetTransactionsData_getTransactions_split_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetTransactionsData_getTransactions_split_amountSerializer
    implements
        StructuredSerializer<
            GgetTransactionsData_getTransactions_split_amount> {
  @override
  final Iterable<Type> types = const [
    GgetTransactionsData_getTransactions_split_amount,
    _$GgetTransactionsData_getTransactions_split_amount
  ];
  @override
  final String wireName = 'GgetTransactionsData_getTransactions_split_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GgetTransactionsData_getTransactions_split_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgetTransactionsData_getTransactions_split_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GgetTransactionsData_getTransactions_split_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsetNotificationTokenDataSerializer
    implements StructuredSerializer<GsetNotificationTokenData> {
  @override
  final Iterable<Type> types = const [
    GsetNotificationTokenData,
    _$GsetNotificationTokenData
  ];
  @override
  final String wireName = 'GsetNotificationTokenData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsetNotificationTokenData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'setNotificationToken',
      serializers.serialize(object.setNotificationToken,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsetNotificationTokenData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsetNotificationTokenDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'setNotificationToken':
          result.setNotificationToken = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetImageUploadUrlDataSerializer
    implements StructuredSerializer<GgetImageUploadUrlData> {
  @override
  final Iterable<Type> types = const [
    GgetImageUploadUrlData,
    _$GgetImageUploadUrlData
  ];
  @override
  final String wireName = 'GgetImageUploadUrlData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetImageUploadUrlData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'uploadImage',
      serializers.serialize(object.uploadImage,
          specifiedType: const FullType(GgetImageUploadUrlData_uploadImage)),
    ];

    return result;
  }

  @override
  GgetImageUploadUrlData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetImageUploadUrlDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'uploadImage':
          result.uploadImage.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgetImageUploadUrlData_uploadImage))!
              as GgetImageUploadUrlData_uploadImage);
          break;
      }
    }

    return result.build();
  }
}

class _$GgetImageUploadUrlData_uploadImageSerializer
    implements StructuredSerializer<GgetImageUploadUrlData_uploadImage> {
  @override
  final Iterable<Type> types = const [
    GgetImageUploadUrlData_uploadImage,
    _$GgetImageUploadUrlData_uploadImage
  ];
  @override
  final String wireName = 'GgetImageUploadUrlData_uploadImage';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetImageUploadUrlData_uploadImage object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'presignedUrl',
      serializers.serialize(object.presignedUrl,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgetImageUploadUrlData_uploadImage deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetImageUploadUrlData_uploadImageBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'presignedUrl':
          result.presignedUrl = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetImageViewUrlDataSerializer
    implements StructuredSerializer<GgetImageViewUrlData> {
  @override
  final Iterable<Type> types = const [
    GgetImageViewUrlData,
    _$GgetImageViewUrlData
  ];
  @override
  final String wireName = 'GgetImageViewUrlData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetImageViewUrlData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'imageUrl',
      serializers.serialize(object.imageUrl,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgetImageViewUrlData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetImageViewUrlDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'imageUrl':
          result.imageUrl = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetExpenseDataSerializer
    implements StructuredSerializer<GgetExpenseData> {
  @override
  final Iterable<Type> types = const [GgetExpenseData, _$GgetExpenseData];
  @override
  final String wireName = 'GgetExpenseData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GgetExpenseData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'expenseById',
      serializers.serialize(object.expenseById,
          specifiedType: const FullType(GgetExpenseData_expenseById)),
    ];

    return result;
  }

  @override
  GgetExpenseData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetExpenseDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expenseById':
          result.expenseById.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GgetExpenseData_expenseById))!
              as GgetExpenseData_expenseById);
          break;
      }
    }

    return result.build();
  }
}

class _$GgetExpenseData_expenseByIdSerializer
    implements StructuredSerializer<GgetExpenseData_expenseById> {
  @override
  final Iterable<Type> types = const [
    GgetExpenseData_expenseById,
    _$GgetExpenseData_expenseById
  ];
  @override
  final String wireName = 'GgetExpenseData_expenseById';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetExpenseData_expenseById object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GgetExpenseData_expenseById_creator)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GgetExpenseData_expenseById_splits)])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GgetExpenseData_expenseById_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetExpenseData_expenseById deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetExpenseData_expenseByIdBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgetExpenseData_expenseById_creator))!
              as GgetExpenseData_expenseById_creator);
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GgetExpenseData_expenseById_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GgetExpenseData_expenseById_amount))!
              as GgetExpenseData_expenseById_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetExpenseData_expenseById_creatorSerializer
    implements StructuredSerializer<GgetExpenseData_expenseById_creator> {
  @override
  final Iterable<Type> types = const [
    GgetExpenseData_expenseById_creator,
    _$GgetExpenseData_expenseById_creator
  ];
  @override
  final String wireName = 'GgetExpenseData_expenseById_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetExpenseData_expenseById_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetExpenseData_expenseById_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetExpenseData_expenseById_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetExpenseData_expenseById_splitsSerializer
    implements StructuredSerializer<GgetExpenseData_expenseById_splits> {
  @override
  final Iterable<Type> types = const [
    GgetExpenseData_expenseById_splits,
    _$GgetExpenseData_expenseById_splits
  ];
  @override
  final String wireName = 'GgetExpenseData_expenseById_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetExpenseData_expenseById_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GgetExpenseData_expenseById_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GgetExpenseData_expenseById_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GgetExpenseData_expenseById_splits_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetExpenseData_expenseById_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetExpenseData_expenseById_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetExpenseData_expenseById_splits_fromUser))!
              as GgetExpenseData_expenseById_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetExpenseData_expenseById_splits_toUser))!
              as GgetExpenseData_expenseById_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GgetExpenseData_expenseById_splits_amount))!
              as GgetExpenseData_expenseById_splits_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetExpenseData_expenseById_splits_fromUserSerializer
    implements
        StructuredSerializer<GgetExpenseData_expenseById_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GgetExpenseData_expenseById_splits_fromUser,
    _$GgetExpenseData_expenseById_splits_fromUser
  ];
  @override
  final String wireName = 'GgetExpenseData_expenseById_splits_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GgetExpenseData_expenseById_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetExpenseData_expenseById_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetExpenseData_expenseById_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetExpenseData_expenseById_splits_toUserSerializer
    implements StructuredSerializer<GgetExpenseData_expenseById_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GgetExpenseData_expenseById_splits_toUser,
    _$GgetExpenseData_expenseById_splits_toUser
  ];
  @override
  final String wireName = 'GgetExpenseData_expenseById_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetExpenseData_expenseById_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GgetExpenseData_expenseById_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetExpenseData_expenseById_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetExpenseData_expenseById_splits_amountSerializer
    implements StructuredSerializer<GgetExpenseData_expenseById_splits_amount> {
  @override
  final Iterable<Type> types = const [
    GgetExpenseData_expenseById_splits_amount,
    _$GgetExpenseData_expenseById_splits_amount
  ];
  @override
  final String wireName = 'GgetExpenseData_expenseById_splits_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetExpenseData_expenseById_splits_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgetExpenseData_expenseById_splits_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetExpenseData_expenseById_splits_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GgetExpenseData_expenseById_amountSerializer
    implements StructuredSerializer<GgetExpenseData_expenseById_amount> {
  @override
  final Iterable<Type> types = const [
    GgetExpenseData_expenseById_amount,
    _$GgetExpenseData_expenseById_amount
  ];
  @override
  final String wireName = 'GgetExpenseData_expenseById_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GgetExpenseData_expenseById_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GgetExpenseData_expenseById_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GgetExpenseData_expenseById_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidDataSerializer
    implements StructuredSerializer<GsplitFromidData> {
  @override
  final Iterable<Type> types = const [GsplitFromidData, _$GsplitFromidData];
  @override
  final String wireName = 'GsplitFromidData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GsplitFromidData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'splitById',
      serializers.serialize(object.splitById,
          specifiedType: const FullType(GsplitFromidData_splitById)),
    ];

    return result;
  }

  @override
  GsplitFromidData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'splitById':
          result.splitById.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GsplitFromidData_splitById))!
              as GsplitFromidData_splitById);
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitByIdSerializer
    implements StructuredSerializer<GsplitFromidData_splitById> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById,
    _$GsplitFromidData_splitById
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'siblings',
      serializers.serialize(object.siblings,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GsplitFromidData_splitById_siblings)])),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GsplitFromidData_splitById_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GsplitFromidData_splitById_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GsplitFromidData_splitById_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GsplitFromidData_splitById_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GsplitFromidData_splitById_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GsplitFromidData_splitById_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitByIdBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'siblings':
          result.siblings.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GsplitFromidData_splitById_siblings)
              ]))! as BuiltList<Object?>);
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsplitFromidData_splitById_expense))!
              as GsplitFromidData_splitById_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsplitFromidData_splitById_group))!
              as GsplitFromidData_splitById_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsplitFromidData_splitById_creator))!
              as GsplitFromidData_splitById_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsplitFromidData_splitById_fromUser))!
              as GsplitFromidData_splitById_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsplitFromidData_splitById_toUser))!
              as GsplitFromidData_splitById_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsplitFromidData_splitById_amount))!
              as GsplitFromidData_splitById_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_siblingsSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_siblings> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_siblings,
    _$GsplitFromidData_splitById_siblings
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_siblings';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_siblings object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType:
              const FullType(GsplitFromidData_splitById_siblings_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GsplitFromidData_splitById_siblings_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GsplitFromidData_splitById_siblings_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GsplitFromidData_splitById_siblings_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GsplitFromidData_splitById_siblings_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GsplitFromidData_splitById_siblings_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_siblings deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_siblingsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromidData_splitById_siblings_expense))!
              as GsplitFromidData_splitById_siblings_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromidData_splitById_siblings_group))!
              as GsplitFromidData_splitById_siblings_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromidData_splitById_siblings_creator))!
              as GsplitFromidData_splitById_siblings_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromidData_splitById_siblings_fromUser))!
              as GsplitFromidData_splitById_siblings_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromidData_splitById_siblings_toUser))!
              as GsplitFromidData_splitById_siblings_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromidData_splitById_siblings_amount))!
              as GsplitFromidData_splitById_siblings_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_siblings_expenseSerializer
    implements
        StructuredSerializer<GsplitFromidData_splitById_siblings_expense> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_siblings_expense,
    _$GsplitFromidData_splitById_siblings_expense
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_siblings_expense';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsplitFromidData_splitById_siblings_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GsplitFromidData_splitById_siblings_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_siblings_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_siblings_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromidData_splitById_siblings_expense_amount))!
              as GsplitFromidData_splitById_siblings_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_siblings_expense_amountSerializer
    implements
        StructuredSerializer<
            GsplitFromidData_splitById_siblings_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_siblings_expense_amount,
    _$GsplitFromidData_splitById_siblings_expense_amount
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_siblings_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsplitFromidData_splitById_siblings_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsplitFromidData_splitById_siblings_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GsplitFromidData_splitById_siblings_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_siblings_groupSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_siblings_group> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_siblings_group,
    _$GsplitFromidData_splitById_siblings_group
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_siblings_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_siblings_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_siblings_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_siblings_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_siblings_creatorSerializer
    implements
        StructuredSerializer<GsplitFromidData_splitById_siblings_creator> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_siblings_creator,
    _$GsplitFromidData_splitById_siblings_creator
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_siblings_creator';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsplitFromidData_splitById_siblings_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_siblings_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_siblings_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_siblings_fromUserSerializer
    implements
        StructuredSerializer<GsplitFromidData_splitById_siblings_fromUser> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_siblings_fromUser,
    _$GsplitFromidData_splitById_siblings_fromUser
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_siblings_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsplitFromidData_splitById_siblings_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_siblings_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_siblings_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_siblings_toUserSerializer
    implements
        StructuredSerializer<GsplitFromidData_splitById_siblings_toUser> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_siblings_toUser,
    _$GsplitFromidData_splitById_siblings_toUser
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_siblings_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsplitFromidData_splitById_siblings_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_siblings_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_siblings_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_siblings_amountSerializer
    implements
        StructuredSerializer<GsplitFromidData_splitById_siblings_amount> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_siblings_amount,
    _$GsplitFromidData_splitById_siblings_amount
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_siblings_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GsplitFromidData_splitById_siblings_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsplitFromidData_splitById_siblings_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_siblings_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_expenseSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_expense> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_expense,
    _$GsplitFromidData_splitById_expense
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GsplitFromidData_splitById_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromidData_splitById_expense_amount))!
              as GsplitFromidData_splitById_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_expense_amountSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_expense_amount,
    _$GsplitFromidData_splitById_expense_amount
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_expense_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsplitFromidData_splitById_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_groupSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_group> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_group,
    _$GsplitFromidData_splitById_group
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_creatorSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_creator> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_creator,
    _$GsplitFromidData_splitById_creator
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_fromUserSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_fromUser> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_fromUser,
    _$GsplitFromidData_splitById_fromUser
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_toUserSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_toUser> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_toUser,
    _$GsplitFromidData_splitById_toUser
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromidData_splitById_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromidData_splitById_amountSerializer
    implements StructuredSerializer<GsplitFromidData_splitById_amount> {
  @override
  final Iterable<Type> types = const [
    GsplitFromidData_splitById_amount,
    _$GsplitFromidData_splitById_amount
  ];
  @override
  final String wireName = 'GsplitFromidData_splitById_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromidData_splitById_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsplitFromidData_splitById_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromidData_splitById_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromGroupDataSerializer
    implements StructuredSerializer<GsplitFromGroupData> {
  @override
  final Iterable<Type> types = const [
    GsplitFromGroupData,
    _$GsplitFromGroupData
  ];
  @override
  final String wireName = 'GsplitFromGroupData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromGroupData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'splitsByPart',
      serializers.serialize(object.splitsByPart,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GsplitFromGroupData_splitsByPart)])),
    ];

    return result;
  }

  @override
  GsplitFromGroupData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromGroupDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'splitsByPart':
          result.splitsByPart.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GsplitFromGroupData_splitsByPart)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromGroupData_splitsByPartSerializer
    implements StructuredSerializer<GsplitFromGroupData_splitsByPart> {
  @override
  final Iterable<Type> types = const [
    GsplitFromGroupData_splitsByPart,
    _$GsplitFromGroupData_splitsByPart
  ];
  @override
  final String wireName = 'GsplitFromGroupData_splitsByPart';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromGroupData_splitsByPart object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GsplitFromGroupData_splitsByPart_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GsplitFromGroupData_splitsByPart_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GsplitFromGroupData_splitsByPart_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromGroupData_splitsByPart deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromGroupData_splitsByPartBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GsplitFromGroupData_splitsByPart_fromUser))!
              as GsplitFromGroupData_splitsByPart_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsplitFromGroupData_splitsByPart_toUser))!
              as GsplitFromGroupData_splitsByPart_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GsplitFromGroupData_splitsByPart_amount))!
              as GsplitFromGroupData_splitsByPart_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromGroupData_splitsByPart_fromUserSerializer
    implements StructuredSerializer<GsplitFromGroupData_splitsByPart_fromUser> {
  @override
  final Iterable<Type> types = const [
    GsplitFromGroupData_splitsByPart_fromUser,
    _$GsplitFromGroupData_splitsByPart_fromUser
  ];
  @override
  final String wireName = 'GsplitFromGroupData_splitsByPart_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromGroupData_splitsByPart_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromGroupData_splitsByPart_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromGroupData_splitsByPart_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromGroupData_splitsByPart_toUserSerializer
    implements StructuredSerializer<GsplitFromGroupData_splitsByPart_toUser> {
  @override
  final Iterable<Type> types = const [
    GsplitFromGroupData_splitsByPart_toUser,
    _$GsplitFromGroupData_splitsByPart_toUser
  ];
  @override
  final String wireName = 'GsplitFromGroupData_splitsByPart_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromGroupData_splitsByPart_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GsplitFromGroupData_splitsByPart_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromGroupData_splitsByPart_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GsplitFromGroupData_splitsByPart_amountSerializer
    implements StructuredSerializer<GsplitFromGroupData_splitsByPart_amount> {
  @override
  final Iterable<Type> types = const [
    GsplitFromGroupData_splitsByPart_amount,
    _$GsplitFromGroupData_splitsByPart_amount
  ];
  @override
  final String wireName = 'GsplitFromGroupData_splitsByPart_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GsplitFromGroupData_splitsByPart_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GsplitFromGroupData_splitsByPart_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GsplitFromGroupData_splitsByPart_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GexpenseSummaryCategorisedDataSerializer
    implements StructuredSerializer<GexpenseSummaryCategorisedData> {
  @override
  final Iterable<Type> types = const [
    GexpenseSummaryCategorisedData,
    _$GexpenseSummaryCategorisedData
  ];
  @override
  final String wireName = 'GexpenseSummaryCategorisedData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GexpenseSummaryCategorisedData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'expenseSummaryByCategory',
      serializers.serialize(object.expenseSummaryByCategory,
          specifiedType: const FullType(BuiltList, const [
            const FullType(
                GexpenseSummaryCategorisedData_expenseSummaryByCategory)
          ])),
    ];

    return result;
  }

  @override
  GexpenseSummaryCategorisedData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GexpenseSummaryCategorisedDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expenseSummaryByCategory':
          result.expenseSummaryByCategory.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(
                    GexpenseSummaryCategorisedData_expenseSummaryByCategory)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GexpenseSummaryCategorisedData_expenseSummaryByCategorySerializer
    implements
        StructuredSerializer<
            GexpenseSummaryCategorisedData_expenseSummaryByCategory> {
  @override
  final Iterable<Type> types = const [
    GexpenseSummaryCategorisedData_expenseSummaryByCategory,
    _$GexpenseSummaryCategorisedData_expenseSummaryByCategory
  ];
  @override
  final String wireName =
      'GexpenseSummaryCategorisedData_expenseSummaryByCategory';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GexpenseSummaryCategorisedData_expenseSummaryByCategory object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(
              GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount)),
    ];

    return result;
  }

  @override
  GexpenseSummaryCategorisedData_expenseSummaryByCategory deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount))!
              as GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount);
          break;
      }
    }

    return result.build();
  }
}

class _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountSerializer
    implements
        StructuredSerializer<
            GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount> {
  @override
  final Iterable<Type> types = const [
    GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount,
    _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount
  ];
  @override
  final String wireName =
      'GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GUploadFieldsDataSerializer
    implements StructuredSerializer<GUploadFieldsData> {
  @override
  final Iterable<Type> types = const [GUploadFieldsData, _$GUploadFieldsData];
  @override
  final String wireName = 'GUploadFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUploadFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'presignedUrl',
      serializers.serialize(object.presignedUrl,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GUploadFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUploadFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'presignedUrl':
          result.presignedUrl = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserFieldsDataSerializer
    implements StructuredSerializer<GUserFieldsData> {
  @override
  final Iterable<Type> types = const [GUserFieldsData, _$GUserFieldsData];
  @override
  final String wireName = 'GUserFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUserFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GAmountFieldsDataSerializer
    implements StructuredSerializer<GAmountFieldsData> {
  @override
  final Iterable<Type> types = const [GAmountFieldsData, _$GAmountFieldsData];
  @override
  final String wireName = 'GAmountFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAmountFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GAmountFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAmountFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCurrencyFieldsDataSerializer
    implements StructuredSerializer<GCurrencyFieldsData> {
  @override
  final Iterable<Type> types = const [
    GCurrencyFieldsData,
    _$GCurrencyFieldsData
  ];
  @override
  final String wireName = 'GCurrencyFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCurrencyFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'rate',
      serializers.serialize(object.rate, specifiedType: const FullType(double)),
      'symbol',
      serializers.serialize(object.symbol,
          specifiedType: const FullType(String)),
      'displayName',
      serializers.serialize(object.displayName,
          specifiedType: const FullType(String)),
      'decimals',
      serializers.serialize(object.decimals,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GCurrencyFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCurrencyFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'rate':
          result.rate = serializers.deserialize(value,
              specifiedType: const FullType(double))! as double;
          break;
        case 'symbol':
          result.symbol = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'decimals':
          result.decimals = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserPaysFieldsDataSerializer
    implements StructuredSerializer<GUserPaysFieldsData> {
  @override
  final Iterable<Type> types = const [
    GUserPaysFieldsData,
    _$GUserPaysFieldsData
  ];
  @override
  final String wireName = 'GUserPaysFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserPaysFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
      'upiIds',
      serializers.serialize(object.upiIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'owes',
      serializers.serialize(object.owes,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GUserPaysFieldsData_owes)])),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUserPaysFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserPaysFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'upiIds':
          result.upiIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'owes':
          result.owes.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserPaysFieldsData_owes)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserPaysFieldsData_owesSerializer
    implements StructuredSerializer<GUserPaysFieldsData_owes> {
  @override
  final Iterable<Type> types = const [
    GUserPaysFieldsData_owes,
    _$GUserPaysFieldsData_owes
  ];
  @override
  final String wireName = 'GUserPaysFieldsData_owes';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserPaysFieldsData_owes object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GUserPaysFieldsData_owes_amount)),
    ];

    return result;
  }

  @override
  GUserPaysFieldsData_owes deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserPaysFieldsData_owesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GUserPaysFieldsData_owes_amount))!
              as GUserPaysFieldsData_owes_amount);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserPaysFieldsData_owes_amountSerializer
    implements StructuredSerializer<GUserPaysFieldsData_owes_amount> {
  @override
  final Iterable<Type> types = const [
    GUserPaysFieldsData_owes_amount,
    _$GUserPaysFieldsData_owes_amount
  ];
  @override
  final String wireName = 'GUserPaysFieldsData_owes_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserPaysFieldsData_owes_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GUserPaysFieldsData_owes_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserPaysFieldsData_owes_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupBasicDataSerializer
    implements StructuredSerializer<GGroupBasicData> {
  @override
  final Iterable<Type> types = const [GGroupBasicData, _$GGroupBasicData];
  @override
  final String wireName = 'GGroupBasicData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GGroupBasicData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupBasicData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupBasicDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsDataSerializer
    implements StructuredSerializer<GGroupFieldsData> {
  @override
  final Iterable<Type> types = const [GGroupFieldsData, _$GGroupFieldsData];
  @override
  final String wireName = 'GGroupFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GGroupFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GGroupFieldsData_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GGroupFieldsData_members)])),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GGroupFieldsData_creator))!
              as GGroupFieldsData_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupFieldsData_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsData_creatorSerializer
    implements StructuredSerializer<GGroupFieldsData_creator> {
  @override
  final Iterable<Type> types = const [
    GGroupFieldsData_creator,
    _$GGroupFieldsData_creator
  ];
  @override
  final String wireName = 'GGroupFieldsData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupFieldsData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupFieldsData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsData_membersSerializer
    implements StructuredSerializer<GGroupFieldsData_members> {
  @override
  final Iterable<Type> types = const [
    GGroupFieldsData_members,
    _$GGroupFieldsData_members
  ];
  @override
  final String wireName = 'GGroupFieldsData_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupFieldsData_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GGroupFieldsData_members_owedInGroup)])),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GGroupFieldsData_members_member)),
    ];

    return result;
  }

  @override
  GGroupFieldsData_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsData_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupFieldsData_members_owedInGroup)
              ]))! as BuiltList<Object?>);
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupFieldsData_members_member))!
              as GGroupFieldsData_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsData_members_owedInGroupSerializer
    implements StructuredSerializer<GGroupFieldsData_members_owedInGroup> {
  @override
  final Iterable<Type> types = const [
    GGroupFieldsData_members_owedInGroup,
    _$GGroupFieldsData_members_owedInGroup
  ];
  @override
  final String wireName = 'GGroupFieldsData_members_owedInGroup';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupFieldsData_members_owedInGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGroupFieldsData_members_owedInGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsData_members_owedInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupFieldsData_members_memberSerializer
    implements StructuredSerializer<GGroupFieldsData_members_member> {
  @override
  final Iterable<Type> types = const [
    GGroupFieldsData_members_member,
    _$GGroupFieldsData_members_member
  ];
  @override
  final String wireName = 'GGroupFieldsData_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupFieldsData_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupFieldsData_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupFieldsData_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseBasicDataSerializer
    implements StructuredSerializer<GExpenseBasicData> {
  @override
  final Iterable<Type> types = const [GExpenseBasicData, _$GExpenseBasicData];
  @override
  final String wireName = 'GExpenseBasicData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GExpenseBasicData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GExpenseBasicData_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseBasicData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseBasicDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GExpenseBasicData_amount))!
              as GExpenseBasicData_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseBasicData_amountSerializer
    implements StructuredSerializer<GExpenseBasicData_amount> {
  @override
  final Iterable<Type> types = const [
    GExpenseBasicData_amount,
    _$GExpenseBasicData_amount
  ];
  @override
  final String wireName = 'GExpenseBasicData_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseBasicData_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GExpenseBasicData_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseBasicData_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsDataSerializer
    implements StructuredSerializer<GExpenseFieldsData> {
  @override
  final Iterable<Type> types = const [GExpenseFieldsData, _$GExpenseFieldsData];
  @override
  final String wireName = 'GExpenseFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GExpenseFieldsData_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GExpenseFieldsData_creator)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GExpenseFieldsData_splits)])),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GExpenseFieldsData_amount))!
              as GExpenseFieldsData_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GExpenseFieldsData_creator))!
              as GExpenseFieldsData_creator);
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GExpenseFieldsData_splits)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_amountSerializer
    implements StructuredSerializer<GExpenseFieldsData_amount> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_amount,
    _$GExpenseFieldsData_amount
  ];
  @override
  final String wireName = 'GExpenseFieldsData_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GExpenseFieldsData_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_creatorSerializer
    implements StructuredSerializer<GExpenseFieldsData_creator> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_creator,
    _$GExpenseFieldsData_creator
  ];
  @override
  final String wireName = 'GExpenseFieldsData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_splitsSerializer
    implements StructuredSerializer<GExpenseFieldsData_splits> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_splits,
    _$GExpenseFieldsData_splits
  ];
  @override
  final String wireName = 'GExpenseFieldsData_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GExpenseFieldsData_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GExpenseFieldsData_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GExpenseFieldsData_splits_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseFieldsData_splits_fromUser))!
              as GExpenseFieldsData_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseFieldsData_splits_toUser))!
              as GExpenseFieldsData_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseFieldsData_splits_amount))!
              as GExpenseFieldsData_splits_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_splits_fromUserSerializer
    implements StructuredSerializer<GExpenseFieldsData_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_splits_fromUser,
    _$GExpenseFieldsData_splits_fromUser
  ];
  @override
  final String wireName = 'GExpenseFieldsData_splits_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_splits_toUserSerializer
    implements StructuredSerializer<GExpenseFieldsData_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_splits_toUser,
    _$GExpenseFieldsData_splits_toUser
  ];
  @override
  final String wireName = 'GExpenseFieldsData_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseFieldsData_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseFieldsData_splits_amountSerializer
    implements StructuredSerializer<GExpenseFieldsData_splits_amount> {
  @override
  final Iterable<Type> types = const [
    GExpenseFieldsData_splits_amount,
    _$GExpenseFieldsData_splits_amount
  ];
  @override
  final String wireName = 'GExpenseFieldsData_splits_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseFieldsData_splits_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GExpenseFieldsData_splits_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseFieldsData_splits_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsDataSerializer
    implements StructuredSerializer<GNewExpenseFieldsData> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData,
    _$GNewExpenseFieldsData
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GNewExpenseFieldsData_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GNewExpenseFieldsData_splits)])),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GNewExpenseFieldsData_amount))!
              as GNewExpenseFieldsData_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GNewExpenseFieldsData_splits)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_amountSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_amount> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_amount,
    _$GNewExpenseFieldsData_amount
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GNewExpenseFieldsData_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splitsSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits,
    _$GNewExpenseFieldsData_splits
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GNewExpenseFieldsData_splits_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GNewExpenseFieldsData_splits_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_expense))!
              as GNewExpenseFieldsData_splits_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_group))!
              as GNewExpenseFieldsData_splits_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_creator))!
              as GNewExpenseFieldsData_splits_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_fromUser))!
              as GNewExpenseFieldsData_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_toUser))!
              as GNewExpenseFieldsData_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GNewExpenseFieldsData_splits_amount))!
              as GNewExpenseFieldsData_splits_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_expenseSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_expense> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_expense,
    _$GNewExpenseFieldsData_splits_expense
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GNewExpenseFieldsData_splits_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GNewExpenseFieldsData_splits_expense_amount))!
              as GNewExpenseFieldsData_splits_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_expense_amountSerializer
    implements
        StructuredSerializer<GNewExpenseFieldsData_splits_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_expense_amount,
    _$GNewExpenseFieldsData_splits_expense_amount
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GNewExpenseFieldsData_splits_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GNewExpenseFieldsData_splits_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_groupSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_group> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_group,
    _$GNewExpenseFieldsData_splits_group
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_creatorSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_creator> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_creator,
    _$GNewExpenseFieldsData_splits_creator
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_fromUserSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_fromUser,
    _$GNewExpenseFieldsData_splits_fromUser
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_toUserSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_toUser,
    _$GNewExpenseFieldsData_splits_toUser
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNewExpenseFieldsData_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GNewExpenseFieldsData_splits_amountSerializer
    implements StructuredSerializer<GNewExpenseFieldsData_splits_amount> {
  @override
  final Iterable<Type> types = const [
    GNewExpenseFieldsData_splits_amount,
    _$GNewExpenseFieldsData_splits_amount
  ];
  @override
  final String wireName = 'GNewExpenseFieldsData_splits_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNewExpenseFieldsData_splits_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GNewExpenseFieldsData_splits_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNewExpenseFieldsData_splits_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigFieldsDataSerializer
    implements StructuredSerializer<GConfigFieldsData> {
  @override
  final Iterable<Type> types = const [GConfigFieldsData, _$GConfigFieldsData];
  @override
  final String wireName = 'GConfigFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GConfigFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'defaultCurrencyId',
      serializers.serialize(object.defaultCurrencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GConfigFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConfigFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'defaultCurrencyId':
          result.defaultCurrencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsBasicsDataSerializer
    implements StructuredSerializer<GSplitFieldsBasicsData> {
  @override
  final Iterable<Type> types = const [
    GSplitFieldsBasicsData,
    _$GSplitFieldsBasicsData
  ];
  @override
  final String wireName = 'GSplitFieldsBasicsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitFieldsBasicsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GSplitFieldsBasicsData_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitFieldsBasicsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsBasicsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitFieldsBasicsData_amount))!
              as GSplitFieldsBasicsData_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsBasicsData_amountSerializer
    implements StructuredSerializer<GSplitFieldsBasicsData_amount> {
  @override
  final Iterable<Type> types = const [
    GSplitFieldsBasicsData_amount,
    _$GSplitFieldsBasicsData_amount
  ];
  @override
  final String wireName = 'GSplitFieldsBasicsData_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitFieldsBasicsData_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitFieldsBasicsData_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsBasicsData_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsDataSerializer
    implements StructuredSerializer<GSplitFieldsData> {
  @override
  final Iterable<Type> types = const [GSplitFieldsData, _$GSplitFieldsData];
  @override
  final String wireName = 'GSplitFieldsData';

  @override
  Iterable<Object?> serialize(Serializers serializers, GSplitFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GSplitFieldsData_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GSplitFieldsData_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GSplitFieldsData_toUser)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitFieldsData_amount))!
              as GSplitFieldsData_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitFieldsData_fromUser))!
              as GSplitFieldsData_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitFieldsData_toUser))!
              as GSplitFieldsData_toUser);
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsData_amountSerializer
    implements StructuredSerializer<GSplitFieldsData_amount> {
  @override
  final Iterable<Type> types = const [
    GSplitFieldsData_amount,
    _$GSplitFieldsData_amount
  ];
  @override
  final String wireName = 'GSplitFieldsData_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitFieldsData_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitFieldsData_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsData_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsData_fromUserSerializer
    implements StructuredSerializer<GSplitFieldsData_fromUser> {
  @override
  final Iterable<Type> types = const [
    GSplitFieldsData_fromUser,
    _$GSplitFieldsData_fromUser
  ];
  @override
  final String wireName = 'GSplitFieldsData_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitFieldsData_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitFieldsData_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsData_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitFieldsData_toUserSerializer
    implements StructuredSerializer<GSplitFieldsData_toUser> {
  @override
  final Iterable<Type> types = const [
    GSplitFieldsData_toUser,
    _$GSplitFieldsData_toUser
  ];
  @override
  final String wireName = 'GSplitFieldsData_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitFieldsData_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitFieldsData_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitFieldsData_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsDataSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData,
    _$GSplitTransactionFieldsData
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GSplitTransactionFieldsData_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GSplitTransactionFieldsData_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GSplitTransactionFieldsData_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GSplitTransactionFieldsData_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GSplitTransactionFieldsData_creator)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GSplitTransactionFieldsData_expense)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_fromUser))!
              as GSplitTransactionFieldsData_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_toUser))!
              as GSplitTransactionFieldsData_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_amount))!
              as GSplitTransactionFieldsData_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_expense))!
              as GSplitTransactionFieldsData_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_group))!
              as GSplitTransactionFieldsData_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitTransactionFieldsData_creator))!
              as GSplitTransactionFieldsData_creator);
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_fromUserSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_fromUser> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_fromUser,
    _$GSplitTransactionFieldsData_fromUser
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_toUserSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_toUser> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_toUser,
    _$GSplitTransactionFieldsData_toUser
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_amountSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_amount> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_amount,
    _$GSplitTransactionFieldsData_amount
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitTransactionFieldsData_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_expenseSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_expense> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_expense,
    _$GSplitTransactionFieldsData_expense
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GSplitTransactionFieldsData_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GSplitTransactionFieldsData_expense_amount))!
              as GSplitTransactionFieldsData_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_expense_amountSerializer
    implements
        StructuredSerializer<GSplitTransactionFieldsData_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_expense_amount,
    _$GSplitTransactionFieldsData_expense_amount
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GSplitTransactionFieldsData_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitTransactionFieldsData_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_groupSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_group> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_group,
    _$GSplitTransactionFieldsData_group
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitTransactionFieldsData_creatorSerializer
    implements StructuredSerializer<GSplitTransactionFieldsData_creator> {
  @override
  final Iterable<Type> types = const [
    GSplitTransactionFieldsData_creator,
    _$GSplitTransactionFieldsData_creator
  ];
  @override
  final String wireName = 'GSplitTransactionFieldsData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitTransactionFieldsData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitTransactionFieldsData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitTransactionFieldsData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsDataSerializer
    implements StructuredSerializer<GSplitWithSiblingsData> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData,
    _$GSplitWithSiblingsData
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GSplitWithSiblingsData_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GSplitWithSiblingsData_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType: const FullType(GSplitWithSiblingsData_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType: const FullType(GSplitWithSiblingsData_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GSplitWithSiblingsData_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
      'siblings',
      serializers.serialize(object.siblings,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GSplitWithSiblingsData_siblings)])),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSplitWithSiblingsData_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_expense))!
              as GSplitWithSiblingsData_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitWithSiblingsData_group))!
              as GSplitWithSiblingsData_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_creator))!
              as GSplitWithSiblingsData_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_fromUser))!
              as GSplitWithSiblingsData_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitWithSiblingsData_toUser))!
              as GSplitWithSiblingsData_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSplitWithSiblingsData_amount))!
              as GSplitWithSiblingsData_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'siblings':
          result.siblings.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GSplitWithSiblingsData_siblings)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_expenseSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_expense> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_expense,
    _$GSplitWithSiblingsData_expense
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GSplitWithSiblingsData_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_expense_amount))!
              as GSplitWithSiblingsData_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_expense_amountSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_expense_amount,
    _$GSplitWithSiblingsData_expense_amount
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_expense_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitWithSiblingsData_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_groupSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_group> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_group,
    _$GSplitWithSiblingsData_group
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_creatorSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_creator> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_creator,
    _$GSplitWithSiblingsData_creator
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_fromUserSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_fromUser> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_fromUser,
    _$GSplitWithSiblingsData_fromUser
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_toUserSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_toUser> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_toUser,
    _$GSplitWithSiblingsData_toUser
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_amountSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_amount> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_amount,
    _$GSplitWithSiblingsData_amount
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitWithSiblingsData_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_siblingsSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_siblings> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_siblings,
    _$GSplitWithSiblingsData_siblings
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_siblings';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_siblings object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'group',
      serializers.serialize(object.group,
          specifiedType: const FullType(GSplitWithSiblingsData_siblings_group)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GSplitWithSiblingsData_siblings_creator)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GSplitWithSiblingsData_siblings_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GSplitWithSiblingsData_siblings_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GSplitWithSiblingsData_siblings_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GSplitWithSiblingsData_siblings_expense)));
    }
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_siblings deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_siblingsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_siblings_expense))!
              as GSplitWithSiblingsData_siblings_expense);
          break;
        case 'group':
          result.group.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_siblings_group))!
              as GSplitWithSiblingsData_siblings_group);
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_siblings_creator))!
              as GSplitWithSiblingsData_siblings_creator);
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_siblings_fromUser))!
              as GSplitWithSiblingsData_siblings_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_siblings_toUser))!
              as GSplitWithSiblingsData_siblings_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GSplitWithSiblingsData_siblings_amount))!
              as GSplitWithSiblingsData_siblings_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_siblings_expenseSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_siblings_expense> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_siblings_expense,
    _$GSplitWithSiblingsData_siblings_expense
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_siblings_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_siblings_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GSplitWithSiblingsData_siblings_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_siblings_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_siblings_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GSplitWithSiblingsData_siblings_expense_amount))!
              as GSplitWithSiblingsData_siblings_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_siblings_expense_amountSerializer
    implements
        StructuredSerializer<GSplitWithSiblingsData_siblings_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_siblings_expense_amount,
    _$GSplitWithSiblingsData_siblings_expense_amount
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_siblings_expense_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GSplitWithSiblingsData_siblings_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitWithSiblingsData_siblings_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_siblings_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_siblings_groupSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_siblings_group> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_siblings_group,
    _$GSplitWithSiblingsData_siblings_group
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_siblings_group';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_siblings_group object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_siblings_group deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_siblings_groupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_siblings_creatorSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_siblings_creator> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_siblings_creator,
    _$GSplitWithSiblingsData_siblings_creator
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_siblings_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_siblings_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_siblings_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_siblings_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_siblings_fromUserSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_siblings_fromUser> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_siblings_fromUser,
    _$GSplitWithSiblingsData_siblings_fromUser
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_siblings_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_siblings_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_siblings_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_siblings_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_siblings_toUserSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_siblings_toUser> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_siblings_toUser,
    _$GSplitWithSiblingsData_siblings_toUser
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_siblings_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_siblings_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSplitWithSiblingsData_siblings_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_siblings_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GSplitWithSiblingsData_siblings_amountSerializer
    implements StructuredSerializer<GSplitWithSiblingsData_siblings_amount> {
  @override
  final Iterable<Type> types = const [
    GSplitWithSiblingsData_siblings_amount,
    _$GSplitWithSiblingsData_siblings_amount
  ];
  @override
  final String wireName = 'GSplitWithSiblingsData_siblings_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSplitWithSiblingsData_siblings_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSplitWithSiblingsData_siblings_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSplitWithSiblingsData_siblings_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesDataSerializer
    implements StructuredSerializer<GGroupWithExpensesData> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData,
    _$GGroupWithExpensesData
  ];
  @override
  final String wireName = 'GGroupWithExpensesData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType: const FullType(GGroupWithExpensesData_creator)),
      'members',
      serializers.serialize(object.members,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GGroupWithExpensesData_members)])),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'expenses',
      serializers.serialize(object.expenses,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GGroupWithExpensesData_expenses)])),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupWithExpensesData_creator))!
              as GGroupWithExpensesData_creator);
          break;
        case 'members':
          result.members.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupWithExpensesData_members)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'expenses':
          result.expenses.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupWithExpensesData_expenses)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_creatorSerializer
    implements StructuredSerializer<GGroupWithExpensesData_creator> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_creator,
    _$GGroupWithExpensesData_creator
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_membersSerializer
    implements StructuredSerializer<GGroupWithExpensesData_members> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_members,
    _$GGroupWithExpensesData_members
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_members';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_members object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'owedInGroup',
      serializers.serialize(object.owedInGroup,
          specifiedType: const FullType(BuiltList, const [
            const FullType(GGroupWithExpensesData_members_owedInGroup)
          ])),
      'member',
      serializers.serialize(object.member,
          specifiedType: const FullType(GGroupWithExpensesData_members_member)),
    ];

    return result;
  }

  @override
  GGroupWithExpensesData_members deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_membersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'owedInGroup':
          result.owedInGroup.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupWithExpensesData_members_owedInGroup)
              ]))! as BuiltList<Object?>);
          break;
        case 'member':
          result.member.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupWithExpensesData_members_member))!
              as GGroupWithExpensesData_members_member);
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_members_owedInGroupSerializer
    implements
        StructuredSerializer<GGroupWithExpensesData_members_owedInGroup> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_members_owedInGroup,
    _$GGroupWithExpensesData_members_owedInGroup
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_members_owedInGroup';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GGroupWithExpensesData_members_owedInGroup object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGroupWithExpensesData_members_owedInGroup deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_members_owedInGroupBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_members_memberSerializer
    implements StructuredSerializer<GGroupWithExpensesData_members_member> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_members_member,
    _$GGroupWithExpensesData_members_member
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_members_member';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_members_member object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_members_member deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_members_memberBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expensesSerializer
    implements StructuredSerializer<GGroupWithExpensesData_expenses> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses,
    _$GGroupWithExpensesData_expenses
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_expenses object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'creator',
      serializers.serialize(object.creator,
          specifiedType:
              const FullType(GGroupWithExpensesData_expenses_creator)),
      'splits',
      serializers.serialize(object.splits,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GGroupWithExpensesData_expenses_splits)])),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GGroupWithExpensesData_expenses_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expensesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creator':
          result.creator.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupWithExpensesData_expenses_creator))!
              as GGroupWithExpensesData_expenses_creator);
          break;
        case 'splits':
          result.splits.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GGroupWithExpensesData_expenses_splits)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGroupWithExpensesData_expenses_amount))!
              as GGroupWithExpensesData_expenses_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_creatorSerializer
    implements StructuredSerializer<GGroupWithExpensesData_expenses_creator> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_creator,
    _$GGroupWithExpensesData_expenses_creator
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_creator';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_expenses_creator object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses_creator deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_splitsSerializer
    implements StructuredSerializer<GGroupWithExpensesData_expenses_splits> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_splits,
    _$GGroupWithExpensesData_expenses_splits
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_splits';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_expenses_splits object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GGroupWithExpensesData_expenses_splits_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GGroupWithExpensesData_expenses_splits_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GGroupWithExpensesData_expenses_splits_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses_splits deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_splitsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GGroupWithExpensesData_expenses_splits_fromUser))!
              as GGroupWithExpensesData_expenses_splits_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GGroupWithExpensesData_expenses_splits_toUser))!
              as GGroupWithExpensesData_expenses_splits_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GGroupWithExpensesData_expenses_splits_amount))!
              as GGroupWithExpensesData_expenses_splits_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_splits_fromUserSerializer
    implements
        StructuredSerializer<GGroupWithExpensesData_expenses_splits_fromUser> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_splits_fromUser,
    _$GGroupWithExpensesData_expenses_splits_fromUser
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_splits_fromUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GGroupWithExpensesData_expenses_splits_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses_splits_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_splits_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_splits_toUserSerializer
    implements
        StructuredSerializer<GGroupWithExpensesData_expenses_splits_toUser> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_splits_toUser,
    _$GGroupWithExpensesData_expenses_splits_toUser
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_splits_toUser';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GGroupWithExpensesData_expenses_splits_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupWithExpensesData_expenses_splits_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_splits_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_splits_amountSerializer
    implements
        StructuredSerializer<GGroupWithExpensesData_expenses_splits_amount> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_splits_amount,
    _$GGroupWithExpensesData_expenses_splits_amount
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_splits_amount';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GGroupWithExpensesData_expenses_splits_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGroupWithExpensesData_expenses_splits_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_splits_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupWithExpensesData_expenses_amountSerializer
    implements StructuredSerializer<GGroupWithExpensesData_expenses_amount> {
  @override
  final Iterable<Type> types = const [
    GGroupWithExpensesData_expenses_amount,
    _$GGroupWithExpensesData_expenses_amount
  ];
  @override
  final String wireName = 'GGroupWithExpensesData_expenses_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGroupWithExpensesData_expenses_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGroupWithExpensesData_expenses_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupWithExpensesData_expenses_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsDataSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData,
    _$GExpenseMixSplitFieldsData
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.expense;
    if (value != null) {
      result
        ..add('expense')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GExpenseMixSplitFieldsData_expense)));
    }
    value = object.split;
    if (value != null) {
      result
        ..add('split')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GExpenseMixSplitFieldsData_split)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'expense':
          result.expense.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseMixSplitFieldsData_expense))!
              as GExpenseMixSplitFieldsData_expense);
          break;
        case 'split':
          result.split.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseMixSplitFieldsData_split))!
              as GExpenseMixSplitFieldsData_split);
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_expenseSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_expense> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_expense,
    _$GExpenseMixSplitFieldsData_expense
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_expense';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_expense object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GExpenseMixSplitFieldsData_expense_amount)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData_expense deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_expenseBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GExpenseMixSplitFieldsData_expense_amount))!
              as GExpenseMixSplitFieldsData_expense_amount);
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_expense_amountSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_expense_amount> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_expense_amount,
    _$GExpenseMixSplitFieldsData_expense_amount
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_expense_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_expense_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GExpenseMixSplitFieldsData_expense_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_expense_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_splitSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_split> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_split,
    _$GExpenseMixSplitFieldsData_split
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_split';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_split object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'fromUser',
      serializers.serialize(object.fromUser,
          specifiedType:
              const FullType(GExpenseMixSplitFieldsData_split_fromUser)),
      'toUser',
      serializers.serialize(object.toUser,
          specifiedType:
              const FullType(GExpenseMixSplitFieldsData_split_toUser)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType:
              const FullType(GExpenseMixSplitFieldsData_split_amount)),
      'transactionType',
      serializers.serialize(object.transactionType,
          specifiedType: const FullType(_i3.GTransactionType)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'fromUserId',
      serializers.serialize(object.fromUserId,
          specifiedType: const FullType(String)),
      'toUserId',
      serializers.serialize(object.toUserId,
          specifiedType: const FullType(String)),
      'creatorId',
      serializers.serialize(object.creatorId,
          specifiedType: const FullType(String)),
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.transactionPartGroupId;
    if (value != null) {
      result
        ..add('transactionPartGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.withGroupId;
    if (value != null) {
      result
        ..add('withGroupId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.imageId;
    if (value != null) {
      result
        ..add('imageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData_split deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_splitBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromUser':
          result.fromUser.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GExpenseMixSplitFieldsData_split_fromUser))!
              as GExpenseMixSplitFieldsData_split_fromUser);
          break;
        case 'toUser':
          result.toUser.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseMixSplitFieldsData_split_toUser))!
              as GExpenseMixSplitFieldsData_split_toUser);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GExpenseMixSplitFieldsData_split_amount))!
              as GExpenseMixSplitFieldsData_split_amount);
          break;
        case 'transactionType':
          result.transactionType = serializers.deserialize(value,
                  specifiedType: const FullType(_i3.GTransactionType))!
              as _i3.GTransactionType;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionPartGroupId':
          result.transactionPartGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fromUserId':
          result.fromUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'toUserId':
          result.toUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'creatorId':
          result.creatorId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'withGroupId':
          result.withGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'imageId':
          result.imageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_split_fromUserSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_split_fromUser> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_split_fromUser,
    _$GExpenseMixSplitFieldsData_split_fromUser
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_split_fromUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_split_fromUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData_split_fromUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_split_fromUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_split_toUserSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_split_toUser> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_split_toUser,
    _$GExpenseMixSplitFieldsData_split_toUser
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_split_toUser';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_split_toUser object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'isSignedUp',
      serializers.serialize(object.isSignedUp,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExpenseMixSplitFieldsData_split_toUser deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_split_toUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isSignedUp':
          result.isSignedUp = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GExpenseMixSplitFieldsData_split_amountSerializer
    implements StructuredSerializer<GExpenseMixSplitFieldsData_split_amount> {
  @override
  final Iterable<Type> types = const [
    GExpenseMixSplitFieldsData_split_amount,
    _$GExpenseMixSplitFieldsData_split_amount
  ];
  @override
  final String wireName = 'GExpenseMixSplitFieldsData_split_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExpenseMixSplitFieldsData_split_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GExpenseMixSplitFieldsData_split_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExpenseMixSplitFieldsData_split_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCategorisedAmountFieldsDataSerializer
    implements StructuredSerializer<GCategorisedAmountFieldsData> {
  @override
  final Iterable<Type> types = const [
    GCategorisedAmountFieldsData,
    _$GCategorisedAmountFieldsData
  ];
  @override
  final String wireName = 'GCategorisedAmountFieldsData';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCategorisedAmountFieldsData object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GCategorisedAmountFieldsData_amount)),
    ];

    return result;
  }

  @override
  GCategorisedAmountFieldsData deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCategorisedAmountFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GCategorisedAmountFieldsData_amount))!
              as GCategorisedAmountFieldsData_amount);
          break;
      }
    }

    return result.build();
  }
}

class _$GCategorisedAmountFieldsData_amountSerializer
    implements StructuredSerializer<GCategorisedAmountFieldsData_amount> {
  @override
  final Iterable<Type> types = const [
    GCategorisedAmountFieldsData_amount,
    _$GCategorisedAmountFieldsData_amount
  ];
  @override
  final String wireName = 'GCategorisedAmountFieldsData_amount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCategorisedAmountFieldsData_amount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(object.G__typename,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'currencyId',
      serializers.serialize(object.currencyId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GCategorisedAmountFieldsData_amount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCategorisedAmountFieldsData_amountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'currencyId':
          result.currencyId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GuserData extends GuserData {
  @override
  final String G__typename;
  @override
  final GuserData_user user;

  factory _$GuserData([void Function(GuserDataBuilder)? updates]) =>
      (new GuserDataBuilder()..update(updates))._build();

  _$GuserData._({required this.G__typename, required this.user}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(user, r'GuserData', 'user');
  }

  @override
  GuserData rebuild(void Function(GuserDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserDataBuilder toBuilder() => new GuserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData &&
        G__typename == other.G__typename &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData')
          ..add('G__typename', G__typename)
          ..add('user', user))
        .toString();
  }
}

class GuserDataBuilder implements Builder<GuserData, GuserDataBuilder> {
  _$GuserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GuserData_user? _user;
  GuserData_user? get user => _$this._user;
  set user(GuserData_user? user) => _$this._user = user;

  GuserDataBuilder() {
    GuserData._initializeBuilder(this);
  }

  GuserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _user = $v.user;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData;
  }

  @override
  void update(void Function(GuserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData build() => _build();

  _$GuserData _build() {
    final _$result = _$v ??
        new _$GuserData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GuserData', 'G__typename'),
            user: BuiltValueNullFieldError.checkNotNull(
                user, r'GuserData', 'user'));
    replace(_$result);
    return _$result;
  }
}

class _$GuserData_user__base extends GuserData_user__base {
  @override
  final String G__typename;

  factory _$GuserData_user__base(
          [void Function(GuserData_user__baseBuilder)? updates]) =>
      (new GuserData_user__baseBuilder()..update(updates))._build();

  _$GuserData_user__base._({required this.G__typename}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData_user__base', 'G__typename');
  }

  @override
  GuserData_user__base rebuild(
          void Function(GuserData_user__baseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserData_user__baseBuilder toBuilder() =>
      new GuserData_user__baseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData_user__base && G__typename == other.G__typename;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData_user__base')
          ..add('G__typename', G__typename))
        .toString();
  }
}

class GuserData_user__baseBuilder
    implements Builder<GuserData_user__base, GuserData_user__baseBuilder> {
  _$GuserData_user__base? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GuserData_user__baseBuilder() {
    GuserData_user__base._initializeBuilder(this);
  }

  GuserData_user__baseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData_user__base other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData_user__base;
  }

  @override
  void update(void Function(GuserData_user__baseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData_user__base build() => _build();

  _$GuserData_user__base _build() {
    final _$result = _$v ??
        new _$GuserData_user__base._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GuserData_user__base', 'G__typename'));
    replace(_$result);
    return _$result;
  }
}

class _$GuserData_user__asRegistered extends GuserData_user__asRegistered {
  @override
  final String G__typename;
  @override
  final GuserData_user__asRegistered_user user;

  factory _$GuserData_user__asRegistered(
          [void Function(GuserData_user__asRegisteredBuilder)? updates]) =>
      (new GuserData_user__asRegisteredBuilder()..update(updates))._build();

  _$GuserData_user__asRegistered._(
      {required this.G__typename, required this.user})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData_user__asRegistered', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        user, r'GuserData_user__asRegistered', 'user');
  }

  @override
  GuserData_user__asRegistered rebuild(
          void Function(GuserData_user__asRegisteredBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserData_user__asRegisteredBuilder toBuilder() =>
      new GuserData_user__asRegisteredBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData_user__asRegistered &&
        G__typename == other.G__typename &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData_user__asRegistered')
          ..add('G__typename', G__typename)
          ..add('user', user))
        .toString();
  }
}

class GuserData_user__asRegisteredBuilder
    implements
        Builder<GuserData_user__asRegistered,
            GuserData_user__asRegisteredBuilder> {
  _$GuserData_user__asRegistered? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GuserData_user__asRegistered_userBuilder? _user;
  GuserData_user__asRegistered_userBuilder get user =>
      _$this._user ??= new GuserData_user__asRegistered_userBuilder();
  set user(GuserData_user__asRegistered_userBuilder? user) =>
      _$this._user = user;

  GuserData_user__asRegisteredBuilder() {
    GuserData_user__asRegistered._initializeBuilder(this);
  }

  GuserData_user__asRegisteredBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _user = $v.user.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData_user__asRegistered other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData_user__asRegistered;
  }

  @override
  void update(void Function(GuserData_user__asRegisteredBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData_user__asRegistered build() => _build();

  _$GuserData_user__asRegistered _build() {
    _$GuserData_user__asRegistered _$result;
    try {
      _$result = _$v ??
          new _$GuserData_user__asRegistered._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GuserData_user__asRegistered', 'G__typename'),
              user: user.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'user';
        user.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GuserData_user__asRegistered', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GuserData_user__asRegistered_user
    extends GuserData_user__asRegistered_user {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GuserData_user__asRegistered_user(
          [void Function(GuserData_user__asRegistered_userBuilder)? updates]) =>
      (new GuserData_user__asRegistered_userBuilder()..update(updates))
          ._build();

  _$GuserData_user__asRegistered_user._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData_user__asRegistered_user', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GuserData_user__asRegistered_user', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GuserData_user__asRegistered_user', 'isSignedUp');
  }

  @override
  GuserData_user__asRegistered_user rebuild(
          void Function(GuserData_user__asRegistered_userBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserData_user__asRegistered_userBuilder toBuilder() =>
      new GuserData_user__asRegistered_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData_user__asRegistered_user &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData_user__asRegistered_user')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GuserData_user__asRegistered_userBuilder
    implements
        Builder<GuserData_user__asRegistered_user,
            GuserData_user__asRegistered_userBuilder> {
  _$GuserData_user__asRegistered_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GuserData_user__asRegistered_userBuilder() {
    GuserData_user__asRegistered_user._initializeBuilder(this);
  }

  GuserData_user__asRegistered_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData_user__asRegistered_user other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData_user__asRegistered_user;
  }

  @override
  void update(
      void Function(GuserData_user__asRegistered_userBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData_user__asRegistered_user build() => _build();

  _$GuserData_user__asRegistered_user _build() {
    final _$result = _$v ??
        new _$GuserData_user__asRegistered_user._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GuserData_user__asRegistered_user', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GuserData_user__asRegistered_user', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GuserData_user__asRegistered_user', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GuserData_user__asUnregistered extends GuserData_user__asUnregistered {
  @override
  final String G__typename;
  @override
  final String? phone;

  factory _$GuserData_user__asUnregistered(
          [void Function(GuserData_user__asUnregisteredBuilder)? updates]) =>
      (new GuserData_user__asUnregisteredBuilder()..update(updates))._build();

  _$GuserData_user__asUnregistered._({required this.G__typename, this.phone})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserData_user__asUnregistered', 'G__typename');
  }

  @override
  GuserData_user__asUnregistered rebuild(
          void Function(GuserData_user__asUnregisteredBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserData_user__asUnregisteredBuilder toBuilder() =>
      new GuserData_user__asUnregisteredBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserData_user__asUnregistered &&
        G__typename == other.G__typename &&
        phone == other.phone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserData_user__asUnregistered')
          ..add('G__typename', G__typename)
          ..add('phone', phone))
        .toString();
  }
}

class GuserData_user__asUnregisteredBuilder
    implements
        Builder<GuserData_user__asUnregistered,
            GuserData_user__asUnregisteredBuilder> {
  _$GuserData_user__asUnregistered? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  GuserData_user__asUnregisteredBuilder() {
    GuserData_user__asUnregistered._initializeBuilder(this);
  }

  GuserData_user__asUnregisteredBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _phone = $v.phone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserData_user__asUnregistered other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserData_user__asUnregistered;
  }

  @override
  void update(void Function(GuserData_user__asUnregisteredBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserData_user__asUnregistered build() => _build();

  _$GuserData_user__asUnregistered _build() {
    final _$result = _$v ??
        new _$GuserData_user__asUnregistered._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GuserData_user__asUnregistered', 'G__typename'),
            phone: phone);
    replace(_$result);
    return _$result;
  }
}

class _$GuserConfigData extends GuserConfigData {
  @override
  final String G__typename;
  @override
  final GuserConfigData_config config;

  factory _$GuserConfigData([void Function(GuserConfigDataBuilder)? updates]) =>
      (new GuserConfigDataBuilder()..update(updates))._build();

  _$GuserConfigData._({required this.G__typename, required this.config})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserConfigData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(config, r'GuserConfigData', 'config');
  }

  @override
  GuserConfigData rebuild(void Function(GuserConfigDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserConfigDataBuilder toBuilder() =>
      new GuserConfigDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserConfigData &&
        G__typename == other.G__typename &&
        config == other.config;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, config.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserConfigData')
          ..add('G__typename', G__typename)
          ..add('config', config))
        .toString();
  }
}

class GuserConfigDataBuilder
    implements Builder<GuserConfigData, GuserConfigDataBuilder> {
  _$GuserConfigData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GuserConfigData_configBuilder? _config;
  GuserConfigData_configBuilder get config =>
      _$this._config ??= new GuserConfigData_configBuilder();
  set config(GuserConfigData_configBuilder? config) => _$this._config = config;

  GuserConfigDataBuilder() {
    GuserConfigData._initializeBuilder(this);
  }

  GuserConfigDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _config = $v.config.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserConfigData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserConfigData;
  }

  @override
  void update(void Function(GuserConfigDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserConfigData build() => _build();

  _$GuserConfigData _build() {
    _$GuserConfigData _$result;
    try {
      _$result = _$v ??
          new _$GuserConfigData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GuserConfigData', 'G__typename'),
              config: config.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'config';
        config.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GuserConfigData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GuserConfigData_config extends GuserConfigData_config {
  @override
  final String G__typename;
  @override
  final String defaultCurrencyId;

  factory _$GuserConfigData_config(
          [void Function(GuserConfigData_configBuilder)? updates]) =>
      (new GuserConfigData_configBuilder()..update(updates))._build();

  _$GuserConfigData_config._(
      {required this.G__typename, required this.defaultCurrencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GuserConfigData_config', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        defaultCurrencyId, r'GuserConfigData_config', 'defaultCurrencyId');
  }

  @override
  GuserConfigData_config rebuild(
          void Function(GuserConfigData_configBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuserConfigData_configBuilder toBuilder() =>
      new GuserConfigData_configBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GuserConfigData_config &&
        G__typename == other.G__typename &&
        defaultCurrencyId == other.defaultCurrencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, defaultCurrencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GuserConfigData_config')
          ..add('G__typename', G__typename)
          ..add('defaultCurrencyId', defaultCurrencyId))
        .toString();
  }
}

class GuserConfigData_configBuilder
    implements Builder<GuserConfigData_config, GuserConfigData_configBuilder> {
  _$GuserConfigData_config? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _defaultCurrencyId;
  String? get defaultCurrencyId => _$this._defaultCurrencyId;
  set defaultCurrencyId(String? defaultCurrencyId) =>
      _$this._defaultCurrencyId = defaultCurrencyId;

  GuserConfigData_configBuilder() {
    GuserConfigData_config._initializeBuilder(this);
  }

  GuserConfigData_configBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _defaultCurrencyId = $v.defaultCurrencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GuserConfigData_config other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GuserConfigData_config;
  }

  @override
  void update(void Function(GuserConfigData_configBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GuserConfigData_config build() => _build();

  _$GuserConfigData_config _build() {
    final _$result = _$v ??
        new _$GuserConfigData_config._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GuserConfigData_config', 'G__typename'),
            defaultCurrencyId: BuiltValueNullFieldError.checkNotNull(
                defaultCurrencyId,
                r'GuserConfigData_config',
                'defaultCurrencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData extends GgroupsData {
  @override
  final String G__typename;
  @override
  final BuiltList<GgroupsData_groups> groups;

  factory _$GgroupsData([void Function(GgroupsDataBuilder)? updates]) =>
      (new GgroupsDataBuilder()..update(updates))._build();

  _$GgroupsData._({required this.G__typename, required this.groups})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(groups, r'GgroupsData', 'groups');
  }

  @override
  GgroupsData rebuild(void Function(GgroupsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsDataBuilder toBuilder() => new GgroupsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData &&
        G__typename == other.G__typename &&
        groups == other.groups;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, groups.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData')
          ..add('G__typename', G__typename)
          ..add('groups', groups))
        .toString();
  }
}

class GgroupsDataBuilder implements Builder<GgroupsData, GgroupsDataBuilder> {
  _$GgroupsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GgroupsData_groups>? _groups;
  ListBuilder<GgroupsData_groups> get groups =>
      _$this._groups ??= new ListBuilder<GgroupsData_groups>();
  set groups(ListBuilder<GgroupsData_groups>? groups) =>
      _$this._groups = groups;

  GgroupsDataBuilder() {
    GgroupsData._initializeBuilder(this);
  }

  GgroupsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _groups = $v.groups.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData;
  }

  @override
  void update(void Function(GgroupsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData build() => _build();

  _$GgroupsData _build() {
    _$GgroupsData _$result;
    try {
      _$result = _$v ??
          new _$GgroupsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupsData', 'G__typename'),
              groups: groups.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'groups';
        groups.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups extends GgroupsData_groups {
  @override
  final String G__typename;
  @override
  final GgroupsData_groups_creator creator;
  @override
  final BuiltList<GgroupsData_groups_members> members;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$GgroupsData_groups(
          [void Function(GgroupsData_groupsBuilder)? updates]) =>
      (new GgroupsData_groupsBuilder()..update(updates))._build();

  _$GgroupsData_groups._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GgroupsData_groups', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GgroupsData_groups', 'members');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgroupsData_groups', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(id, r'GgroupsData_groups', 'id');
  }

  @override
  GgroupsData_groups rebuild(
          void Function(GgroupsData_groupsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groupsBuilder toBuilder() =>
      new GgroupsData_groupsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData_groups')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GgroupsData_groupsBuilder
    implements Builder<GgroupsData_groups, GgroupsData_groupsBuilder> {
  _$GgroupsData_groups? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgroupsData_groups_creatorBuilder? _creator;
  GgroupsData_groups_creatorBuilder get creator =>
      _$this._creator ??= new GgroupsData_groups_creatorBuilder();
  set creator(GgroupsData_groups_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GgroupsData_groups_members>? _members;
  ListBuilder<GgroupsData_groups_members> get members =>
      _$this._members ??= new ListBuilder<GgroupsData_groups_members>();
  set members(ListBuilder<GgroupsData_groups_members>? members) =>
      _$this._members = members;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GgroupsData_groupsBuilder() {
    GgroupsData_groups._initializeBuilder(this);
  }

  GgroupsData_groupsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups;
  }

  @override
  void update(void Function(GgroupsData_groupsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups build() => _build();

  _$GgroupsData_groups _build() {
    _$GgroupsData_groups _$result;
    try {
      _$result = _$v ??
          new _$GgroupsData_groups._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupsData_groups', 'G__typename'),
              creator: creator.build(),
              members: members.build(),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgroupsData_groups', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgroupsData_groups', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupsData_groups', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups_creator extends GgroupsData_groups_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupsData_groups_creator(
          [void Function(GgroupsData_groups_creatorBuilder)? updates]) =>
      (new GgroupsData_groups_creatorBuilder()..update(updates))._build();

  _$GgroupsData_groups_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupsData_groups_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupsData_groups_creator', 'isSignedUp');
  }

  @override
  GgroupsData_groups_creator rebuild(
          void Function(GgroupsData_groups_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groups_creatorBuilder toBuilder() =>
      new GgroupsData_groups_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData_groups_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupsData_groups_creatorBuilder
    implements
        Builder<GgroupsData_groups_creator, GgroupsData_groups_creatorBuilder> {
  _$GgroupsData_groups_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupsData_groups_creatorBuilder() {
    GgroupsData_groups_creator._initializeBuilder(this);
  }

  GgroupsData_groups_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups_creator;
  }

  @override
  void update(void Function(GgroupsData_groups_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups_creator build() => _build();

  _$GgroupsData_groups_creator _build() {
    final _$result = _$v ??
        new _$GgroupsData_groups_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GgroupsData_groups_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupsData_groups_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GgroupsData_groups_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups_members extends GgroupsData_groups_members {
  @override
  final String G__typename;
  @override
  final BuiltList<GgroupsData_groups_members_owedInGroup> owedInGroup;
  @override
  final GgroupsData_groups_members_member member;

  factory _$GgroupsData_groups_members(
          [void Function(GgroupsData_groups_membersBuilder)? updates]) =>
      (new GgroupsData_groups_membersBuilder()..update(updates))._build();

  _$GgroupsData_groups_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GgroupsData_groups_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GgroupsData_groups_members', 'member');
  }

  @override
  GgroupsData_groups_members rebuild(
          void Function(GgroupsData_groups_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groups_membersBuilder toBuilder() =>
      new GgroupsData_groups_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData_groups_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GgroupsData_groups_membersBuilder
    implements
        Builder<GgroupsData_groups_members, GgroupsData_groups_membersBuilder> {
  _$GgroupsData_groups_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GgroupsData_groups_members_owedInGroup>? _owedInGroup;
  ListBuilder<GgroupsData_groups_members_owedInGroup> get owedInGroup =>
      _$this._owedInGroup ??=
          new ListBuilder<GgroupsData_groups_members_owedInGroup>();
  set owedInGroup(
          ListBuilder<GgroupsData_groups_members_owedInGroup>? owedInGroup) =>
      _$this._owedInGroup = owedInGroup;

  GgroupsData_groups_members_memberBuilder? _member;
  GgroupsData_groups_members_memberBuilder get member =>
      _$this._member ??= new GgroupsData_groups_members_memberBuilder();
  set member(GgroupsData_groups_members_memberBuilder? member) =>
      _$this._member = member;

  GgroupsData_groups_membersBuilder() {
    GgroupsData_groups_members._initializeBuilder(this);
  }

  GgroupsData_groups_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup.toBuilder();
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups_members;
  }

  @override
  void update(void Function(GgroupsData_groups_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups_members build() => _build();

  _$GgroupsData_groups_members _build() {
    _$GgroupsData_groups_members _$result;
    try {
      _$result = _$v ??
          new _$GgroupsData_groups_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupsData_groups_members', 'G__typename'),
              owedInGroup: owedInGroup.build(),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'owedInGroup';
        owedInGroup.build();
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupsData_groups_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups_members_owedInGroup
    extends GgroupsData_groups_members_owedInGroup {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GgroupsData_groups_members_owedInGroup(
          [void Function(GgroupsData_groups_members_owedInGroupBuilder)?
              updates]) =>
      (new GgroupsData_groups_members_owedInGroupBuilder()..update(updates))
          ._build();

  _$GgroupsData_groups_members_owedInGroup._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups_members_owedInGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgroupsData_groups_members_owedInGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GgroupsData_groups_members_owedInGroup', 'currencyId');
  }

  @override
  GgroupsData_groups_members_owedInGroup rebuild(
          void Function(GgroupsData_groups_members_owedInGroupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groups_members_owedInGroupBuilder toBuilder() =>
      new GgroupsData_groups_members_owedInGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups_members_owedInGroup &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgroupsData_groups_members_owedInGroup')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GgroupsData_groups_members_owedInGroupBuilder
    implements
        Builder<GgroupsData_groups_members_owedInGroup,
            GgroupsData_groups_members_owedInGroupBuilder> {
  _$GgroupsData_groups_members_owedInGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GgroupsData_groups_members_owedInGroupBuilder() {
    GgroupsData_groups_members_owedInGroup._initializeBuilder(this);
  }

  GgroupsData_groups_members_owedInGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups_members_owedInGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups_members_owedInGroup;
  }

  @override
  void update(
      void Function(GgroupsData_groups_members_owedInGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups_members_owedInGroup build() => _build();

  _$GgroupsData_groups_members_owedInGroup _build() {
    final _$result = _$v ??
        new _$GgroupsData_groups_members_owedInGroup._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupsData_groups_members_owedInGroup', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GgroupsData_groups_members_owedInGroup', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GgroupsData_groups_members_owedInGroup', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupsData_groups_members_member
    extends GgroupsData_groups_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupsData_groups_members_member(
          [void Function(GgroupsData_groups_members_memberBuilder)? updates]) =>
      (new GgroupsData_groups_members_memberBuilder()..update(updates))
          ._build();

  _$GgroupsData_groups_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupsData_groups_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupsData_groups_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupsData_groups_members_member', 'isSignedUp');
  }

  @override
  GgroupsData_groups_members_member rebuild(
          void Function(GgroupsData_groups_members_memberBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupsData_groups_members_memberBuilder toBuilder() =>
      new GgroupsData_groups_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupsData_groups_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupsData_groups_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupsData_groups_members_memberBuilder
    implements
        Builder<GgroupsData_groups_members_member,
            GgroupsData_groups_members_memberBuilder> {
  _$GgroupsData_groups_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupsData_groups_members_memberBuilder() {
    GgroupsData_groups_members_member._initializeBuilder(this);
  }

  GgroupsData_groups_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupsData_groups_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupsData_groups_members_member;
  }

  @override
  void update(
      void Function(GgroupsData_groups_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupsData_groups_members_member build() => _build();

  _$GgroupsData_groups_members_member _build() {
    final _$result = _$v ??
        new _$GgroupsData_groups_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupsData_groups_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupsData_groups_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgroupsData_groups_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Ginteracted_usersData extends Ginteracted_usersData {
  @override
  final String G__typename;
  @override
  final BuiltList<Ginteracted_usersData_interactedUsers> interactedUsers;

  factory _$Ginteracted_usersData(
          [void Function(Ginteracted_usersDataBuilder)? updates]) =>
      (new Ginteracted_usersDataBuilder()..update(updates))._build();

  _$Ginteracted_usersData._(
      {required this.G__typename, required this.interactedUsers})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Ginteracted_usersData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        interactedUsers, r'Ginteracted_usersData', 'interactedUsers');
  }

  @override
  Ginteracted_usersData rebuild(
          void Function(Ginteracted_usersDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Ginteracted_usersDataBuilder toBuilder() =>
      new Ginteracted_usersDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Ginteracted_usersData &&
        G__typename == other.G__typename &&
        interactedUsers == other.interactedUsers;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, interactedUsers.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Ginteracted_usersData')
          ..add('G__typename', G__typename)
          ..add('interactedUsers', interactedUsers))
        .toString();
  }
}

class Ginteracted_usersDataBuilder
    implements Builder<Ginteracted_usersData, Ginteracted_usersDataBuilder> {
  _$Ginteracted_usersData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<Ginteracted_usersData_interactedUsers>? _interactedUsers;
  ListBuilder<Ginteracted_usersData_interactedUsers> get interactedUsers =>
      _$this._interactedUsers ??=
          new ListBuilder<Ginteracted_usersData_interactedUsers>();
  set interactedUsers(
          ListBuilder<Ginteracted_usersData_interactedUsers>?
              interactedUsers) =>
      _$this._interactedUsers = interactedUsers;

  Ginteracted_usersDataBuilder() {
    Ginteracted_usersData._initializeBuilder(this);
  }

  Ginteracted_usersDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _interactedUsers = $v.interactedUsers.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Ginteracted_usersData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Ginteracted_usersData;
  }

  @override
  void update(void Function(Ginteracted_usersDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Ginteracted_usersData build() => _build();

  _$Ginteracted_usersData _build() {
    _$Ginteracted_usersData _$result;
    try {
      _$result = _$v ??
          new _$Ginteracted_usersData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Ginteracted_usersData', 'G__typename'),
              interactedUsers: interactedUsers.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'interactedUsers';
        interactedUsers.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Ginteracted_usersData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Ginteracted_usersData_interactedUsers
    extends Ginteracted_usersData_interactedUsers {
  @override
  final String G__typename;
  @override
  final BuiltList<String> upiIds;
  @override
  final BuiltList<Ginteracted_usersData_interactedUsers_owes> owes;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Ginteracted_usersData_interactedUsers(
          [void Function(Ginteracted_usersData_interactedUsersBuilder)?
              updates]) =>
      (new Ginteracted_usersData_interactedUsersBuilder()..update(updates))
          ._build();

  _$Ginteracted_usersData_interactedUsers._(
      {required this.G__typename,
      required this.upiIds,
      required this.owes,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Ginteracted_usersData_interactedUsers', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        upiIds, r'Ginteracted_usersData_interactedUsers', 'upiIds');
    BuiltValueNullFieldError.checkNotNull(
        owes, r'Ginteracted_usersData_interactedUsers', 'owes');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Ginteracted_usersData_interactedUsers', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'Ginteracted_usersData_interactedUsers', 'isSignedUp');
  }

  @override
  Ginteracted_usersData_interactedUsers rebuild(
          void Function(Ginteracted_usersData_interactedUsersBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Ginteracted_usersData_interactedUsersBuilder toBuilder() =>
      new Ginteracted_usersData_interactedUsersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Ginteracted_usersData_interactedUsers &&
        G__typename == other.G__typename &&
        upiIds == other.upiIds &&
        owes == other.owes &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, upiIds.hashCode);
    _$hash = $jc(_$hash, owes.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Ginteracted_usersData_interactedUsers')
          ..add('G__typename', G__typename)
          ..add('upiIds', upiIds)
          ..add('owes', owes)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Ginteracted_usersData_interactedUsersBuilder
    implements
        Builder<Ginteracted_usersData_interactedUsers,
            Ginteracted_usersData_interactedUsersBuilder> {
  _$Ginteracted_usersData_interactedUsers? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<String>? _upiIds;
  ListBuilder<String> get upiIds =>
      _$this._upiIds ??= new ListBuilder<String>();
  set upiIds(ListBuilder<String>? upiIds) => _$this._upiIds = upiIds;

  ListBuilder<Ginteracted_usersData_interactedUsers_owes>? _owes;
  ListBuilder<Ginteracted_usersData_interactedUsers_owes> get owes =>
      _$this._owes ??=
          new ListBuilder<Ginteracted_usersData_interactedUsers_owes>();
  set owes(ListBuilder<Ginteracted_usersData_interactedUsers_owes>? owes) =>
      _$this._owes = owes;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Ginteracted_usersData_interactedUsersBuilder() {
    Ginteracted_usersData_interactedUsers._initializeBuilder(this);
  }

  Ginteracted_usersData_interactedUsersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _upiIds = $v.upiIds.toBuilder();
      _owes = $v.owes.toBuilder();
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Ginteracted_usersData_interactedUsers other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Ginteracted_usersData_interactedUsers;
  }

  @override
  void update(
      void Function(Ginteracted_usersData_interactedUsersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Ginteracted_usersData_interactedUsers build() => _build();

  _$Ginteracted_usersData_interactedUsers _build() {
    _$Ginteracted_usersData_interactedUsers _$result;
    try {
      _$result = _$v ??
          new _$Ginteracted_usersData_interactedUsers._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'Ginteracted_usersData_interactedUsers', 'G__typename'),
              upiIds: upiIds.build(),
              owes: owes.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Ginteracted_usersData_interactedUsers', 'id'),
              name: name,
              phone: phone,
              email: email,
              isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                  r'Ginteracted_usersData_interactedUsers', 'isSignedUp'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'upiIds';
        upiIds.build();
        _$failedField = 'owes';
        owes.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Ginteracted_usersData_interactedUsers',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Ginteracted_usersData_interactedUsers_owes
    extends Ginteracted_usersData_interactedUsers_owes {
  @override
  final String G__typename;
  @override
  final String groupId;
  @override
  final Ginteracted_usersData_interactedUsers_owes_amount amount;

  factory _$Ginteracted_usersData_interactedUsers_owes(
          [void Function(Ginteracted_usersData_interactedUsers_owesBuilder)?
              updates]) =>
      (new Ginteracted_usersData_interactedUsers_owesBuilder()..update(updates))
          ._build();

  _$Ginteracted_usersData_interactedUsers_owes._(
      {required this.G__typename, required this.groupId, required this.amount})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Ginteracted_usersData_interactedUsers_owes', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'Ginteracted_usersData_interactedUsers_owes', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Ginteracted_usersData_interactedUsers_owes', 'amount');
  }

  @override
  Ginteracted_usersData_interactedUsers_owes rebuild(
          void Function(Ginteracted_usersData_interactedUsers_owesBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Ginteracted_usersData_interactedUsers_owesBuilder toBuilder() =>
      new Ginteracted_usersData_interactedUsers_owesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Ginteracted_usersData_interactedUsers_owes &&
        G__typename == other.G__typename &&
        groupId == other.groupId &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Ginteracted_usersData_interactedUsers_owes')
          ..add('G__typename', G__typename)
          ..add('groupId', groupId)
          ..add('amount', amount))
        .toString();
  }
}

class Ginteracted_usersData_interactedUsers_owesBuilder
    implements
        Builder<Ginteracted_usersData_interactedUsers_owes,
            Ginteracted_usersData_interactedUsers_owesBuilder> {
  _$Ginteracted_usersData_interactedUsers_owes? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  Ginteracted_usersData_interactedUsers_owes_amountBuilder? _amount;
  Ginteracted_usersData_interactedUsers_owes_amountBuilder get amount =>
      _$this._amount ??=
          new Ginteracted_usersData_interactedUsers_owes_amountBuilder();
  set amount(
          Ginteracted_usersData_interactedUsers_owes_amountBuilder? amount) =>
      _$this._amount = amount;

  Ginteracted_usersData_interactedUsers_owesBuilder() {
    Ginteracted_usersData_interactedUsers_owes._initializeBuilder(this);
  }

  Ginteracted_usersData_interactedUsers_owesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _groupId = $v.groupId;
      _amount = $v.amount.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Ginteracted_usersData_interactedUsers_owes other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Ginteracted_usersData_interactedUsers_owes;
  }

  @override
  void update(
      void Function(Ginteracted_usersData_interactedUsers_owesBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Ginteracted_usersData_interactedUsers_owes build() => _build();

  _$Ginteracted_usersData_interactedUsers_owes _build() {
    _$Ginteracted_usersData_interactedUsers_owes _$result;
    try {
      _$result = _$v ??
          new _$Ginteracted_usersData_interactedUsers_owes._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'Ginteracted_usersData_interactedUsers_owes', 'G__typename'),
              groupId: BuiltValueNullFieldError.checkNotNull(groupId,
                  r'Ginteracted_usersData_interactedUsers_owes', 'groupId'),
              amount: amount.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Ginteracted_usersData_interactedUsers_owes',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Ginteracted_usersData_interactedUsers_owes_amount
    extends Ginteracted_usersData_interactedUsers_owes_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$Ginteracted_usersData_interactedUsers_owes_amount(
          [void Function(
                  Ginteracted_usersData_interactedUsers_owes_amountBuilder)?
              updates]) =>
      (new Ginteracted_usersData_interactedUsers_owes_amountBuilder()
            ..update(updates))
          ._build();

  _$Ginteracted_usersData_interactedUsers_owes_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Ginteracted_usersData_interactedUsers_owes_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Ginteracted_usersData_interactedUsers_owes_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'Ginteracted_usersData_interactedUsers_owes_amount', 'currencyId');
  }

  @override
  Ginteracted_usersData_interactedUsers_owes_amount rebuild(
          void Function(
                  Ginteracted_usersData_interactedUsers_owes_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Ginteracted_usersData_interactedUsers_owes_amountBuilder toBuilder() =>
      new Ginteracted_usersData_interactedUsers_owes_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Ginteracted_usersData_interactedUsers_owes_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Ginteracted_usersData_interactedUsers_owes_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class Ginteracted_usersData_interactedUsers_owes_amountBuilder
    implements
        Builder<Ginteracted_usersData_interactedUsers_owes_amount,
            Ginteracted_usersData_interactedUsers_owes_amountBuilder> {
  _$Ginteracted_usersData_interactedUsers_owes_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  Ginteracted_usersData_interactedUsers_owes_amountBuilder() {
    Ginteracted_usersData_interactedUsers_owes_amount._initializeBuilder(this);
  }

  Ginteracted_usersData_interactedUsers_owes_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Ginteracted_usersData_interactedUsers_owes_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Ginteracted_usersData_interactedUsers_owes_amount;
  }

  @override
  void update(
      void Function(Ginteracted_usersData_interactedUsers_owes_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Ginteracted_usersData_interactedUsers_owes_amount build() => _build();

  _$Ginteracted_usersData_interactedUsers_owes_amount _build() {
    final _$result = _$v ??
        new _$Ginteracted_usersData_interactedUsers_owes_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'Ginteracted_usersData_interactedUsers_owes_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'Ginteracted_usersData_interactedUsers_owes_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'Ginteracted_usersData_interactedUsers_owes_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData extends GrefreshData {
  @override
  final String G__typename;
  @override
  final GrefreshData_user user;
  @override
  final GrefreshData_config config;
  @override
  final BuiltList<GrefreshData_groups> groups;
  @override
  final BuiltList<GrefreshData_interactedUsers> interactedUsers;
  @override
  final BuiltList<GrefreshData_currencies> currencies;

  factory _$GrefreshData([void Function(GrefreshDataBuilder)? updates]) =>
      (new GrefreshDataBuilder()..update(updates))._build();

  _$GrefreshData._(
      {required this.G__typename,
      required this.user,
      required this.config,
      required this.groups,
      required this.interactedUsers,
      required this.currencies})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(user, r'GrefreshData', 'user');
    BuiltValueNullFieldError.checkNotNull(config, r'GrefreshData', 'config');
    BuiltValueNullFieldError.checkNotNull(groups, r'GrefreshData', 'groups');
    BuiltValueNullFieldError.checkNotNull(
        interactedUsers, r'GrefreshData', 'interactedUsers');
    BuiltValueNullFieldError.checkNotNull(
        currencies, r'GrefreshData', 'currencies');
  }

  @override
  GrefreshData rebuild(void Function(GrefreshDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshDataBuilder toBuilder() => new GrefreshDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData &&
        G__typename == other.G__typename &&
        user == other.user &&
        config == other.config &&
        groups == other.groups &&
        interactedUsers == other.interactedUsers &&
        currencies == other.currencies;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jc(_$hash, config.hashCode);
    _$hash = $jc(_$hash, groups.hashCode);
    _$hash = $jc(_$hash, interactedUsers.hashCode);
    _$hash = $jc(_$hash, currencies.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData')
          ..add('G__typename', G__typename)
          ..add('user', user)
          ..add('config', config)
          ..add('groups', groups)
          ..add('interactedUsers', interactedUsers)
          ..add('currencies', currencies))
        .toString();
  }
}

class GrefreshDataBuilder
    implements Builder<GrefreshData, GrefreshDataBuilder> {
  _$GrefreshData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GrefreshData_user? _user;
  GrefreshData_user? get user => _$this._user;
  set user(GrefreshData_user? user) => _$this._user = user;

  GrefreshData_configBuilder? _config;
  GrefreshData_configBuilder get config =>
      _$this._config ??= new GrefreshData_configBuilder();
  set config(GrefreshData_configBuilder? config) => _$this._config = config;

  ListBuilder<GrefreshData_groups>? _groups;
  ListBuilder<GrefreshData_groups> get groups =>
      _$this._groups ??= new ListBuilder<GrefreshData_groups>();
  set groups(ListBuilder<GrefreshData_groups>? groups) =>
      _$this._groups = groups;

  ListBuilder<GrefreshData_interactedUsers>? _interactedUsers;
  ListBuilder<GrefreshData_interactedUsers> get interactedUsers =>
      _$this._interactedUsers ??=
          new ListBuilder<GrefreshData_interactedUsers>();
  set interactedUsers(
          ListBuilder<GrefreshData_interactedUsers>? interactedUsers) =>
      _$this._interactedUsers = interactedUsers;

  ListBuilder<GrefreshData_currencies>? _currencies;
  ListBuilder<GrefreshData_currencies> get currencies =>
      _$this._currencies ??= new ListBuilder<GrefreshData_currencies>();
  set currencies(ListBuilder<GrefreshData_currencies>? currencies) =>
      _$this._currencies = currencies;

  GrefreshDataBuilder() {
    GrefreshData._initializeBuilder(this);
  }

  GrefreshDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _user = $v.user;
      _config = $v.config.toBuilder();
      _groups = $v.groups.toBuilder();
      _interactedUsers = $v.interactedUsers.toBuilder();
      _currencies = $v.currencies.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData;
  }

  @override
  void update(void Function(GrefreshDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData build() => _build();

  _$GrefreshData _build() {
    _$GrefreshData _$result;
    try {
      _$result = _$v ??
          new _$GrefreshData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GrefreshData', 'G__typename'),
              user: BuiltValueNullFieldError.checkNotNull(
                  user, r'GrefreshData', 'user'),
              config: config.build(),
              groups: groups.build(),
              interactedUsers: interactedUsers.build(),
              currencies: currencies.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'config';
        config.build();
        _$failedField = 'groups';
        groups.build();
        _$failedField = 'interactedUsers';
        interactedUsers.build();
        _$failedField = 'currencies';
        currencies.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GrefreshData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_user__base extends GrefreshData_user__base {
  @override
  final String G__typename;

  factory _$GrefreshData_user__base(
          [void Function(GrefreshData_user__baseBuilder)? updates]) =>
      (new GrefreshData_user__baseBuilder()..update(updates))._build();

  _$GrefreshData_user__base._({required this.G__typename}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_user__base', 'G__typename');
  }

  @override
  GrefreshData_user__base rebuild(
          void Function(GrefreshData_user__baseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_user__baseBuilder toBuilder() =>
      new GrefreshData_user__baseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_user__base && G__typename == other.G__typename;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_user__base')
          ..add('G__typename', G__typename))
        .toString();
  }
}

class GrefreshData_user__baseBuilder
    implements
        Builder<GrefreshData_user__base, GrefreshData_user__baseBuilder> {
  _$GrefreshData_user__base? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GrefreshData_user__baseBuilder() {
    GrefreshData_user__base._initializeBuilder(this);
  }

  GrefreshData_user__baseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_user__base other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_user__base;
  }

  @override
  void update(void Function(GrefreshData_user__baseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_user__base build() => _build();

  _$GrefreshData_user__base _build() {
    final _$result = _$v ??
        new _$GrefreshData_user__base._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GrefreshData_user__base', 'G__typename'));
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_user__asRegistered
    extends GrefreshData_user__asRegistered {
  @override
  final String G__typename;
  @override
  final GrefreshData_user__asRegistered_user user;

  factory _$GrefreshData_user__asRegistered(
          [void Function(GrefreshData_user__asRegisteredBuilder)? updates]) =>
      (new GrefreshData_user__asRegisteredBuilder()..update(updates))._build();

  _$GrefreshData_user__asRegistered._(
      {required this.G__typename, required this.user})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_user__asRegistered', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        user, r'GrefreshData_user__asRegistered', 'user');
  }

  @override
  GrefreshData_user__asRegistered rebuild(
          void Function(GrefreshData_user__asRegisteredBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_user__asRegisteredBuilder toBuilder() =>
      new GrefreshData_user__asRegisteredBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_user__asRegistered &&
        G__typename == other.G__typename &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_user__asRegistered')
          ..add('G__typename', G__typename)
          ..add('user', user))
        .toString();
  }
}

class GrefreshData_user__asRegisteredBuilder
    implements
        Builder<GrefreshData_user__asRegistered,
            GrefreshData_user__asRegisteredBuilder> {
  _$GrefreshData_user__asRegistered? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GrefreshData_user__asRegistered_userBuilder? _user;
  GrefreshData_user__asRegistered_userBuilder get user =>
      _$this._user ??= new GrefreshData_user__asRegistered_userBuilder();
  set user(GrefreshData_user__asRegistered_userBuilder? user) =>
      _$this._user = user;

  GrefreshData_user__asRegisteredBuilder() {
    GrefreshData_user__asRegistered._initializeBuilder(this);
  }

  GrefreshData_user__asRegisteredBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _user = $v.user.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_user__asRegistered other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_user__asRegistered;
  }

  @override
  void update(void Function(GrefreshData_user__asRegisteredBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_user__asRegistered build() => _build();

  _$GrefreshData_user__asRegistered _build() {
    _$GrefreshData_user__asRegistered _$result;
    try {
      _$result = _$v ??
          new _$GrefreshData_user__asRegistered._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GrefreshData_user__asRegistered', 'G__typename'),
              user: user.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'user';
        user.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GrefreshData_user__asRegistered', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_user__asRegistered_user
    extends GrefreshData_user__asRegistered_user {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GrefreshData_user__asRegistered_user(
          [void Function(GrefreshData_user__asRegistered_userBuilder)?
              updates]) =>
      (new GrefreshData_user__asRegistered_userBuilder()..update(updates))
          ._build();

  _$GrefreshData_user__asRegistered_user._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_user__asRegistered_user', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GrefreshData_user__asRegistered_user', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GrefreshData_user__asRegistered_user', 'isSignedUp');
  }

  @override
  GrefreshData_user__asRegistered_user rebuild(
          void Function(GrefreshData_user__asRegistered_userBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_user__asRegistered_userBuilder toBuilder() =>
      new GrefreshData_user__asRegistered_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_user__asRegistered_user &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_user__asRegistered_user')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GrefreshData_user__asRegistered_userBuilder
    implements
        Builder<GrefreshData_user__asRegistered_user,
            GrefreshData_user__asRegistered_userBuilder> {
  _$GrefreshData_user__asRegistered_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GrefreshData_user__asRegistered_userBuilder() {
    GrefreshData_user__asRegistered_user._initializeBuilder(this);
  }

  GrefreshData_user__asRegistered_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_user__asRegistered_user other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_user__asRegistered_user;
  }

  @override
  void update(
      void Function(GrefreshData_user__asRegistered_userBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_user__asRegistered_user build() => _build();

  _$GrefreshData_user__asRegistered_user _build() {
    final _$result = _$v ??
        new _$GrefreshData_user__asRegistered_user._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GrefreshData_user__asRegistered_user', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GrefreshData_user__asRegistered_user', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GrefreshData_user__asRegistered_user', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_user__asUnregistered
    extends GrefreshData_user__asUnregistered {
  @override
  final String G__typename;
  @override
  final String? phone;

  factory _$GrefreshData_user__asUnregistered(
          [void Function(GrefreshData_user__asUnregisteredBuilder)? updates]) =>
      (new GrefreshData_user__asUnregisteredBuilder()..update(updates))
          ._build();

  _$GrefreshData_user__asUnregistered._({required this.G__typename, this.phone})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_user__asUnregistered', 'G__typename');
  }

  @override
  GrefreshData_user__asUnregistered rebuild(
          void Function(GrefreshData_user__asUnregisteredBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_user__asUnregisteredBuilder toBuilder() =>
      new GrefreshData_user__asUnregisteredBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_user__asUnregistered &&
        G__typename == other.G__typename &&
        phone == other.phone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_user__asUnregistered')
          ..add('G__typename', G__typename)
          ..add('phone', phone))
        .toString();
  }
}

class GrefreshData_user__asUnregisteredBuilder
    implements
        Builder<GrefreshData_user__asUnregistered,
            GrefreshData_user__asUnregisteredBuilder> {
  _$GrefreshData_user__asUnregistered? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  GrefreshData_user__asUnregisteredBuilder() {
    GrefreshData_user__asUnregistered._initializeBuilder(this);
  }

  GrefreshData_user__asUnregisteredBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _phone = $v.phone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_user__asUnregistered other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_user__asUnregistered;
  }

  @override
  void update(
      void Function(GrefreshData_user__asUnregisteredBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_user__asUnregistered build() => _build();

  _$GrefreshData_user__asUnregistered _build() {
    final _$result = _$v ??
        new _$GrefreshData_user__asUnregistered._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GrefreshData_user__asUnregistered', 'G__typename'),
            phone: phone);
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_config extends GrefreshData_config {
  @override
  final String G__typename;
  @override
  final String defaultCurrencyId;

  factory _$GrefreshData_config(
          [void Function(GrefreshData_configBuilder)? updates]) =>
      (new GrefreshData_configBuilder()..update(updates))._build();

  _$GrefreshData_config._(
      {required this.G__typename, required this.defaultCurrencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_config', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        defaultCurrencyId, r'GrefreshData_config', 'defaultCurrencyId');
  }

  @override
  GrefreshData_config rebuild(
          void Function(GrefreshData_configBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_configBuilder toBuilder() =>
      new GrefreshData_configBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_config &&
        G__typename == other.G__typename &&
        defaultCurrencyId == other.defaultCurrencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, defaultCurrencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_config')
          ..add('G__typename', G__typename)
          ..add('defaultCurrencyId', defaultCurrencyId))
        .toString();
  }
}

class GrefreshData_configBuilder
    implements Builder<GrefreshData_config, GrefreshData_configBuilder> {
  _$GrefreshData_config? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _defaultCurrencyId;
  String? get defaultCurrencyId => _$this._defaultCurrencyId;
  set defaultCurrencyId(String? defaultCurrencyId) =>
      _$this._defaultCurrencyId = defaultCurrencyId;

  GrefreshData_configBuilder() {
    GrefreshData_config._initializeBuilder(this);
  }

  GrefreshData_configBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _defaultCurrencyId = $v.defaultCurrencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_config other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_config;
  }

  @override
  void update(void Function(GrefreshData_configBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_config build() => _build();

  _$GrefreshData_config _build() {
    final _$result = _$v ??
        new _$GrefreshData_config._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GrefreshData_config', 'G__typename'),
            defaultCurrencyId: BuiltValueNullFieldError.checkNotNull(
                defaultCurrencyId,
                r'GrefreshData_config',
                'defaultCurrencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_groups extends GrefreshData_groups {
  @override
  final String G__typename;
  @override
  final GrefreshData_groups_creator creator;
  @override
  final BuiltList<GrefreshData_groups_members> members;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$GrefreshData_groups(
          [void Function(GrefreshData_groupsBuilder)? updates]) =>
      (new GrefreshData_groupsBuilder()..update(updates))._build();

  _$GrefreshData_groups._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_groups', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GrefreshData_groups', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GrefreshData_groups', 'members');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GrefreshData_groups', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(id, r'GrefreshData_groups', 'id');
  }

  @override
  GrefreshData_groups rebuild(
          void Function(GrefreshData_groupsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_groupsBuilder toBuilder() =>
      new GrefreshData_groupsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_groups &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_groups')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GrefreshData_groupsBuilder
    implements Builder<GrefreshData_groups, GrefreshData_groupsBuilder> {
  _$GrefreshData_groups? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GrefreshData_groups_creatorBuilder? _creator;
  GrefreshData_groups_creatorBuilder get creator =>
      _$this._creator ??= new GrefreshData_groups_creatorBuilder();
  set creator(GrefreshData_groups_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GrefreshData_groups_members>? _members;
  ListBuilder<GrefreshData_groups_members> get members =>
      _$this._members ??= new ListBuilder<GrefreshData_groups_members>();
  set members(ListBuilder<GrefreshData_groups_members>? members) =>
      _$this._members = members;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GrefreshData_groupsBuilder() {
    GrefreshData_groups._initializeBuilder(this);
  }

  GrefreshData_groupsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_groups other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_groups;
  }

  @override
  void update(void Function(GrefreshData_groupsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_groups build() => _build();

  _$GrefreshData_groups _build() {
    _$GrefreshData_groups _$result;
    try {
      _$result = _$v ??
          new _$GrefreshData_groups._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GrefreshData_groups', 'G__typename'),
              creator: creator.build(),
              members: members.build(),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GrefreshData_groups', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GrefreshData_groups', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GrefreshData_groups', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_groups_creator extends GrefreshData_groups_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GrefreshData_groups_creator(
          [void Function(GrefreshData_groups_creatorBuilder)? updates]) =>
      (new GrefreshData_groups_creatorBuilder()..update(updates))._build();

  _$GrefreshData_groups_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_groups_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GrefreshData_groups_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GrefreshData_groups_creator', 'isSignedUp');
  }

  @override
  GrefreshData_groups_creator rebuild(
          void Function(GrefreshData_groups_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_groups_creatorBuilder toBuilder() =>
      new GrefreshData_groups_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_groups_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_groups_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GrefreshData_groups_creatorBuilder
    implements
        Builder<GrefreshData_groups_creator,
            GrefreshData_groups_creatorBuilder> {
  _$GrefreshData_groups_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GrefreshData_groups_creatorBuilder() {
    GrefreshData_groups_creator._initializeBuilder(this);
  }

  GrefreshData_groups_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_groups_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_groups_creator;
  }

  @override
  void update(void Function(GrefreshData_groups_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_groups_creator build() => _build();

  _$GrefreshData_groups_creator _build() {
    final _$result = _$v ??
        new _$GrefreshData_groups_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GrefreshData_groups_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GrefreshData_groups_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GrefreshData_groups_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_groups_members extends GrefreshData_groups_members {
  @override
  final String G__typename;
  @override
  final BuiltList<GrefreshData_groups_members_owedInGroup> owedInGroup;
  @override
  final GrefreshData_groups_members_member member;

  factory _$GrefreshData_groups_members(
          [void Function(GrefreshData_groups_membersBuilder)? updates]) =>
      (new GrefreshData_groups_membersBuilder()..update(updates))._build();

  _$GrefreshData_groups_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_groups_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GrefreshData_groups_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GrefreshData_groups_members', 'member');
  }

  @override
  GrefreshData_groups_members rebuild(
          void Function(GrefreshData_groups_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_groups_membersBuilder toBuilder() =>
      new GrefreshData_groups_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_groups_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_groups_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GrefreshData_groups_membersBuilder
    implements
        Builder<GrefreshData_groups_members,
            GrefreshData_groups_membersBuilder> {
  _$GrefreshData_groups_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GrefreshData_groups_members_owedInGroup>? _owedInGroup;
  ListBuilder<GrefreshData_groups_members_owedInGroup> get owedInGroup =>
      _$this._owedInGroup ??=
          new ListBuilder<GrefreshData_groups_members_owedInGroup>();
  set owedInGroup(
          ListBuilder<GrefreshData_groups_members_owedInGroup>? owedInGroup) =>
      _$this._owedInGroup = owedInGroup;

  GrefreshData_groups_members_memberBuilder? _member;
  GrefreshData_groups_members_memberBuilder get member =>
      _$this._member ??= new GrefreshData_groups_members_memberBuilder();
  set member(GrefreshData_groups_members_memberBuilder? member) =>
      _$this._member = member;

  GrefreshData_groups_membersBuilder() {
    GrefreshData_groups_members._initializeBuilder(this);
  }

  GrefreshData_groups_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup.toBuilder();
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_groups_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_groups_members;
  }

  @override
  void update(void Function(GrefreshData_groups_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_groups_members build() => _build();

  _$GrefreshData_groups_members _build() {
    _$GrefreshData_groups_members _$result;
    try {
      _$result = _$v ??
          new _$GrefreshData_groups_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GrefreshData_groups_members', 'G__typename'),
              owedInGroup: owedInGroup.build(),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'owedInGroup';
        owedInGroup.build();
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GrefreshData_groups_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_groups_members_owedInGroup
    extends GrefreshData_groups_members_owedInGroup {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GrefreshData_groups_members_owedInGroup(
          [void Function(GrefreshData_groups_members_owedInGroupBuilder)?
              updates]) =>
      (new GrefreshData_groups_members_owedInGroupBuilder()..update(updates))
          ._build();

  _$GrefreshData_groups_members_owedInGroup._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_groups_members_owedInGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GrefreshData_groups_members_owedInGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GrefreshData_groups_members_owedInGroup', 'currencyId');
  }

  @override
  GrefreshData_groups_members_owedInGroup rebuild(
          void Function(GrefreshData_groups_members_owedInGroupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_groups_members_owedInGroupBuilder toBuilder() =>
      new GrefreshData_groups_members_owedInGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_groups_members_owedInGroup &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GrefreshData_groups_members_owedInGroup')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GrefreshData_groups_members_owedInGroupBuilder
    implements
        Builder<GrefreshData_groups_members_owedInGroup,
            GrefreshData_groups_members_owedInGroupBuilder> {
  _$GrefreshData_groups_members_owedInGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GrefreshData_groups_members_owedInGroupBuilder() {
    GrefreshData_groups_members_owedInGroup._initializeBuilder(this);
  }

  GrefreshData_groups_members_owedInGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_groups_members_owedInGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_groups_members_owedInGroup;
  }

  @override
  void update(
      void Function(GrefreshData_groups_members_owedInGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_groups_members_owedInGroup build() => _build();

  _$GrefreshData_groups_members_owedInGroup _build() {
    final _$result = _$v ??
        new _$GrefreshData_groups_members_owedInGroup._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GrefreshData_groups_members_owedInGroup', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GrefreshData_groups_members_owedInGroup', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GrefreshData_groups_members_owedInGroup', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_groups_members_member
    extends GrefreshData_groups_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GrefreshData_groups_members_member(
          [void Function(GrefreshData_groups_members_memberBuilder)?
              updates]) =>
      (new GrefreshData_groups_members_memberBuilder()..update(updates))
          ._build();

  _$GrefreshData_groups_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_groups_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GrefreshData_groups_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GrefreshData_groups_members_member', 'isSignedUp');
  }

  @override
  GrefreshData_groups_members_member rebuild(
          void Function(GrefreshData_groups_members_memberBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_groups_members_memberBuilder toBuilder() =>
      new GrefreshData_groups_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_groups_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_groups_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GrefreshData_groups_members_memberBuilder
    implements
        Builder<GrefreshData_groups_members_member,
            GrefreshData_groups_members_memberBuilder> {
  _$GrefreshData_groups_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GrefreshData_groups_members_memberBuilder() {
    GrefreshData_groups_members_member._initializeBuilder(this);
  }

  GrefreshData_groups_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_groups_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_groups_members_member;
  }

  @override
  void update(
      void Function(GrefreshData_groups_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_groups_members_member build() => _build();

  _$GrefreshData_groups_members_member _build() {
    final _$result = _$v ??
        new _$GrefreshData_groups_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GrefreshData_groups_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GrefreshData_groups_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GrefreshData_groups_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_interactedUsers extends GrefreshData_interactedUsers {
  @override
  final String G__typename;
  @override
  final BuiltList<String> upiIds;
  @override
  final BuiltList<GrefreshData_interactedUsers_owes> owes;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GrefreshData_interactedUsers(
          [void Function(GrefreshData_interactedUsersBuilder)? updates]) =>
      (new GrefreshData_interactedUsersBuilder()..update(updates))._build();

  _$GrefreshData_interactedUsers._(
      {required this.G__typename,
      required this.upiIds,
      required this.owes,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_interactedUsers', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        upiIds, r'GrefreshData_interactedUsers', 'upiIds');
    BuiltValueNullFieldError.checkNotNull(
        owes, r'GrefreshData_interactedUsers', 'owes');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GrefreshData_interactedUsers', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GrefreshData_interactedUsers', 'isSignedUp');
  }

  @override
  GrefreshData_interactedUsers rebuild(
          void Function(GrefreshData_interactedUsersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_interactedUsersBuilder toBuilder() =>
      new GrefreshData_interactedUsersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_interactedUsers &&
        G__typename == other.G__typename &&
        upiIds == other.upiIds &&
        owes == other.owes &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, upiIds.hashCode);
    _$hash = $jc(_$hash, owes.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_interactedUsers')
          ..add('G__typename', G__typename)
          ..add('upiIds', upiIds)
          ..add('owes', owes)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GrefreshData_interactedUsersBuilder
    implements
        Builder<GrefreshData_interactedUsers,
            GrefreshData_interactedUsersBuilder> {
  _$GrefreshData_interactedUsers? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<String>? _upiIds;
  ListBuilder<String> get upiIds =>
      _$this._upiIds ??= new ListBuilder<String>();
  set upiIds(ListBuilder<String>? upiIds) => _$this._upiIds = upiIds;

  ListBuilder<GrefreshData_interactedUsers_owes>? _owes;
  ListBuilder<GrefreshData_interactedUsers_owes> get owes =>
      _$this._owes ??= new ListBuilder<GrefreshData_interactedUsers_owes>();
  set owes(ListBuilder<GrefreshData_interactedUsers_owes>? owes) =>
      _$this._owes = owes;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GrefreshData_interactedUsersBuilder() {
    GrefreshData_interactedUsers._initializeBuilder(this);
  }

  GrefreshData_interactedUsersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _upiIds = $v.upiIds.toBuilder();
      _owes = $v.owes.toBuilder();
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_interactedUsers other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_interactedUsers;
  }

  @override
  void update(void Function(GrefreshData_interactedUsersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_interactedUsers build() => _build();

  _$GrefreshData_interactedUsers _build() {
    _$GrefreshData_interactedUsers _$result;
    try {
      _$result = _$v ??
          new _$GrefreshData_interactedUsers._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GrefreshData_interactedUsers', 'G__typename'),
              upiIds: upiIds.build(),
              owes: owes.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GrefreshData_interactedUsers', 'id'),
              name: name,
              phone: phone,
              email: email,
              isSignedUp: BuiltValueNullFieldError.checkNotNull(
                  isSignedUp, r'GrefreshData_interactedUsers', 'isSignedUp'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'upiIds';
        upiIds.build();
        _$failedField = 'owes';
        owes.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GrefreshData_interactedUsers', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_interactedUsers_owes
    extends GrefreshData_interactedUsers_owes {
  @override
  final String G__typename;
  @override
  final String groupId;
  @override
  final GrefreshData_interactedUsers_owes_amount amount;

  factory _$GrefreshData_interactedUsers_owes(
          [void Function(GrefreshData_interactedUsers_owesBuilder)? updates]) =>
      (new GrefreshData_interactedUsers_owesBuilder()..update(updates))
          ._build();

  _$GrefreshData_interactedUsers_owes._(
      {required this.G__typename, required this.groupId, required this.amount})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_interactedUsers_owes', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GrefreshData_interactedUsers_owes', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GrefreshData_interactedUsers_owes', 'amount');
  }

  @override
  GrefreshData_interactedUsers_owes rebuild(
          void Function(GrefreshData_interactedUsers_owesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_interactedUsers_owesBuilder toBuilder() =>
      new GrefreshData_interactedUsers_owesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_interactedUsers_owes &&
        G__typename == other.G__typename &&
        groupId == other.groupId &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_interactedUsers_owes')
          ..add('G__typename', G__typename)
          ..add('groupId', groupId)
          ..add('amount', amount))
        .toString();
  }
}

class GrefreshData_interactedUsers_owesBuilder
    implements
        Builder<GrefreshData_interactedUsers_owes,
            GrefreshData_interactedUsers_owesBuilder> {
  _$GrefreshData_interactedUsers_owes? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GrefreshData_interactedUsers_owes_amountBuilder? _amount;
  GrefreshData_interactedUsers_owes_amountBuilder get amount =>
      _$this._amount ??= new GrefreshData_interactedUsers_owes_amountBuilder();
  set amount(GrefreshData_interactedUsers_owes_amountBuilder? amount) =>
      _$this._amount = amount;

  GrefreshData_interactedUsers_owesBuilder() {
    GrefreshData_interactedUsers_owes._initializeBuilder(this);
  }

  GrefreshData_interactedUsers_owesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _groupId = $v.groupId;
      _amount = $v.amount.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_interactedUsers_owes other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_interactedUsers_owes;
  }

  @override
  void update(
      void Function(GrefreshData_interactedUsers_owesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_interactedUsers_owes build() => _build();

  _$GrefreshData_interactedUsers_owes _build() {
    _$GrefreshData_interactedUsers_owes _$result;
    try {
      _$result = _$v ??
          new _$GrefreshData_interactedUsers_owes._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GrefreshData_interactedUsers_owes', 'G__typename'),
              groupId: BuiltValueNullFieldError.checkNotNull(
                  groupId, r'GrefreshData_interactedUsers_owes', 'groupId'),
              amount: amount.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GrefreshData_interactedUsers_owes', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_interactedUsers_owes_amount
    extends GrefreshData_interactedUsers_owes_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GrefreshData_interactedUsers_owes_amount(
          [void Function(GrefreshData_interactedUsers_owes_amountBuilder)?
              updates]) =>
      (new GrefreshData_interactedUsers_owes_amountBuilder()..update(updates))
          ._build();

  _$GrefreshData_interactedUsers_owes_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GrefreshData_interactedUsers_owes_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GrefreshData_interactedUsers_owes_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GrefreshData_interactedUsers_owes_amount', 'currencyId');
  }

  @override
  GrefreshData_interactedUsers_owes_amount rebuild(
          void Function(GrefreshData_interactedUsers_owes_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_interactedUsers_owes_amountBuilder toBuilder() =>
      new GrefreshData_interactedUsers_owes_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_interactedUsers_owes_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GrefreshData_interactedUsers_owes_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GrefreshData_interactedUsers_owes_amountBuilder
    implements
        Builder<GrefreshData_interactedUsers_owes_amount,
            GrefreshData_interactedUsers_owes_amountBuilder> {
  _$GrefreshData_interactedUsers_owes_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GrefreshData_interactedUsers_owes_amountBuilder() {
    GrefreshData_interactedUsers_owes_amount._initializeBuilder(this);
  }

  GrefreshData_interactedUsers_owes_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_interactedUsers_owes_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_interactedUsers_owes_amount;
  }

  @override
  void update(
      void Function(GrefreshData_interactedUsers_owes_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_interactedUsers_owes_amount build() => _build();

  _$GrefreshData_interactedUsers_owes_amount _build() {
    final _$result = _$v ??
        new _$GrefreshData_interactedUsers_owes_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GrefreshData_interactedUsers_owes_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GrefreshData_interactedUsers_owes_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GrefreshData_interactedUsers_owes_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GrefreshData_currencies extends GrefreshData_currencies {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final double rate;
  @override
  final String symbol;
  @override
  final String displayName;
  @override
  final int decimals;

  factory _$GrefreshData_currencies(
          [void Function(GrefreshData_currenciesBuilder)? updates]) =>
      (new GrefreshData_currenciesBuilder()..update(updates))._build();

  _$GrefreshData_currencies._(
      {required this.G__typename,
      required this.id,
      required this.rate,
      required this.symbol,
      required this.displayName,
      required this.decimals})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GrefreshData_currencies', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GrefreshData_currencies', 'id');
    BuiltValueNullFieldError.checkNotNull(
        rate, r'GrefreshData_currencies', 'rate');
    BuiltValueNullFieldError.checkNotNull(
        symbol, r'GrefreshData_currencies', 'symbol');
    BuiltValueNullFieldError.checkNotNull(
        displayName, r'GrefreshData_currencies', 'displayName');
    BuiltValueNullFieldError.checkNotNull(
        decimals, r'GrefreshData_currencies', 'decimals');
  }

  @override
  GrefreshData_currencies rebuild(
          void Function(GrefreshData_currenciesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GrefreshData_currenciesBuilder toBuilder() =>
      new GrefreshData_currenciesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GrefreshData_currencies &&
        G__typename == other.G__typename &&
        id == other.id &&
        rate == other.rate &&
        symbol == other.symbol &&
        displayName == other.displayName &&
        decimals == other.decimals;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, rate.hashCode);
    _$hash = $jc(_$hash, symbol.hashCode);
    _$hash = $jc(_$hash, displayName.hashCode);
    _$hash = $jc(_$hash, decimals.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GrefreshData_currencies')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('rate', rate)
          ..add('symbol', symbol)
          ..add('displayName', displayName)
          ..add('decimals', decimals))
        .toString();
  }
}

class GrefreshData_currenciesBuilder
    implements
        Builder<GrefreshData_currencies, GrefreshData_currenciesBuilder> {
  _$GrefreshData_currencies? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  double? _rate;
  double? get rate => _$this._rate;
  set rate(double? rate) => _$this._rate = rate;

  String? _symbol;
  String? get symbol => _$this._symbol;
  set symbol(String? symbol) => _$this._symbol = symbol;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  int? _decimals;
  int? get decimals => _$this._decimals;
  set decimals(int? decimals) => _$this._decimals = decimals;

  GrefreshData_currenciesBuilder() {
    GrefreshData_currencies._initializeBuilder(this);
  }

  GrefreshData_currenciesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _rate = $v.rate;
      _symbol = $v.symbol;
      _displayName = $v.displayName;
      _decimals = $v.decimals;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GrefreshData_currencies other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GrefreshData_currencies;
  }

  @override
  void update(void Function(GrefreshData_currenciesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GrefreshData_currencies build() => _build();

  _$GrefreshData_currencies _build() {
    final _$result = _$v ??
        new _$GrefreshData_currencies._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GrefreshData_currencies', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GrefreshData_currencies', 'id'),
            rate: BuiltValueNullFieldError.checkNotNull(
                rate, r'GrefreshData_currencies', 'rate'),
            symbol: BuiltValueNullFieldError.checkNotNull(
                symbol, r'GrefreshData_currencies', 'symbol'),
            displayName: BuiltValueNullFieldError.checkNotNull(
                displayName, r'GrefreshData_currencies', 'displayName'),
            decimals: BuiltValueNullFieldError.checkNotNull(
                decimals, r'GrefreshData_currencies', 'decimals'));
    replace(_$result);
    return _$result;
  }
}

class _$GcurrenciesData extends GcurrenciesData {
  @override
  final String G__typename;
  @override
  final BuiltList<GcurrenciesData_currencies> currencies;

  factory _$GcurrenciesData([void Function(GcurrenciesDataBuilder)? updates]) =>
      (new GcurrenciesDataBuilder()..update(updates))._build();

  _$GcurrenciesData._({required this.G__typename, required this.currencies})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GcurrenciesData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        currencies, r'GcurrenciesData', 'currencies');
  }

  @override
  GcurrenciesData rebuild(void Function(GcurrenciesDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrenciesDataBuilder toBuilder() =>
      new GcurrenciesDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrenciesData &&
        G__typename == other.G__typename &&
        currencies == other.currencies;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, currencies.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GcurrenciesData')
          ..add('G__typename', G__typename)
          ..add('currencies', currencies))
        .toString();
  }
}

class GcurrenciesDataBuilder
    implements Builder<GcurrenciesData, GcurrenciesDataBuilder> {
  _$GcurrenciesData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GcurrenciesData_currencies>? _currencies;
  ListBuilder<GcurrenciesData_currencies> get currencies =>
      _$this._currencies ??= new ListBuilder<GcurrenciesData_currencies>();
  set currencies(ListBuilder<GcurrenciesData_currencies>? currencies) =>
      _$this._currencies = currencies;

  GcurrenciesDataBuilder() {
    GcurrenciesData._initializeBuilder(this);
  }

  GcurrenciesDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _currencies = $v.currencies.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrenciesData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrenciesData;
  }

  @override
  void update(void Function(GcurrenciesDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrenciesData build() => _build();

  _$GcurrenciesData _build() {
    _$GcurrenciesData _$result;
    try {
      _$result = _$v ??
          new _$GcurrenciesData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GcurrenciesData', 'G__typename'),
              currencies: currencies.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'currencies';
        currencies.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcurrenciesData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcurrenciesData_currencies extends GcurrenciesData_currencies {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final double rate;
  @override
  final String symbol;
  @override
  final String displayName;
  @override
  final int decimals;

  factory _$GcurrenciesData_currencies(
          [void Function(GcurrenciesData_currenciesBuilder)? updates]) =>
      (new GcurrenciesData_currenciesBuilder()..update(updates))._build();

  _$GcurrenciesData_currencies._(
      {required this.G__typename,
      required this.id,
      required this.rate,
      required this.symbol,
      required this.displayName,
      required this.decimals})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GcurrenciesData_currencies', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcurrenciesData_currencies', 'id');
    BuiltValueNullFieldError.checkNotNull(
        rate, r'GcurrenciesData_currencies', 'rate');
    BuiltValueNullFieldError.checkNotNull(
        symbol, r'GcurrenciesData_currencies', 'symbol');
    BuiltValueNullFieldError.checkNotNull(
        displayName, r'GcurrenciesData_currencies', 'displayName');
    BuiltValueNullFieldError.checkNotNull(
        decimals, r'GcurrenciesData_currencies', 'decimals');
  }

  @override
  GcurrenciesData_currencies rebuild(
          void Function(GcurrenciesData_currenciesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrenciesData_currenciesBuilder toBuilder() =>
      new GcurrenciesData_currenciesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrenciesData_currencies &&
        G__typename == other.G__typename &&
        id == other.id &&
        rate == other.rate &&
        symbol == other.symbol &&
        displayName == other.displayName &&
        decimals == other.decimals;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, rate.hashCode);
    _$hash = $jc(_$hash, symbol.hashCode);
    _$hash = $jc(_$hash, displayName.hashCode);
    _$hash = $jc(_$hash, decimals.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GcurrenciesData_currencies')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('rate', rate)
          ..add('symbol', symbol)
          ..add('displayName', displayName)
          ..add('decimals', decimals))
        .toString();
  }
}

class GcurrenciesData_currenciesBuilder
    implements
        Builder<GcurrenciesData_currencies, GcurrenciesData_currenciesBuilder> {
  _$GcurrenciesData_currencies? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  double? _rate;
  double? get rate => _$this._rate;
  set rate(double? rate) => _$this._rate = rate;

  String? _symbol;
  String? get symbol => _$this._symbol;
  set symbol(String? symbol) => _$this._symbol = symbol;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  int? _decimals;
  int? get decimals => _$this._decimals;
  set decimals(int? decimals) => _$this._decimals = decimals;

  GcurrenciesData_currenciesBuilder() {
    GcurrenciesData_currencies._initializeBuilder(this);
  }

  GcurrenciesData_currenciesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _rate = $v.rate;
      _symbol = $v.symbol;
      _displayName = $v.displayName;
      _decimals = $v.decimals;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrenciesData_currencies other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrenciesData_currencies;
  }

  @override
  void update(void Function(GcurrenciesData_currenciesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrenciesData_currencies build() => _build();

  _$GcurrenciesData_currencies _build() {
    final _$result = _$v ??
        new _$GcurrenciesData_currencies._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GcurrenciesData_currencies', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GcurrenciesData_currencies', 'id'),
            rate: BuiltValueNullFieldError.checkNotNull(
                rate, r'GcurrenciesData_currencies', 'rate'),
            symbol: BuiltValueNullFieldError.checkNotNull(
                symbol, r'GcurrenciesData_currencies', 'symbol'),
            displayName: BuiltValueNullFieldError.checkNotNull(
                displayName, r'GcurrenciesData_currencies', 'displayName'),
            decimals: BuiltValueNullFieldError.checkNotNull(
                decimals, r'GcurrenciesData_currencies', 'decimals'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData extends GgroupData {
  @override
  final String G__typename;
  @override
  final GgroupData_group group;

  factory _$GgroupData([void Function(GgroupDataBuilder)? updates]) =>
      (new GgroupDataBuilder()..update(updates))._build();

  _$GgroupData._({required this.G__typename, required this.group}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(group, r'GgroupData', 'group');
  }

  @override
  GgroupData rebuild(void Function(GgroupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupDataBuilder toBuilder() => new GgroupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData &&
        G__typename == other.G__typename &&
        group == other.group;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData')
          ..add('G__typename', G__typename)
          ..add('group', group))
        .toString();
  }
}

class GgroupDataBuilder implements Builder<GgroupData, GgroupDataBuilder> {
  _$GgroupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgroupData_groupBuilder? _group;
  GgroupData_groupBuilder get group =>
      _$this._group ??= new GgroupData_groupBuilder();
  set group(GgroupData_groupBuilder? group) => _$this._group = group;

  GgroupDataBuilder() {
    GgroupData._initializeBuilder(this);
  }

  GgroupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _group = $v.group.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData;
  }

  @override
  void update(void Function(GgroupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData build() => _build();

  _$GgroupData _build() {
    _$GgroupData _$result;
    try {
      _$result = _$v ??
          new _$GgroupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData', 'G__typename'),
              group: group.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'group';
        group.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group extends GgroupData_group {
  @override
  final String G__typename;
  @override
  final BuiltList<GgroupData_group_expenses> expenses;
  @override
  final GgroupData_group_creator creator;
  @override
  final BuiltList<GgroupData_group_members> members;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$GgroupData_group(
          [void Function(GgroupData_groupBuilder)? updates]) =>
      (new GgroupData_groupBuilder()..update(updates))._build();

  _$GgroupData_group._(
      {required this.G__typename,
      required this.expenses,
      required this.creator,
      required this.members,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        expenses, r'GgroupData_group', 'expenses');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GgroupData_group', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GgroupData_group', 'members');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgroupData_group', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(id, r'GgroupData_group', 'id');
  }

  @override
  GgroupData_group rebuild(void Function(GgroupData_groupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_groupBuilder toBuilder() =>
      new GgroupData_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group &&
        G__typename == other.G__typename &&
        expenses == other.expenses &&
        creator == other.creator &&
        members == other.members &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expenses.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group')
          ..add('G__typename', G__typename)
          ..add('expenses', expenses)
          ..add('creator', creator)
          ..add('members', members)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GgroupData_groupBuilder
    implements Builder<GgroupData_group, GgroupData_groupBuilder> {
  _$GgroupData_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GgroupData_group_expenses>? _expenses;
  ListBuilder<GgroupData_group_expenses> get expenses =>
      _$this._expenses ??= new ListBuilder<GgroupData_group_expenses>();
  set expenses(ListBuilder<GgroupData_group_expenses>? expenses) =>
      _$this._expenses = expenses;

  GgroupData_group_creatorBuilder? _creator;
  GgroupData_group_creatorBuilder get creator =>
      _$this._creator ??= new GgroupData_group_creatorBuilder();
  set creator(GgroupData_group_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GgroupData_group_members>? _members;
  ListBuilder<GgroupData_group_members> get members =>
      _$this._members ??= new ListBuilder<GgroupData_group_members>();
  set members(ListBuilder<GgroupData_group_members>? members) =>
      _$this._members = members;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GgroupData_groupBuilder() {
    GgroupData_group._initializeBuilder(this);
  }

  GgroupData_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expenses = $v.expenses.toBuilder();
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group;
  }

  @override
  void update(void Function(GgroupData_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group build() => _build();

  _$GgroupData_group _build() {
    _$GgroupData_group _$result;
    try {
      _$result = _$v ??
          new _$GgroupData_group._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData_group', 'G__typename'),
              expenses: expenses.build(),
              creator: creator.build(),
              members: members.build(),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgroupData_group', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgroupData_group', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expenses';
        expenses.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData_group', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses extends GgroupData_group_expenses {
  @override
  final String G__typename;
  @override
  final GgroupData_group_expenses_creator creator;
  @override
  final BuiltList<GgroupData_group_expenses_splits> splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GgroupData_group_expenses_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GgroupData_group_expenses(
          [void Function(GgroupData_group_expensesBuilder)? updates]) =>
      (new GgroupData_group_expensesBuilder()..update(updates))._build();

  _$GgroupData_group_expenses._(
      {required this.G__typename,
      required this.creator,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GgroupData_group_expenses', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GgroupData_group_expenses', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GgroupData_group_expenses', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgroupData_group_expenses', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GgroupData_group_expenses', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgroupData_group_expenses', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GgroupData_group_expenses', 'creatorId');
  }

  @override
  GgroupData_group_expenses rebuild(
          void Function(GgroupData_group_expensesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expensesBuilder toBuilder() =>
      new GgroupData_group_expensesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_expenses')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GgroupData_group_expensesBuilder
    implements
        Builder<GgroupData_group_expenses, GgroupData_group_expensesBuilder> {
  _$GgroupData_group_expenses? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgroupData_group_expenses_creatorBuilder? _creator;
  GgroupData_group_expenses_creatorBuilder get creator =>
      _$this._creator ??= new GgroupData_group_expenses_creatorBuilder();
  set creator(GgroupData_group_expenses_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GgroupData_group_expenses_splits>? _splits;
  ListBuilder<GgroupData_group_expenses_splits> get splits =>
      _$this._splits ??= new ListBuilder<GgroupData_group_expenses_splits>();
  set splits(ListBuilder<GgroupData_group_expenses_splits>? splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GgroupData_group_expenses_amountBuilder? _amount;
  GgroupData_group_expenses_amountBuilder get amount =>
      _$this._amount ??= new GgroupData_group_expenses_amountBuilder();
  set amount(GgroupData_group_expenses_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GgroupData_group_expensesBuilder() {
    GgroupData_group_expenses._initializeBuilder(this);
  }

  GgroupData_group_expensesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses;
  }

  @override
  void update(void Function(GgroupData_group_expensesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses build() => _build();

  _$GgroupData_group_expenses _build() {
    _$GgroupData_group_expenses _$result;
    try {
      _$result = _$v ??
          new _$GgroupData_group_expenses._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData_group_expenses', 'G__typename'),
              creator: creator.build(),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgroupData_group_expenses', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GgroupData_group_expenses', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgroupData_group_expenses', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GgroupData_group_expenses', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GgroupData_group_expenses', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'splits';
        splits.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData_group_expenses', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_creator
    extends GgroupData_group_expenses_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_expenses_creator(
          [void Function(GgroupData_group_expenses_creatorBuilder)? updates]) =>
      (new GgroupData_group_expenses_creatorBuilder()..update(updates))
          ._build();

  _$GgroupData_group_expenses_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_expenses_creator', 'isSignedUp');
  }

  @override
  GgroupData_group_expenses_creator rebuild(
          void Function(GgroupData_group_expenses_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_creatorBuilder toBuilder() =>
      new GgroupData_group_expenses_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_expenses_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_expenses_creatorBuilder
    implements
        Builder<GgroupData_group_expenses_creator,
            GgroupData_group_expenses_creatorBuilder> {
  _$GgroupData_group_expenses_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_expenses_creatorBuilder() {
    GgroupData_group_expenses_creator._initializeBuilder(this);
  }

  GgroupData_group_expenses_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_creator;
  }

  @override
  void update(
      void Function(GgroupData_group_expenses_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_creator build() => _build();

  _$GgroupData_group_expenses_creator _build() {
    final _$result = _$v ??
        new _$GgroupData_group_expenses_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_expenses_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_expenses_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgroupData_group_expenses_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_splits
    extends GgroupData_group_expenses_splits {
  @override
  final String G__typename;
  @override
  final GgroupData_group_expenses_splits_fromUser fromUser;
  @override
  final GgroupData_group_expenses_splits_toUser toUser;
  @override
  final String id;
  @override
  final GgroupData_group_expenses_splits_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GgroupData_group_expenses_splits(
          [void Function(GgroupData_group_expenses_splitsBuilder)? updates]) =>
      (new GgroupData_group_expenses_splitsBuilder()..update(updates))._build();

  _$GgroupData_group_expenses_splits._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GgroupData_group_expenses_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GgroupData_group_expenses_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgroupData_group_expenses_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GgroupData_group_expenses_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgroupData_group_expenses_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GgroupData_group_expenses_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GgroupData_group_expenses_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GgroupData_group_expenses_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GgroupData_group_expenses_splits', 'groupId');
  }

  @override
  GgroupData_group_expenses_splits rebuild(
          void Function(GgroupData_group_expenses_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_splitsBuilder toBuilder() =>
      new GgroupData_group_expenses_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_splits &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_expenses_splits')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GgroupData_group_expenses_splitsBuilder
    implements
        Builder<GgroupData_group_expenses_splits,
            GgroupData_group_expenses_splitsBuilder> {
  _$GgroupData_group_expenses_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgroupData_group_expenses_splits_fromUserBuilder? _fromUser;
  GgroupData_group_expenses_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GgroupData_group_expenses_splits_fromUserBuilder();
  set fromUser(GgroupData_group_expenses_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GgroupData_group_expenses_splits_toUserBuilder? _toUser;
  GgroupData_group_expenses_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new GgroupData_group_expenses_splits_toUserBuilder();
  set toUser(GgroupData_group_expenses_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GgroupData_group_expenses_splits_amountBuilder? _amount;
  GgroupData_group_expenses_splits_amountBuilder get amount =>
      _$this._amount ??= new GgroupData_group_expenses_splits_amountBuilder();
  set amount(GgroupData_group_expenses_splits_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GgroupData_group_expenses_splitsBuilder() {
    GgroupData_group_expenses_splits._initializeBuilder(this);
  }

  GgroupData_group_expenses_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_splits;
  }

  @override
  void update(void Function(GgroupData_group_expenses_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_splits build() => _build();

  _$GgroupData_group_expenses_splits _build() {
    _$GgroupData_group_expenses_splits _$result;
    try {
      _$result = _$v ??
          new _$GgroupData_group_expenses_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData_group_expenses_splits', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgroupData_group_expenses_splits', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GgroupData_group_expenses_splits', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgroupData_group_expenses_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GgroupData_group_expenses_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GgroupData_group_expenses_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GgroupData_group_expenses_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GgroupData_group_expenses_splits', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData_group_expenses_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_splits_fromUser
    extends GgroupData_group_expenses_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_expenses_splits_fromUser(
          [void Function(GgroupData_group_expenses_splits_fromUserBuilder)?
              updates]) =>
      (new GgroupData_group_expenses_splits_fromUserBuilder()..update(updates))
          ._build();

  _$GgroupData_group_expenses_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgroupData_group_expenses_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_expenses_splits_fromUser', 'isSignedUp');
  }

  @override
  GgroupData_group_expenses_splits_fromUser rebuild(
          void Function(GgroupData_group_expenses_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_splits_fromUserBuilder toBuilder() =>
      new GgroupData_group_expenses_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgroupData_group_expenses_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_expenses_splits_fromUserBuilder
    implements
        Builder<GgroupData_group_expenses_splits_fromUser,
            GgroupData_group_expenses_splits_fromUserBuilder> {
  _$GgroupData_group_expenses_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_expenses_splits_fromUserBuilder() {
    GgroupData_group_expenses_splits_fromUser._initializeBuilder(this);
  }

  GgroupData_group_expenses_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_splits_fromUser;
  }

  @override
  void update(
      void Function(GgroupData_group_expenses_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_splits_fromUser build() => _build();

  _$GgroupData_group_expenses_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GgroupData_group_expenses_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_expenses_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_expenses_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgroupData_group_expenses_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_splits_toUser
    extends GgroupData_group_expenses_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_expenses_splits_toUser(
          [void Function(GgroupData_group_expenses_splits_toUserBuilder)?
              updates]) =>
      (new GgroupData_group_expenses_splits_toUserBuilder()..update(updates))
          ._build();

  _$GgroupData_group_expenses_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_expenses_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_expenses_splits_toUser', 'isSignedUp');
  }

  @override
  GgroupData_group_expenses_splits_toUser rebuild(
          void Function(GgroupData_group_expenses_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_splits_toUserBuilder toBuilder() =>
      new GgroupData_group_expenses_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgroupData_group_expenses_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_expenses_splits_toUserBuilder
    implements
        Builder<GgroupData_group_expenses_splits_toUser,
            GgroupData_group_expenses_splits_toUserBuilder> {
  _$GgroupData_group_expenses_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_expenses_splits_toUserBuilder() {
    GgroupData_group_expenses_splits_toUser._initializeBuilder(this);
  }

  GgroupData_group_expenses_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_splits_toUser;
  }

  @override
  void update(
      void Function(GgroupData_group_expenses_splits_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_splits_toUser build() => _build();

  _$GgroupData_group_expenses_splits_toUser _build() {
    final _$result = _$v ??
        new _$GgroupData_group_expenses_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_expenses_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_expenses_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgroupData_group_expenses_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_splits_amount
    extends GgroupData_group_expenses_splits_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GgroupData_group_expenses_splits_amount(
          [void Function(GgroupData_group_expenses_splits_amountBuilder)?
              updates]) =>
      (new GgroupData_group_expenses_splits_amountBuilder()..update(updates))
          ._build();

  _$GgroupData_group_expenses_splits_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses_splits_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgroupData_group_expenses_splits_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GgroupData_group_expenses_splits_amount', 'currencyId');
  }

  @override
  GgroupData_group_expenses_splits_amount rebuild(
          void Function(GgroupData_group_expenses_splits_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_splits_amountBuilder toBuilder() =>
      new GgroupData_group_expenses_splits_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_splits_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgroupData_group_expenses_splits_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GgroupData_group_expenses_splits_amountBuilder
    implements
        Builder<GgroupData_group_expenses_splits_amount,
            GgroupData_group_expenses_splits_amountBuilder> {
  _$GgroupData_group_expenses_splits_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GgroupData_group_expenses_splits_amountBuilder() {
    GgroupData_group_expenses_splits_amount._initializeBuilder(this);
  }

  GgroupData_group_expenses_splits_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_splits_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_splits_amount;
  }

  @override
  void update(
      void Function(GgroupData_group_expenses_splits_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_splits_amount build() => _build();

  _$GgroupData_group_expenses_splits_amount _build() {
    final _$result = _$v ??
        new _$GgroupData_group_expenses_splits_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_expenses_splits_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GgroupData_group_expenses_splits_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GgroupData_group_expenses_splits_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_expenses_amount
    extends GgroupData_group_expenses_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GgroupData_group_expenses_amount(
          [void Function(GgroupData_group_expenses_amountBuilder)? updates]) =>
      (new GgroupData_group_expenses_amountBuilder()..update(updates))._build();

  _$GgroupData_group_expenses_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_expenses_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgroupData_group_expenses_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GgroupData_group_expenses_amount', 'currencyId');
  }

  @override
  GgroupData_group_expenses_amount rebuild(
          void Function(GgroupData_group_expenses_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_expenses_amountBuilder toBuilder() =>
      new GgroupData_group_expenses_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_expenses_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_expenses_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GgroupData_group_expenses_amountBuilder
    implements
        Builder<GgroupData_group_expenses_amount,
            GgroupData_group_expenses_amountBuilder> {
  _$GgroupData_group_expenses_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GgroupData_group_expenses_amountBuilder() {
    GgroupData_group_expenses_amount._initializeBuilder(this);
  }

  GgroupData_group_expenses_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_expenses_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_expenses_amount;
  }

  @override
  void update(void Function(GgroupData_group_expenses_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_expenses_amount build() => _build();

  _$GgroupData_group_expenses_amount _build() {
    final _$result = _$v ??
        new _$GgroupData_group_expenses_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_expenses_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GgroupData_group_expenses_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GgroupData_group_expenses_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_creator extends GgroupData_group_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_creator(
          [void Function(GgroupData_group_creatorBuilder)? updates]) =>
      (new GgroupData_group_creatorBuilder()..update(updates))._build();

  _$GgroupData_group_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_creator', 'isSignedUp');
  }

  @override
  GgroupData_group_creator rebuild(
          void Function(GgroupData_group_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_creatorBuilder toBuilder() =>
      new GgroupData_group_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_creatorBuilder
    implements
        Builder<GgroupData_group_creator, GgroupData_group_creatorBuilder> {
  _$GgroupData_group_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_creatorBuilder() {
    GgroupData_group_creator._initializeBuilder(this);
  }

  GgroupData_group_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_creator;
  }

  @override
  void update(void Function(GgroupData_group_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_creator build() => _build();

  _$GgroupData_group_creator _build() {
    final _$result = _$v ??
        new _$GgroupData_group_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GgroupData_group_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GgroupData_group_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_members extends GgroupData_group_members {
  @override
  final String G__typename;
  @override
  final BuiltList<GgroupData_group_members_owedInGroup> owedInGroup;
  @override
  final GgroupData_group_members_member member;

  factory _$GgroupData_group_members(
          [void Function(GgroupData_group_membersBuilder)? updates]) =>
      (new GgroupData_group_membersBuilder()..update(updates))._build();

  _$GgroupData_group_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GgroupData_group_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GgroupData_group_members', 'member');
  }

  @override
  GgroupData_group_members rebuild(
          void Function(GgroupData_group_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_membersBuilder toBuilder() =>
      new GgroupData_group_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GgroupData_group_membersBuilder
    implements
        Builder<GgroupData_group_members, GgroupData_group_membersBuilder> {
  _$GgroupData_group_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GgroupData_group_members_owedInGroup>? _owedInGroup;
  ListBuilder<GgroupData_group_members_owedInGroup> get owedInGroup =>
      _$this._owedInGroup ??=
          new ListBuilder<GgroupData_group_members_owedInGroup>();
  set owedInGroup(
          ListBuilder<GgroupData_group_members_owedInGroup>? owedInGroup) =>
      _$this._owedInGroup = owedInGroup;

  GgroupData_group_members_memberBuilder? _member;
  GgroupData_group_members_memberBuilder get member =>
      _$this._member ??= new GgroupData_group_members_memberBuilder();
  set member(GgroupData_group_members_memberBuilder? member) =>
      _$this._member = member;

  GgroupData_group_membersBuilder() {
    GgroupData_group_members._initializeBuilder(this);
  }

  GgroupData_group_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup.toBuilder();
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_members;
  }

  @override
  void update(void Function(GgroupData_group_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_members build() => _build();

  _$GgroupData_group_members _build() {
    _$GgroupData_group_members _$result;
    try {
      _$result = _$v ??
          new _$GgroupData_group_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgroupData_group_members', 'G__typename'),
              owedInGroup: owedInGroup.build(),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'owedInGroup';
        owedInGroup.build();
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgroupData_group_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_members_owedInGroup
    extends GgroupData_group_members_owedInGroup {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GgroupData_group_members_owedInGroup(
          [void Function(GgroupData_group_members_owedInGroupBuilder)?
              updates]) =>
      (new GgroupData_group_members_owedInGroupBuilder()..update(updates))
          ._build();

  _$GgroupData_group_members_owedInGroup._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_members_owedInGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgroupData_group_members_owedInGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GgroupData_group_members_owedInGroup', 'currencyId');
  }

  @override
  GgroupData_group_members_owedInGroup rebuild(
          void Function(GgroupData_group_members_owedInGroupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_members_owedInGroupBuilder toBuilder() =>
      new GgroupData_group_members_owedInGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_members_owedInGroup &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_members_owedInGroup')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GgroupData_group_members_owedInGroupBuilder
    implements
        Builder<GgroupData_group_members_owedInGroup,
            GgroupData_group_members_owedInGroupBuilder> {
  _$GgroupData_group_members_owedInGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GgroupData_group_members_owedInGroupBuilder() {
    GgroupData_group_members_owedInGroup._initializeBuilder(this);
  }

  GgroupData_group_members_owedInGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_members_owedInGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_members_owedInGroup;
  }

  @override
  void update(
      void Function(GgroupData_group_members_owedInGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_members_owedInGroup build() => _build();

  _$GgroupData_group_members_owedInGroup _build() {
    final _$result = _$v ??
        new _$GgroupData_group_members_owedInGroup._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgroupData_group_members_owedInGroup', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GgroupData_group_members_owedInGroup', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GgroupData_group_members_owedInGroup', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GgroupData_group_members_member
    extends GgroupData_group_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgroupData_group_members_member(
          [void Function(GgroupData_group_members_memberBuilder)? updates]) =>
      (new GgroupData_group_members_memberBuilder()..update(updates))._build();

  _$GgroupData_group_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgroupData_group_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgroupData_group_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgroupData_group_members_member', 'isSignedUp');
  }

  @override
  GgroupData_group_members_member rebuild(
          void Function(GgroupData_group_members_memberBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgroupData_group_members_memberBuilder toBuilder() =>
      new GgroupData_group_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgroupData_group_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgroupData_group_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgroupData_group_members_memberBuilder
    implements
        Builder<GgroupData_group_members_member,
            GgroupData_group_members_memberBuilder> {
  _$GgroupData_group_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgroupData_group_members_memberBuilder() {
    GgroupData_group_members_member._initializeBuilder(this);
  }

  GgroupData_group_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgroupData_group_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgroupData_group_members_member;
  }

  @override
  void update(void Function(GgroupData_group_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgroupData_group_members_member build() => _build();

  _$GgroupData_group_members_member _build() {
    final _$result = _$v ??
        new _$GgroupData_group_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GgroupData_group_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgroupData_group_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GgroupData_group_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsignupData extends GsignupData {
  @override
  final String G__typename;
  @override
  final GsignupData_signup signup;

  factory _$GsignupData([void Function(GsignupDataBuilder)? updates]) =>
      (new GsignupDataBuilder()..update(updates))._build();

  _$GsignupData._({required this.G__typename, required this.signup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsignupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(signup, r'GsignupData', 'signup');
  }

  @override
  GsignupData rebuild(void Function(GsignupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsignupDataBuilder toBuilder() => new GsignupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsignupData &&
        G__typename == other.G__typename &&
        signup == other.signup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, signup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsignupData')
          ..add('G__typename', G__typename)
          ..add('signup', signup))
        .toString();
  }
}

class GsignupDataBuilder implements Builder<GsignupData, GsignupDataBuilder> {
  _$GsignupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsignupData_signupBuilder? _signup;
  GsignupData_signupBuilder get signup =>
      _$this._signup ??= new GsignupData_signupBuilder();
  set signup(GsignupData_signupBuilder? signup) => _$this._signup = signup;

  GsignupDataBuilder() {
    GsignupData._initializeBuilder(this);
  }

  GsignupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _signup = $v.signup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsignupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsignupData;
  }

  @override
  void update(void Function(GsignupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsignupData build() => _build();

  _$GsignupData _build() {
    _$GsignupData _$result;
    try {
      _$result = _$v ??
          new _$GsignupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsignupData', 'G__typename'),
              signup: signup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'signup';
        signup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsignupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsignupData_signup extends GsignupData_signup {
  @override
  final String G__typename;
  @override
  final GsignupData_signup_user user;
  @override
  final GsignupData_signup_tokens tokens;

  factory _$GsignupData_signup(
          [void Function(GsignupData_signupBuilder)? updates]) =>
      (new GsignupData_signupBuilder()..update(updates))._build();

  _$GsignupData_signup._(
      {required this.G__typename, required this.user, required this.tokens})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsignupData_signup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(user, r'GsignupData_signup', 'user');
    BuiltValueNullFieldError.checkNotNull(
        tokens, r'GsignupData_signup', 'tokens');
  }

  @override
  GsignupData_signup rebuild(
          void Function(GsignupData_signupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsignupData_signupBuilder toBuilder() =>
      new GsignupData_signupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsignupData_signup &&
        G__typename == other.G__typename &&
        user == other.user &&
        tokens == other.tokens;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jc(_$hash, tokens.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsignupData_signup')
          ..add('G__typename', G__typename)
          ..add('user', user)
          ..add('tokens', tokens))
        .toString();
  }
}

class GsignupData_signupBuilder
    implements Builder<GsignupData_signup, GsignupData_signupBuilder> {
  _$GsignupData_signup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsignupData_signup_userBuilder? _user;
  GsignupData_signup_userBuilder get user =>
      _$this._user ??= new GsignupData_signup_userBuilder();
  set user(GsignupData_signup_userBuilder? user) => _$this._user = user;

  GsignupData_signup_tokensBuilder? _tokens;
  GsignupData_signup_tokensBuilder get tokens =>
      _$this._tokens ??= new GsignupData_signup_tokensBuilder();
  set tokens(GsignupData_signup_tokensBuilder? tokens) =>
      _$this._tokens = tokens;

  GsignupData_signupBuilder() {
    GsignupData_signup._initializeBuilder(this);
  }

  GsignupData_signupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _user = $v.user.toBuilder();
      _tokens = $v.tokens.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsignupData_signup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsignupData_signup;
  }

  @override
  void update(void Function(GsignupData_signupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsignupData_signup build() => _build();

  _$GsignupData_signup _build() {
    _$GsignupData_signup _$result;
    try {
      _$result = _$v ??
          new _$GsignupData_signup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsignupData_signup', 'G__typename'),
              user: user.build(),
              tokens: tokens.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'user';
        user.build();
        _$failedField = 'tokens';
        tokens.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsignupData_signup', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsignupData_signup_user extends GsignupData_signup_user {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsignupData_signup_user(
          [void Function(GsignupData_signup_userBuilder)? updates]) =>
      (new GsignupData_signup_userBuilder()..update(updates))._build();

  _$GsignupData_signup_user._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsignupData_signup_user', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GsignupData_signup_user', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsignupData_signup_user', 'isSignedUp');
  }

  @override
  GsignupData_signup_user rebuild(
          void Function(GsignupData_signup_userBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsignupData_signup_userBuilder toBuilder() =>
      new GsignupData_signup_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsignupData_signup_user &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsignupData_signup_user')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsignupData_signup_userBuilder
    implements
        Builder<GsignupData_signup_user, GsignupData_signup_userBuilder> {
  _$GsignupData_signup_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsignupData_signup_userBuilder() {
    GsignupData_signup_user._initializeBuilder(this);
  }

  GsignupData_signup_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsignupData_signup_user other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsignupData_signup_user;
  }

  @override
  void update(void Function(GsignupData_signup_userBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsignupData_signup_user build() => _build();

  _$GsignupData_signup_user _build() {
    final _$result = _$v ??
        new _$GsignupData_signup_user._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GsignupData_signup_user', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsignupData_signup_user', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GsignupData_signup_user', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsignupData_signup_tokens extends GsignupData_signup_tokens {
  @override
  final String G__typename;
  @override
  final String accessToken;
  @override
  final String refreshToken;

  factory _$GsignupData_signup_tokens(
          [void Function(GsignupData_signup_tokensBuilder)? updates]) =>
      (new GsignupData_signup_tokensBuilder()..update(updates))._build();

  _$GsignupData_signup_tokens._(
      {required this.G__typename,
      required this.accessToken,
      required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsignupData_signup_tokens', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        accessToken, r'GsignupData_signup_tokens', 'accessToken');
    BuiltValueNullFieldError.checkNotNull(
        refreshToken, r'GsignupData_signup_tokens', 'refreshToken');
  }

  @override
  GsignupData_signup_tokens rebuild(
          void Function(GsignupData_signup_tokensBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsignupData_signup_tokensBuilder toBuilder() =>
      new GsignupData_signup_tokensBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsignupData_signup_tokens &&
        G__typename == other.G__typename &&
        accessToken == other.accessToken &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, accessToken.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsignupData_signup_tokens')
          ..add('G__typename', G__typename)
          ..add('accessToken', accessToken)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class GsignupData_signup_tokensBuilder
    implements
        Builder<GsignupData_signup_tokens, GsignupData_signup_tokensBuilder> {
  _$GsignupData_signup_tokens? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  GsignupData_signup_tokensBuilder() {
    GsignupData_signup_tokens._initializeBuilder(this);
  }

  GsignupData_signup_tokensBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _accessToken = $v.accessToken;
      _refreshToken = $v.refreshToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsignupData_signup_tokens other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsignupData_signup_tokens;
  }

  @override
  void update(void Function(GsignupData_signup_tokensBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsignupData_signup_tokens build() => _build();

  _$GsignupData_signup_tokens _build() {
    final _$result = _$v ??
        new _$GsignupData_signup_tokens._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GsignupData_signup_tokens', 'G__typename'),
            accessToken: BuiltValueNullFieldError.checkNotNull(
                accessToken, r'GsignupData_signup_tokens', 'accessToken'),
            refreshToken: BuiltValueNullFieldError.checkNotNull(
                refreshToken, r'GsignupData_signup_tokens', 'refreshToken'));
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData extends Gcreate_groupData {
  @override
  final String G__typename;
  @override
  final Gcreate_groupData_createGroup createGroup;

  factory _$Gcreate_groupData(
          [void Function(Gcreate_groupDataBuilder)? updates]) =>
      (new Gcreate_groupDataBuilder()..update(updates))._build();

  _$Gcreate_groupData._({required this.G__typename, required this.createGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gcreate_groupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        createGroup, r'Gcreate_groupData', 'createGroup');
  }

  @override
  Gcreate_groupData rebuild(void Function(Gcreate_groupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupDataBuilder toBuilder() =>
      new Gcreate_groupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData &&
        G__typename == other.G__typename &&
        createGroup == other.createGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, createGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gcreate_groupData')
          ..add('G__typename', G__typename)
          ..add('createGroup', createGroup))
        .toString();
  }
}

class Gcreate_groupDataBuilder
    implements Builder<Gcreate_groupData, Gcreate_groupDataBuilder> {
  _$Gcreate_groupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gcreate_groupData_createGroupBuilder? _createGroup;
  Gcreate_groupData_createGroupBuilder get createGroup =>
      _$this._createGroup ??= new Gcreate_groupData_createGroupBuilder();
  set createGroup(Gcreate_groupData_createGroupBuilder? createGroup) =>
      _$this._createGroup = createGroup;

  Gcreate_groupDataBuilder() {
    Gcreate_groupData._initializeBuilder(this);
  }

  Gcreate_groupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _createGroup = $v.createGroup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData;
  }

  @override
  void update(void Function(Gcreate_groupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData build() => _build();

  _$Gcreate_groupData _build() {
    _$Gcreate_groupData _$result;
    try {
      _$result = _$v ??
          new _$Gcreate_groupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gcreate_groupData', 'G__typename'),
              createGroup: createGroup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createGroup';
        createGroup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gcreate_groupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup extends Gcreate_groupData_createGroup {
  @override
  final String G__typename;
  @override
  final Gcreate_groupData_createGroup_creator creator;
  @override
  final BuiltList<Gcreate_groupData_createGroup_members> members;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$Gcreate_groupData_createGroup(
          [void Function(Gcreate_groupData_createGroupBuilder)? updates]) =>
      (new Gcreate_groupData_createGroupBuilder()..update(updates))._build();

  _$Gcreate_groupData_createGroup._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gcreate_groupData_createGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'Gcreate_groupData_createGroup', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'Gcreate_groupData_createGroup', 'members');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'Gcreate_groupData_createGroup', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gcreate_groupData_createGroup', 'id');
  }

  @override
  Gcreate_groupData_createGroup rebuild(
          void Function(Gcreate_groupData_createGroupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroupBuilder toBuilder() =>
      new Gcreate_groupData_createGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gcreate_groupData_createGroup')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class Gcreate_groupData_createGroupBuilder
    implements
        Builder<Gcreate_groupData_createGroup,
            Gcreate_groupData_createGroupBuilder> {
  _$Gcreate_groupData_createGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gcreate_groupData_createGroup_creatorBuilder? _creator;
  Gcreate_groupData_createGroup_creatorBuilder get creator =>
      _$this._creator ??= new Gcreate_groupData_createGroup_creatorBuilder();
  set creator(Gcreate_groupData_createGroup_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<Gcreate_groupData_createGroup_members>? _members;
  ListBuilder<Gcreate_groupData_createGroup_members> get members =>
      _$this._members ??=
          new ListBuilder<Gcreate_groupData_createGroup_members>();
  set members(ListBuilder<Gcreate_groupData_createGroup_members>? members) =>
      _$this._members = members;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  Gcreate_groupData_createGroupBuilder() {
    Gcreate_groupData_createGroup._initializeBuilder(this);
  }

  Gcreate_groupData_createGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup;
  }

  @override
  void update(void Function(Gcreate_groupData_createGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup build() => _build();

  _$Gcreate_groupData_createGroup _build() {
    _$Gcreate_groupData_createGroup _$result;
    try {
      _$result = _$v ??
          new _$Gcreate_groupData_createGroup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gcreate_groupData_createGroup', 'G__typename'),
              creator: creator.build(),
              members: members.build(),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'Gcreate_groupData_createGroup', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Gcreate_groupData_createGroup', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gcreate_groupData_createGroup', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup_creator
    extends Gcreate_groupData_createGroup_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gcreate_groupData_createGroup_creator(
          [void Function(Gcreate_groupData_createGroup_creatorBuilder)?
              updates]) =>
      (new Gcreate_groupData_createGroup_creatorBuilder()..update(updates))
          ._build();

  _$Gcreate_groupData_createGroup_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gcreate_groupData_createGroup_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gcreate_groupData_createGroup_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'Gcreate_groupData_createGroup_creator', 'isSignedUp');
  }

  @override
  Gcreate_groupData_createGroup_creator rebuild(
          void Function(Gcreate_groupData_createGroup_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroup_creatorBuilder toBuilder() =>
      new Gcreate_groupData_createGroup_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gcreate_groupData_createGroup_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gcreate_groupData_createGroup_creatorBuilder
    implements
        Builder<Gcreate_groupData_createGroup_creator,
            Gcreate_groupData_createGroup_creatorBuilder> {
  _$Gcreate_groupData_createGroup_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gcreate_groupData_createGroup_creatorBuilder() {
    Gcreate_groupData_createGroup_creator._initializeBuilder(this);
  }

  Gcreate_groupData_createGroup_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup_creator;
  }

  @override
  void update(
      void Function(Gcreate_groupData_createGroup_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup_creator build() => _build();

  _$Gcreate_groupData_createGroup_creator _build() {
    final _$result = _$v ??
        new _$Gcreate_groupData_createGroup_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gcreate_groupData_createGroup_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gcreate_groupData_createGroup_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gcreate_groupData_createGroup_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup_members
    extends Gcreate_groupData_createGroup_members {
  @override
  final String G__typename;
  @override
  final BuiltList<Gcreate_groupData_createGroup_members_owedInGroup>
      owedInGroup;
  @override
  final Gcreate_groupData_createGroup_members_member member;

  factory _$Gcreate_groupData_createGroup_members(
          [void Function(Gcreate_groupData_createGroup_membersBuilder)?
              updates]) =>
      (new Gcreate_groupData_createGroup_membersBuilder()..update(updates))
          ._build();

  _$Gcreate_groupData_createGroup_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gcreate_groupData_createGroup_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'Gcreate_groupData_createGroup_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'Gcreate_groupData_createGroup_members', 'member');
  }

  @override
  Gcreate_groupData_createGroup_members rebuild(
          void Function(Gcreate_groupData_createGroup_membersBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroup_membersBuilder toBuilder() =>
      new Gcreate_groupData_createGroup_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gcreate_groupData_createGroup_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class Gcreate_groupData_createGroup_membersBuilder
    implements
        Builder<Gcreate_groupData_createGroup_members,
            Gcreate_groupData_createGroup_membersBuilder> {
  _$Gcreate_groupData_createGroup_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<Gcreate_groupData_createGroup_members_owedInGroup>? _owedInGroup;
  ListBuilder<Gcreate_groupData_createGroup_members_owedInGroup>
      get owedInGroup => _$this._owedInGroup ??=
          new ListBuilder<Gcreate_groupData_createGroup_members_owedInGroup>();
  set owedInGroup(
          ListBuilder<Gcreate_groupData_createGroup_members_owedInGroup>?
              owedInGroup) =>
      _$this._owedInGroup = owedInGroup;

  Gcreate_groupData_createGroup_members_memberBuilder? _member;
  Gcreate_groupData_createGroup_members_memberBuilder get member =>
      _$this._member ??=
          new Gcreate_groupData_createGroup_members_memberBuilder();
  set member(Gcreate_groupData_createGroup_members_memberBuilder? member) =>
      _$this._member = member;

  Gcreate_groupData_createGroup_membersBuilder() {
    Gcreate_groupData_createGroup_members._initializeBuilder(this);
  }

  Gcreate_groupData_createGroup_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup.toBuilder();
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup_members;
  }

  @override
  void update(
      void Function(Gcreate_groupData_createGroup_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup_members build() => _build();

  _$Gcreate_groupData_createGroup_members _build() {
    _$Gcreate_groupData_createGroup_members _$result;
    try {
      _$result = _$v ??
          new _$Gcreate_groupData_createGroup_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'Gcreate_groupData_createGroup_members', 'G__typename'),
              owedInGroup: owedInGroup.build(),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'owedInGroup';
        owedInGroup.build();
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gcreate_groupData_createGroup_members',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup_members_owedInGroup
    extends Gcreate_groupData_createGroup_members_owedInGroup {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$Gcreate_groupData_createGroup_members_owedInGroup(
          [void Function(
                  Gcreate_groupData_createGroup_members_owedInGroupBuilder)?
              updates]) =>
      (new Gcreate_groupData_createGroup_members_owedInGroupBuilder()
            ..update(updates))
          ._build();

  _$Gcreate_groupData_createGroup_members_owedInGroup._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gcreate_groupData_createGroup_members_owedInGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gcreate_groupData_createGroup_members_owedInGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'Gcreate_groupData_createGroup_members_owedInGroup', 'currencyId');
  }

  @override
  Gcreate_groupData_createGroup_members_owedInGroup rebuild(
          void Function(
                  Gcreate_groupData_createGroup_members_owedInGroupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroup_members_owedInGroupBuilder toBuilder() =>
      new Gcreate_groupData_createGroup_members_owedInGroupBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup_members_owedInGroup &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gcreate_groupData_createGroup_members_owedInGroup')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class Gcreate_groupData_createGroup_members_owedInGroupBuilder
    implements
        Builder<Gcreate_groupData_createGroup_members_owedInGroup,
            Gcreate_groupData_createGroup_members_owedInGroupBuilder> {
  _$Gcreate_groupData_createGroup_members_owedInGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  Gcreate_groupData_createGroup_members_owedInGroupBuilder() {
    Gcreate_groupData_createGroup_members_owedInGroup._initializeBuilder(this);
  }

  Gcreate_groupData_createGroup_members_owedInGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup_members_owedInGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup_members_owedInGroup;
  }

  @override
  void update(
      void Function(Gcreate_groupData_createGroup_members_owedInGroupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup_members_owedInGroup build() => _build();

  _$Gcreate_groupData_createGroup_members_owedInGroup _build() {
    final _$result = _$v ??
        new _$Gcreate_groupData_createGroup_members_owedInGroup._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'Gcreate_groupData_createGroup_members_owedInGroup',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'Gcreate_groupData_createGroup_members_owedInGroup', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'Gcreate_groupData_createGroup_members_owedInGroup',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$Gcreate_groupData_createGroup_members_member
    extends Gcreate_groupData_createGroup_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gcreate_groupData_createGroup_members_member(
          [void Function(Gcreate_groupData_createGroup_members_memberBuilder)?
              updates]) =>
      (new Gcreate_groupData_createGroup_members_memberBuilder()
            ..update(updates))
          ._build();

  _$Gcreate_groupData_createGroup_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gcreate_groupData_createGroup_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gcreate_groupData_createGroup_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'Gcreate_groupData_createGroup_members_member', 'isSignedUp');
  }

  @override
  Gcreate_groupData_createGroup_members_member rebuild(
          void Function(Gcreate_groupData_createGroup_members_memberBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcreate_groupData_createGroup_members_memberBuilder toBuilder() =>
      new Gcreate_groupData_createGroup_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcreate_groupData_createGroup_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gcreate_groupData_createGroup_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gcreate_groupData_createGroup_members_memberBuilder
    implements
        Builder<Gcreate_groupData_createGroup_members_member,
            Gcreate_groupData_createGroup_members_memberBuilder> {
  _$Gcreate_groupData_createGroup_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gcreate_groupData_createGroup_members_memberBuilder() {
    Gcreate_groupData_createGroup_members_member._initializeBuilder(this);
  }

  Gcreate_groupData_createGroup_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcreate_groupData_createGroup_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcreate_groupData_createGroup_members_member;
  }

  @override
  void update(
      void Function(Gcreate_groupData_createGroup_members_memberBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcreate_groupData_createGroup_members_member build() => _build();

  _$Gcreate_groupData_createGroup_members_member _build() {
    final _$result = _$v ??
        new _$Gcreate_groupData_createGroup_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gcreate_groupData_createGroup_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gcreate_groupData_createGroup_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gcreate_groupData_createGroup_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_to_groupData extends Gadd_to_groupData {
  @override
  final String G__typename;
  @override
  final String addToGroupByEmail;

  factory _$Gadd_to_groupData(
          [void Function(Gadd_to_groupDataBuilder)? updates]) =>
      (new Gadd_to_groupDataBuilder()..update(updates))._build();

  _$Gadd_to_groupData._(
      {required this.G__typename, required this.addToGroupByEmail})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_to_groupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        addToGroupByEmail, r'Gadd_to_groupData', 'addToGroupByEmail');
  }

  @override
  Gadd_to_groupData rebuild(void Function(Gadd_to_groupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_to_groupDataBuilder toBuilder() =>
      new Gadd_to_groupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_to_groupData &&
        G__typename == other.G__typename &&
        addToGroupByEmail == other.addToGroupByEmail;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, addToGroupByEmail.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_to_groupData')
          ..add('G__typename', G__typename)
          ..add('addToGroupByEmail', addToGroupByEmail))
        .toString();
  }
}

class Gadd_to_groupDataBuilder
    implements Builder<Gadd_to_groupData, Gadd_to_groupDataBuilder> {
  _$Gadd_to_groupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _addToGroupByEmail;
  String? get addToGroupByEmail => _$this._addToGroupByEmail;
  set addToGroupByEmail(String? addToGroupByEmail) =>
      _$this._addToGroupByEmail = addToGroupByEmail;

  Gadd_to_groupDataBuilder() {
    Gadd_to_groupData._initializeBuilder(this);
  }

  Gadd_to_groupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _addToGroupByEmail = $v.addToGroupByEmail;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_to_groupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_to_groupData;
  }

  @override
  void update(void Function(Gadd_to_groupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_to_groupData build() => _build();

  _$Gadd_to_groupData _build() {
    final _$result = _$v ??
        new _$Gadd_to_groupData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'Gadd_to_groupData', 'G__typename'),
            addToGroupByEmail: BuiltValueNullFieldError.checkNotNull(
                addToGroupByEmail, r'Gadd_to_groupData', 'addToGroupByEmail'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData extends Gadd_expenseData {
  @override
  final String G__typename;
  @override
  final Gadd_expenseData_addExpense addExpense;

  factory _$Gadd_expenseData(
          [void Function(Gadd_expenseDataBuilder)? updates]) =>
      (new Gadd_expenseDataBuilder()..update(updates))._build();

  _$Gadd_expenseData._({required this.G__typename, required this.addExpense})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_expenseData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        addExpense, r'Gadd_expenseData', 'addExpense');
  }

  @override
  Gadd_expenseData rebuild(void Function(Gadd_expenseDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseDataBuilder toBuilder() =>
      new Gadd_expenseDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData &&
        G__typename == other.G__typename &&
        addExpense == other.addExpense;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, addExpense.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_expenseData')
          ..add('G__typename', G__typename)
          ..add('addExpense', addExpense))
        .toString();
  }
}

class Gadd_expenseDataBuilder
    implements Builder<Gadd_expenseData, Gadd_expenseDataBuilder> {
  _$Gadd_expenseData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gadd_expenseData_addExpenseBuilder? _addExpense;
  Gadd_expenseData_addExpenseBuilder get addExpense =>
      _$this._addExpense ??= new Gadd_expenseData_addExpenseBuilder();
  set addExpense(Gadd_expenseData_addExpenseBuilder? addExpense) =>
      _$this._addExpense = addExpense;

  Gadd_expenseDataBuilder() {
    Gadd_expenseData._initializeBuilder(this);
  }

  Gadd_expenseDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _addExpense = $v.addExpense.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData;
  }

  @override
  void update(void Function(Gadd_expenseDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData build() => _build();

  _$Gadd_expenseData _build() {
    _$Gadd_expenseData _$result;
    try {
      _$result = _$v ??
          new _$Gadd_expenseData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gadd_expenseData', 'G__typename'),
              addExpense: addExpense.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addExpense';
        addExpense.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gadd_expenseData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense extends Gadd_expenseData_addExpense {
  @override
  final String G__typename;
  @override
  final BuiltList<Gadd_expenseData_addExpense_splits> splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final Gadd_expenseData_addExpense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$Gadd_expenseData_addExpense(
          [void Function(Gadd_expenseData_addExpenseBuilder)? updates]) =>
      (new Gadd_expenseData_addExpenseBuilder()..update(updates))._build();

  _$Gadd_expenseData_addExpense._(
      {required this.G__typename,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_expenseData_addExpense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'Gadd_expenseData_addExpense', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'Gadd_expenseData_addExpense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'Gadd_expenseData_addExpense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'Gadd_expenseData_addExpense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'Gadd_expenseData_addExpense', 'creatorId');
  }

  @override
  Gadd_expenseData_addExpense rebuild(
          void Function(Gadd_expenseData_addExpenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpenseBuilder toBuilder() =>
      new Gadd_expenseData_addExpenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense &&
        G__typename == other.G__typename &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_expenseData_addExpense')
          ..add('G__typename', G__typename)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class Gadd_expenseData_addExpenseBuilder
    implements
        Builder<Gadd_expenseData_addExpense,
            Gadd_expenseData_addExpenseBuilder> {
  _$Gadd_expenseData_addExpense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<Gadd_expenseData_addExpense_splits>? _splits;
  ListBuilder<Gadd_expenseData_addExpense_splits> get splits =>
      _$this._splits ??= new ListBuilder<Gadd_expenseData_addExpense_splits>();
  set splits(ListBuilder<Gadd_expenseData_addExpense_splits>? splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  Gadd_expenseData_addExpense_amountBuilder? _amount;
  Gadd_expenseData_addExpense_amountBuilder get amount =>
      _$this._amount ??= new Gadd_expenseData_addExpense_amountBuilder();
  set amount(Gadd_expenseData_addExpense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  Gadd_expenseData_addExpenseBuilder() {
    Gadd_expenseData_addExpense._initializeBuilder(this);
  }

  Gadd_expenseData_addExpenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense;
  }

  @override
  void update(void Function(Gadd_expenseData_addExpenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense build() => _build();

  _$Gadd_expenseData_addExpense _build() {
    _$Gadd_expenseData_addExpense _$result;
    try {
      _$result = _$v ??
          new _$Gadd_expenseData_addExpense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gadd_expenseData_addExpense', 'G__typename'),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Gadd_expenseData_addExpense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'Gadd_expenseData_addExpense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'Gadd_expenseData_addExpense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'Gadd_expenseData_addExpense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'Gadd_expenseData_addExpense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'splits';
        splits.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gadd_expenseData_addExpense', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits
    extends Gadd_expenseData_addExpense_splits {
  @override
  final String G__typename;
  @override
  final Gadd_expenseData_addExpense_splits_expense? expense;
  @override
  final Gadd_expenseData_addExpense_splits_group group;
  @override
  final Gadd_expenseData_addExpense_splits_creator creator;
  @override
  final Gadd_expenseData_addExpense_splits_fromUser fromUser;
  @override
  final Gadd_expenseData_addExpense_splits_toUser toUser;
  @override
  final String id;
  @override
  final Gadd_expenseData_addExpense_splits_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$Gadd_expenseData_addExpense_splits(
          [void Function(Gadd_expenseData_addExpense_splitsBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splitsBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_expenseData_addExpense_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'Gadd_expenseData_addExpense_splits', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'Gadd_expenseData_addExpense_splits', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'Gadd_expenseData_addExpense_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'Gadd_expenseData_addExpense_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'Gadd_expenseData_addExpense_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'Gadd_expenseData_addExpense_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'Gadd_expenseData_addExpense_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'Gadd_expenseData_addExpense_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'Gadd_expenseData_addExpense_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'Gadd_expenseData_addExpense_splits', 'groupId');
  }

  @override
  Gadd_expenseData_addExpense_splits rebuild(
          void Function(Gadd_expenseData_addExpense_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splitsBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_expenseData_addExpense_splits')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splitsBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits,
            Gadd_expenseData_addExpense_splitsBuilder> {
  _$Gadd_expenseData_addExpense_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gadd_expenseData_addExpense_splits_expenseBuilder? _expense;
  Gadd_expenseData_addExpense_splits_expenseBuilder get expense =>
      _$this._expense ??=
          new Gadd_expenseData_addExpense_splits_expenseBuilder();
  set expense(Gadd_expenseData_addExpense_splits_expenseBuilder? expense) =>
      _$this._expense = expense;

  Gadd_expenseData_addExpense_splits_groupBuilder? _group;
  Gadd_expenseData_addExpense_splits_groupBuilder get group =>
      _$this._group ??= new Gadd_expenseData_addExpense_splits_groupBuilder();
  set group(Gadd_expenseData_addExpense_splits_groupBuilder? group) =>
      _$this._group = group;

  Gadd_expenseData_addExpense_splits_creatorBuilder? _creator;
  Gadd_expenseData_addExpense_splits_creatorBuilder get creator =>
      _$this._creator ??=
          new Gadd_expenseData_addExpense_splits_creatorBuilder();
  set creator(Gadd_expenseData_addExpense_splits_creatorBuilder? creator) =>
      _$this._creator = creator;

  Gadd_expenseData_addExpense_splits_fromUserBuilder? _fromUser;
  Gadd_expenseData_addExpense_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new Gadd_expenseData_addExpense_splits_fromUserBuilder();
  set fromUser(Gadd_expenseData_addExpense_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  Gadd_expenseData_addExpense_splits_toUserBuilder? _toUser;
  Gadd_expenseData_addExpense_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new Gadd_expenseData_addExpense_splits_toUserBuilder();
  set toUser(Gadd_expenseData_addExpense_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  Gadd_expenseData_addExpense_splits_amountBuilder? _amount;
  Gadd_expenseData_addExpense_splits_amountBuilder get amount =>
      _$this._amount ??= new Gadd_expenseData_addExpense_splits_amountBuilder();
  set amount(Gadd_expenseData_addExpense_splits_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  Gadd_expenseData_addExpense_splitsBuilder() {
    Gadd_expenseData_addExpense_splits._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits build() => _build();

  _$Gadd_expenseData_addExpense_splits _build() {
    _$Gadd_expenseData_addExpense_splits _$result;
    try {
      _$result = _$v ??
          new _$Gadd_expenseData_addExpense_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Gadd_expenseData_addExpense_splits', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Gadd_expenseData_addExpense_splits', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'Gadd_expenseData_addExpense_splits', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'Gadd_expenseData_addExpense_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'Gadd_expenseData_addExpense_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'Gadd_expenseData_addExpense_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'Gadd_expenseData_addExpense_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'Gadd_expenseData_addExpense_splits', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gadd_expenseData_addExpense_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_expense
    extends Gadd_expenseData_addExpense_splits_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final Gadd_expenseData_addExpense_splits_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$Gadd_expenseData_addExpense_splits_expense(
          [void Function(Gadd_expenseData_addExpense_splits_expenseBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_expenseBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'Gadd_expenseData_addExpense_splits_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'Gadd_expenseData_addExpense_splits_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'Gadd_expenseData_addExpense_splits_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense_splits_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'Gadd_expenseData_addExpense_splits_expense', 'creatorId');
  }

  @override
  Gadd_expenseData_addExpense_splits_expense rebuild(
          void Function(Gadd_expenseData_addExpense_splits_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_expenseBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_expenseBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_expense,
            Gadd_expenseData_addExpense_splits_expenseBuilder> {
  _$Gadd_expenseData_addExpense_splits_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  Gadd_expenseData_addExpense_splits_expense_amountBuilder? _amount;
  Gadd_expenseData_addExpense_splits_expense_amountBuilder get amount =>
      _$this._amount ??=
          new Gadd_expenseData_addExpense_splits_expense_amountBuilder();
  set amount(
          Gadd_expenseData_addExpense_splits_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  Gadd_expenseData_addExpense_splits_expenseBuilder() {
    Gadd_expenseData_addExpense_splits_expense._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_expense;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_expense build() => _build();

  _$Gadd_expenseData_addExpense_splits_expense _build() {
    _$Gadd_expenseData_addExpense_splits_expense _$result;
    try {
      _$result = _$v ??
          new _$Gadd_expenseData_addExpense_splits_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'Gadd_expenseData_addExpense_splits_expense', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'Gadd_expenseData_addExpense_splits_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'Gadd_expenseData_addExpense_splits_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'Gadd_expenseData_addExpense_splits_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'Gadd_expenseData_addExpense_splits_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'Gadd_expenseData_addExpense_splits_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gadd_expenseData_addExpense_splits_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_expense_amount
    extends Gadd_expenseData_addExpense_splits_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$Gadd_expenseData_addExpense_splits_expense_amount(
          [void Function(
                  Gadd_expenseData_addExpense_splits_expense_amountBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense_splits_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'Gadd_expenseData_addExpense_splits_expense_amount', 'currencyId');
  }

  @override
  Gadd_expenseData_addExpense_splits_expense_amount rebuild(
          void Function(
                  Gadd_expenseData_addExpense_splits_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_expense_amountBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_expense_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_expense_amountBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_expense_amount,
            Gadd_expenseData_addExpense_splits_expense_amountBuilder> {
  _$Gadd_expenseData_addExpense_splits_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  Gadd_expenseData_addExpense_splits_expense_amountBuilder() {
    Gadd_expenseData_addExpense_splits_expense_amount._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_expense_amount;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_expense_amount build() => _build();

  _$Gadd_expenseData_addExpense_splits_expense_amount _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'Gadd_expenseData_addExpense_splits_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'Gadd_expenseData_addExpense_splits_expense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'Gadd_expenseData_addExpense_splits_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_group
    extends Gadd_expenseData_addExpense_splits_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$Gadd_expenseData_addExpense_splits_group(
          [void Function(Gadd_expenseData_addExpense_splits_groupBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_groupBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_group', 'id');
  }

  @override
  Gadd_expenseData_addExpense_splits_group rebuild(
          void Function(Gadd_expenseData_addExpense_splits_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_groupBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_groupBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_group,
            Gadd_expenseData_addExpense_splits_groupBuilder> {
  _$Gadd_expenseData_addExpense_splits_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  Gadd_expenseData_addExpense_splits_groupBuilder() {
    Gadd_expenseData_addExpense_splits_group._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_group;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_group build() => _build();

  _$Gadd_expenseData_addExpense_splits_group _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_creator
    extends Gadd_expenseData_addExpense_splits_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gadd_expenseData_addExpense_splits_creator(
          [void Function(Gadd_expenseData_addExpense_splits_creatorBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_creatorBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'Gadd_expenseData_addExpense_splits_creator', 'isSignedUp');
  }

  @override
  Gadd_expenseData_addExpense_splits_creator rebuild(
          void Function(Gadd_expenseData_addExpense_splits_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_creatorBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_creatorBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_creator,
            Gadd_expenseData_addExpense_splits_creatorBuilder> {
  _$Gadd_expenseData_addExpense_splits_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gadd_expenseData_addExpense_splits_creatorBuilder() {
    Gadd_expenseData_addExpense_splits_creator._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_creator;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_creator build() => _build();

  _$Gadd_expenseData_addExpense_splits_creator _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gadd_expenseData_addExpense_splits_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_fromUser
    extends Gadd_expenseData_addExpense_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gadd_expenseData_addExpense_splits_fromUser(
          [void Function(Gadd_expenseData_addExpense_splits_fromUserBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_fromUserBuilder()
            ..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'Gadd_expenseData_addExpense_splits_fromUser', 'isSignedUp');
  }

  @override
  Gadd_expenseData_addExpense_splits_fromUser rebuild(
          void Function(Gadd_expenseData_addExpense_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_fromUserBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_fromUserBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_fromUser,
            Gadd_expenseData_addExpense_splits_fromUserBuilder> {
  _$Gadd_expenseData_addExpense_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gadd_expenseData_addExpense_splits_fromUserBuilder() {
    Gadd_expenseData_addExpense_splits_fromUser._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_fromUser;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_fromUser build() => _build();

  _$Gadd_expenseData_addExpense_splits_fromUser _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gadd_expenseData_addExpense_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_toUser
    extends Gadd_expenseData_addExpense_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$Gadd_expenseData_addExpense_splits_toUser(
          [void Function(Gadd_expenseData_addExpense_splits_toUserBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_toUserBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gadd_expenseData_addExpense_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'Gadd_expenseData_addExpense_splits_toUser', 'isSignedUp');
  }

  @override
  Gadd_expenseData_addExpense_splits_toUser rebuild(
          void Function(Gadd_expenseData_addExpense_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_toUserBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_toUserBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_toUser,
            Gadd_expenseData_addExpense_splits_toUserBuilder> {
  _$Gadd_expenseData_addExpense_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  Gadd_expenseData_addExpense_splits_toUserBuilder() {
    Gadd_expenseData_addExpense_splits_toUser._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_toUser;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_toUser build() => _build();

  _$Gadd_expenseData_addExpense_splits_toUser _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gadd_expenseData_addExpense_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'Gadd_expenseData_addExpense_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_splits_amount
    extends Gadd_expenseData_addExpense_splits_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$Gadd_expenseData_addExpense_splits_amount(
          [void Function(Gadd_expenseData_addExpense_splits_amountBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_splits_amountBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_splits_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gadd_expenseData_addExpense_splits_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense_splits_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'Gadd_expenseData_addExpense_splits_amount', 'currencyId');
  }

  @override
  Gadd_expenseData_addExpense_splits_amount rebuild(
          void Function(Gadd_expenseData_addExpense_splits_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_splits_amountBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_splits_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_splits_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gadd_expenseData_addExpense_splits_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class Gadd_expenseData_addExpense_splits_amountBuilder
    implements
        Builder<Gadd_expenseData_addExpense_splits_amount,
            Gadd_expenseData_addExpense_splits_amountBuilder> {
  _$Gadd_expenseData_addExpense_splits_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  Gadd_expenseData_addExpense_splits_amountBuilder() {
    Gadd_expenseData_addExpense_splits_amount._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_splits_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_splits_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_splits_amount;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_splits_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_splits_amount build() => _build();

  _$Gadd_expenseData_addExpense_splits_amount _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_splits_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_splits_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'Gadd_expenseData_addExpense_splits_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'Gadd_expenseData_addExpense_splits_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$Gadd_expenseData_addExpense_amount
    extends Gadd_expenseData_addExpense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$Gadd_expenseData_addExpense_amount(
          [void Function(Gadd_expenseData_addExpense_amountBuilder)?
              updates]) =>
      (new Gadd_expenseData_addExpense_amountBuilder()..update(updates))
          ._build();

  _$Gadd_expenseData_addExpense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gadd_expenseData_addExpense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'Gadd_expenseData_addExpense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'Gadd_expenseData_addExpense_amount', 'currencyId');
  }

  @override
  Gadd_expenseData_addExpense_amount rebuild(
          void Function(Gadd_expenseData_addExpense_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gadd_expenseData_addExpense_amountBuilder toBuilder() =>
      new Gadd_expenseData_addExpense_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gadd_expenseData_addExpense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gadd_expenseData_addExpense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class Gadd_expenseData_addExpense_amountBuilder
    implements
        Builder<Gadd_expenseData_addExpense_amount,
            Gadd_expenseData_addExpense_amountBuilder> {
  _$Gadd_expenseData_addExpense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  Gadd_expenseData_addExpense_amountBuilder() {
    Gadd_expenseData_addExpense_amount._initializeBuilder(this);
  }

  Gadd_expenseData_addExpense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gadd_expenseData_addExpense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gadd_expenseData_addExpense_amount;
  }

  @override
  void update(
      void Function(Gadd_expenseData_addExpense_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gadd_expenseData_addExpense_amount build() => _build();

  _$Gadd_expenseData_addExpense_amount _build() {
    final _$result = _$v ??
        new _$Gadd_expenseData_addExpense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gadd_expenseData_addExpense_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'Gadd_expenseData_addExpense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'Gadd_expenseData_addExpense_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$Gsend_email_otpData extends Gsend_email_otpData {
  @override
  final String G__typename;
  @override
  final bool sendEmailOtp;

  factory _$Gsend_email_otpData(
          [void Function(Gsend_email_otpDataBuilder)? updates]) =>
      (new Gsend_email_otpDataBuilder()..update(updates))._build();

  _$Gsend_email_otpData._(
      {required this.G__typename, required this.sendEmailOtp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gsend_email_otpData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        sendEmailOtp, r'Gsend_email_otpData', 'sendEmailOtp');
  }

  @override
  Gsend_email_otpData rebuild(
          void Function(Gsend_email_otpDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gsend_email_otpDataBuilder toBuilder() =>
      new Gsend_email_otpDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gsend_email_otpData &&
        G__typename == other.G__typename &&
        sendEmailOtp == other.sendEmailOtp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, sendEmailOtp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gsend_email_otpData')
          ..add('G__typename', G__typename)
          ..add('sendEmailOtp', sendEmailOtp))
        .toString();
  }
}

class Gsend_email_otpDataBuilder
    implements Builder<Gsend_email_otpData, Gsend_email_otpDataBuilder> {
  _$Gsend_email_otpData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _sendEmailOtp;
  bool? get sendEmailOtp => _$this._sendEmailOtp;
  set sendEmailOtp(bool? sendEmailOtp) => _$this._sendEmailOtp = sendEmailOtp;

  Gsend_email_otpDataBuilder() {
    Gsend_email_otpData._initializeBuilder(this);
  }

  Gsend_email_otpDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _sendEmailOtp = $v.sendEmailOtp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gsend_email_otpData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gsend_email_otpData;
  }

  @override
  void update(void Function(Gsend_email_otpDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gsend_email_otpData build() => _build();

  _$Gsend_email_otpData _build() {
    final _$result = _$v ??
        new _$Gsend_email_otpData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'Gsend_email_otpData', 'G__typename'),
            sendEmailOtp: BuiltValueNullFieldError.checkNotNull(
                sendEmailOtp, r'Gsend_email_otpData', 'sendEmailOtp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gverify_email_otpData extends Gverify_email_otpData {
  @override
  final String G__typename;
  @override
  final Gverify_email_otpData_verifyOtp verifyOtp;

  factory _$Gverify_email_otpData(
          [void Function(Gverify_email_otpDataBuilder)? updates]) =>
      (new Gverify_email_otpDataBuilder()..update(updates))._build();

  _$Gverify_email_otpData._(
      {required this.G__typename, required this.verifyOtp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gverify_email_otpData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        verifyOtp, r'Gverify_email_otpData', 'verifyOtp');
  }

  @override
  Gverify_email_otpData rebuild(
          void Function(Gverify_email_otpDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gverify_email_otpDataBuilder toBuilder() =>
      new Gverify_email_otpDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gverify_email_otpData &&
        G__typename == other.G__typename &&
        verifyOtp == other.verifyOtp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, verifyOtp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gverify_email_otpData')
          ..add('G__typename', G__typename)
          ..add('verifyOtp', verifyOtp))
        .toString();
  }
}

class Gverify_email_otpDataBuilder
    implements Builder<Gverify_email_otpData, Gverify_email_otpDataBuilder> {
  _$Gverify_email_otpData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gverify_email_otpData_verifyOtp? _verifyOtp;
  Gverify_email_otpData_verifyOtp? get verifyOtp => _$this._verifyOtp;
  set verifyOtp(Gverify_email_otpData_verifyOtp? verifyOtp) =>
      _$this._verifyOtp = verifyOtp;

  Gverify_email_otpDataBuilder() {
    Gverify_email_otpData._initializeBuilder(this);
  }

  Gverify_email_otpDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _verifyOtp = $v.verifyOtp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gverify_email_otpData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gverify_email_otpData;
  }

  @override
  void update(void Function(Gverify_email_otpDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gverify_email_otpData build() => _build();

  _$Gverify_email_otpData _build() {
    final _$result = _$v ??
        new _$Gverify_email_otpData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'Gverify_email_otpData', 'G__typename'),
            verifyOtp: BuiltValueNullFieldError.checkNotNull(
                verifyOtp, r'Gverify_email_otpData', 'verifyOtp'));
    replace(_$result);
    return _$result;
  }
}

class _$Gverify_email_otpData_verifyOtp__base
    extends Gverify_email_otpData_verifyOtp__base {
  @override
  final String G__typename;

  factory _$Gverify_email_otpData_verifyOtp__base(
          [void Function(Gverify_email_otpData_verifyOtp__baseBuilder)?
              updates]) =>
      (new Gverify_email_otpData_verifyOtp__baseBuilder()..update(updates))
          ._build();

  _$Gverify_email_otpData_verifyOtp__base._({required this.G__typename})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Gverify_email_otpData_verifyOtp__base', 'G__typename');
  }

  @override
  Gverify_email_otpData_verifyOtp__base rebuild(
          void Function(Gverify_email_otpData_verifyOtp__baseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gverify_email_otpData_verifyOtp__baseBuilder toBuilder() =>
      new Gverify_email_otpData_verifyOtp__baseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gverify_email_otpData_verifyOtp__base &&
        G__typename == other.G__typename;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gverify_email_otpData_verifyOtp__base')
          ..add('G__typename', G__typename))
        .toString();
  }
}

class Gverify_email_otpData_verifyOtp__baseBuilder
    implements
        Builder<Gverify_email_otpData_verifyOtp__base,
            Gverify_email_otpData_verifyOtp__baseBuilder> {
  _$Gverify_email_otpData_verifyOtp__base? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Gverify_email_otpData_verifyOtp__baseBuilder() {
    Gverify_email_otpData_verifyOtp__base._initializeBuilder(this);
  }

  Gverify_email_otpData_verifyOtp__baseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gverify_email_otpData_verifyOtp__base other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gverify_email_otpData_verifyOtp__base;
  }

  @override
  void update(
      void Function(Gverify_email_otpData_verifyOtp__baseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gverify_email_otpData_verifyOtp__base build() => _build();

  _$Gverify_email_otpData_verifyOtp__base _build() {
    final _$result = _$v ??
        new _$Gverify_email_otpData_verifyOtp__base._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'Gverify_email_otpData_verifyOtp__base', 'G__typename'));
    replace(_$result);
    return _$result;
  }
}

class _$Gverify_email_otpData_verifyOtp__asUserSignedUp
    extends Gverify_email_otpData_verifyOtp__asUserSignedUp {
  @override
  final String G__typename;
  @override
  final String accessToken;
  @override
  final String refreshToken;

  factory _$Gverify_email_otpData_verifyOtp__asUserSignedUp(
          [void Function(
                  Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder)?
              updates]) =>
      (new Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder()
            ..update(updates))
          ._build();

  _$Gverify_email_otpData_verifyOtp__asUserSignedUp._(
      {required this.G__typename,
      required this.accessToken,
      required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gverify_email_otpData_verifyOtp__asUserSignedUp', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(accessToken,
        r'Gverify_email_otpData_verifyOtp__asUserSignedUp', 'accessToken');
    BuiltValueNullFieldError.checkNotNull(refreshToken,
        r'Gverify_email_otpData_verifyOtp__asUserSignedUp', 'refreshToken');
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserSignedUp rebuild(
          void Function(Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder toBuilder() =>
      new Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gverify_email_otpData_verifyOtp__asUserSignedUp &&
        G__typename == other.G__typename &&
        accessToken == other.accessToken &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, accessToken.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gverify_email_otpData_verifyOtp__asUserSignedUp')
          ..add('G__typename', G__typename)
          ..add('accessToken', accessToken)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder
    implements
        Builder<Gverify_email_otpData_verifyOtp__asUserSignedUp,
            Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder> {
  _$Gverify_email_otpData_verifyOtp__asUserSignedUp? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder() {
    Gverify_email_otpData_verifyOtp__asUserSignedUp._initializeBuilder(this);
  }

  Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _accessToken = $v.accessToken;
      _refreshToken = $v.refreshToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gverify_email_otpData_verifyOtp__asUserSignedUp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gverify_email_otpData_verifyOtp__asUserSignedUp;
  }

  @override
  void update(
      void Function(Gverify_email_otpData_verifyOtp__asUserSignedUpBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserSignedUp build() => _build();

  _$Gverify_email_otpData_verifyOtp__asUserSignedUp _build() {
    final _$result = _$v ??
        new _$Gverify_email_otpData_verifyOtp__asUserSignedUp._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'Gverify_email_otpData_verifyOtp__asUserSignedUp',
                'G__typename'),
            accessToken: BuiltValueNullFieldError.checkNotNull(
                accessToken,
                r'Gverify_email_otpData_verifyOtp__asUserSignedUp',
                'accessToken'),
            refreshToken: BuiltValueNullFieldError.checkNotNull(
                refreshToken,
                r'Gverify_email_otpData_verifyOtp__asUserSignedUp',
                'refreshToken'));
    replace(_$result);
    return _$result;
  }
}

class _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp
    extends Gverify_email_otpData_verifyOtp__asUserNotSignedUp {
  @override
  final String G__typename;
  @override
  final String signupToken;

  factory _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp(
          [void Function(
                  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder)?
              updates]) =>
      (new Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder()
            ..update(updates))
          ._build();

  _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp._(
      {required this.G__typename, required this.signupToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(signupToken,
        r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp', 'signupToken');
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserNotSignedUp rebuild(
          void Function(
                  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder toBuilder() =>
      new Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gverify_email_otpData_verifyOtp__asUserNotSignedUp &&
        G__typename == other.G__typename &&
        signupToken == other.signupToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, signupToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp')
          ..add('G__typename', G__typename)
          ..add('signupToken', signupToken))
        .toString();
  }
}

class Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder
    implements
        Builder<Gverify_email_otpData_verifyOtp__asUserNotSignedUp,
            Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder> {
  _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _signupToken;
  String? get signupToken => _$this._signupToken;
  set signupToken(String? signupToken) => _$this._signupToken = signupToken;

  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder() {
    Gverify_email_otpData_verifyOtp__asUserNotSignedUp._initializeBuilder(this);
  }

  Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _signupToken = $v.signupToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gverify_email_otpData_verifyOtp__asUserNotSignedUp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp;
  }

  @override
  void update(
      void Function(Gverify_email_otpData_verifyOtp__asUserNotSignedUpBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  Gverify_email_otpData_verifyOtp__asUserNotSignedUp build() => _build();

  _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp _build() {
    final _$result = _$v ??
        new _$Gverify_email_otpData_verifyOtp__asUserNotSignedUp._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp',
                'G__typename'),
            signupToken: BuiltValueNullFieldError.checkNotNull(
                signupToken,
                r'Gverify_email_otpData_verifyOtp__asUserNotSignedUp',
                'signupToken'));
    replace(_$result);
    return _$result;
  }
}

class _$Grefresh_tokenData extends Grefresh_tokenData {
  @override
  final String G__typename;
  @override
  final Grefresh_tokenData_refreshToken refreshToken;

  factory _$Grefresh_tokenData(
          [void Function(Grefresh_tokenDataBuilder)? updates]) =>
      (new Grefresh_tokenDataBuilder()..update(updates))._build();

  _$Grefresh_tokenData._(
      {required this.G__typename, required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Grefresh_tokenData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        refreshToken, r'Grefresh_tokenData', 'refreshToken');
  }

  @override
  Grefresh_tokenData rebuild(
          void Function(Grefresh_tokenDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Grefresh_tokenDataBuilder toBuilder() =>
      new Grefresh_tokenDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Grefresh_tokenData &&
        G__typename == other.G__typename &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Grefresh_tokenData')
          ..add('G__typename', G__typename)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class Grefresh_tokenDataBuilder
    implements Builder<Grefresh_tokenData, Grefresh_tokenDataBuilder> {
  _$Grefresh_tokenData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  Grefresh_tokenData_refreshTokenBuilder? _refreshToken;
  Grefresh_tokenData_refreshTokenBuilder get refreshToken =>
      _$this._refreshToken ??= new Grefresh_tokenData_refreshTokenBuilder();
  set refreshToken(Grefresh_tokenData_refreshTokenBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Grefresh_tokenDataBuilder() {
    Grefresh_tokenData._initializeBuilder(this);
  }

  Grefresh_tokenDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _refreshToken = $v.refreshToken.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Grefresh_tokenData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Grefresh_tokenData;
  }

  @override
  void update(void Function(Grefresh_tokenDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Grefresh_tokenData build() => _build();

  _$Grefresh_tokenData _build() {
    _$Grefresh_tokenData _$result;
    try {
      _$result = _$v ??
          new _$Grefresh_tokenData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'Grefresh_tokenData', 'G__typename'),
              refreshToken: refreshToken.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'refreshToken';
        refreshToken.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Grefresh_tokenData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Grefresh_tokenData_refreshToken
    extends Grefresh_tokenData_refreshToken {
  @override
  final String G__typename;
  @override
  final String accessToken;
  @override
  final String refreshToken;

  factory _$Grefresh_tokenData_refreshToken(
          [void Function(Grefresh_tokenData_refreshTokenBuilder)? updates]) =>
      (new Grefresh_tokenData_refreshTokenBuilder()..update(updates))._build();

  _$Grefresh_tokenData_refreshToken._(
      {required this.G__typename,
      required this.accessToken,
      required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'Grefresh_tokenData_refreshToken', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        accessToken, r'Grefresh_tokenData_refreshToken', 'accessToken');
    BuiltValueNullFieldError.checkNotNull(
        refreshToken, r'Grefresh_tokenData_refreshToken', 'refreshToken');
  }

  @override
  Grefresh_tokenData_refreshToken rebuild(
          void Function(Grefresh_tokenData_refreshTokenBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Grefresh_tokenData_refreshTokenBuilder toBuilder() =>
      new Grefresh_tokenData_refreshTokenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Grefresh_tokenData_refreshToken &&
        G__typename == other.G__typename &&
        accessToken == other.accessToken &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, accessToken.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Grefresh_tokenData_refreshToken')
          ..add('G__typename', G__typename)
          ..add('accessToken', accessToken)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class Grefresh_tokenData_refreshTokenBuilder
    implements
        Builder<Grefresh_tokenData_refreshToken,
            Grefresh_tokenData_refreshTokenBuilder> {
  _$Grefresh_tokenData_refreshToken? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  Grefresh_tokenData_refreshTokenBuilder() {
    Grefresh_tokenData_refreshToken._initializeBuilder(this);
  }

  Grefresh_tokenData_refreshTokenBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _accessToken = $v.accessToken;
      _refreshToken = $v.refreshToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Grefresh_tokenData_refreshToken other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Grefresh_tokenData_refreshToken;
  }

  @override
  void update(void Function(Grefresh_tokenData_refreshTokenBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Grefresh_tokenData_refreshToken build() => _build();

  _$Grefresh_tokenData_refreshToken _build() {
    final _$result = _$v ??
        new _$Grefresh_tokenData_refreshToken._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'Grefresh_tokenData_refreshToken', 'G__typename'),
            accessToken: BuiltValueNullFieldError.checkNotNull(
                accessToken, r'Grefresh_tokenData_refreshToken', 'accessToken'),
            refreshToken: BuiltValueNullFieldError.checkNotNull(refreshToken,
                r'Grefresh_tokenData_refreshToken', 'refreshToken'));
    replace(_$result);
    return _$result;
  }
}

class _$GsearchUserByEmailData extends GsearchUserByEmailData {
  @override
  final String G__typename;
  @override
  final GsearchUserByEmailData_findUserByEmail findUserByEmail;

  factory _$GsearchUserByEmailData(
          [void Function(GsearchUserByEmailDataBuilder)? updates]) =>
      (new GsearchUserByEmailDataBuilder()..update(updates))._build();

  _$GsearchUserByEmailData._(
      {required this.G__typename, required this.findUserByEmail})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsearchUserByEmailData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        findUserByEmail, r'GsearchUserByEmailData', 'findUserByEmail');
  }

  @override
  GsearchUserByEmailData rebuild(
          void Function(GsearchUserByEmailDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsearchUserByEmailDataBuilder toBuilder() =>
      new GsearchUserByEmailDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsearchUserByEmailData &&
        G__typename == other.G__typename &&
        findUserByEmail == other.findUserByEmail;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, findUserByEmail.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsearchUserByEmailData')
          ..add('G__typename', G__typename)
          ..add('findUserByEmail', findUserByEmail))
        .toString();
  }
}

class GsearchUserByEmailDataBuilder
    implements Builder<GsearchUserByEmailData, GsearchUserByEmailDataBuilder> {
  _$GsearchUserByEmailData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsearchUserByEmailData_findUserByEmailBuilder? _findUserByEmail;
  GsearchUserByEmailData_findUserByEmailBuilder get findUserByEmail =>
      _$this._findUserByEmail ??=
          new GsearchUserByEmailData_findUserByEmailBuilder();
  set findUserByEmail(
          GsearchUserByEmailData_findUserByEmailBuilder? findUserByEmail) =>
      _$this._findUserByEmail = findUserByEmail;

  GsearchUserByEmailDataBuilder() {
    GsearchUserByEmailData._initializeBuilder(this);
  }

  GsearchUserByEmailDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _findUserByEmail = $v.findUserByEmail.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsearchUserByEmailData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsearchUserByEmailData;
  }

  @override
  void update(void Function(GsearchUserByEmailDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsearchUserByEmailData build() => _build();

  _$GsearchUserByEmailData _build() {
    _$GsearchUserByEmailData _$result;
    try {
      _$result = _$v ??
          new _$GsearchUserByEmailData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsearchUserByEmailData', 'G__typename'),
              findUserByEmail: findUserByEmail.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'findUserByEmail';
        findUserByEmail.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsearchUserByEmailData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsearchUserByEmailData_findUserByEmail
    extends GsearchUserByEmailData_findUserByEmail {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsearchUserByEmailData_findUserByEmail(
          [void Function(GsearchUserByEmailData_findUserByEmailBuilder)?
              updates]) =>
      (new GsearchUserByEmailData_findUserByEmailBuilder()..update(updates))
          ._build();

  _$GsearchUserByEmailData_findUserByEmail._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsearchUserByEmailData_findUserByEmail', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsearchUserByEmailData_findUserByEmail', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsearchUserByEmailData_findUserByEmail', 'isSignedUp');
  }

  @override
  GsearchUserByEmailData_findUserByEmail rebuild(
          void Function(GsearchUserByEmailData_findUserByEmailBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsearchUserByEmailData_findUserByEmailBuilder toBuilder() =>
      new GsearchUserByEmailData_findUserByEmailBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsearchUserByEmailData_findUserByEmail &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsearchUserByEmailData_findUserByEmail')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsearchUserByEmailData_findUserByEmailBuilder
    implements
        Builder<GsearchUserByEmailData_findUserByEmail,
            GsearchUserByEmailData_findUserByEmailBuilder> {
  _$GsearchUserByEmailData_findUserByEmail? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsearchUserByEmailData_findUserByEmailBuilder() {
    GsearchUserByEmailData_findUserByEmail._initializeBuilder(this);
  }

  GsearchUserByEmailData_findUserByEmailBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsearchUserByEmailData_findUserByEmail other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsearchUserByEmailData_findUserByEmail;
  }

  @override
  void update(
      void Function(GsearchUserByEmailData_findUserByEmailBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsearchUserByEmailData_findUserByEmail build() => _build();

  _$GsearchUserByEmailData_findUserByEmail _build() {
    final _$result = _$v ??
        new _$GsearchUserByEmailData_findUserByEmail._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsearchUserByEmailData_findUserByEmail', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsearchUserByEmailData_findUserByEmail', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsearchUserByEmailData_findUserByEmail', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData extends GcreateNonGroupExpenseData {
  @override
  final String G__typename;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense addNonGroupExpense;

  factory _$GcreateNonGroupExpenseData(
          [void Function(GcreateNonGroupExpenseDataBuilder)? updates]) =>
      (new GcreateNonGroupExpenseDataBuilder()..update(updates))._build();

  _$GcreateNonGroupExpenseData._(
      {required this.G__typename, required this.addNonGroupExpense})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GcreateNonGroupExpenseData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(addNonGroupExpense,
        r'GcreateNonGroupExpenseData', 'addNonGroupExpense');
  }

  @override
  GcreateNonGroupExpenseData rebuild(
          void Function(GcreateNonGroupExpenseDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseDataBuilder toBuilder() =>
      new GcreateNonGroupExpenseDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcreateNonGroupExpenseData &&
        G__typename == other.G__typename &&
        addNonGroupExpense == other.addNonGroupExpense;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, addNonGroupExpense.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GcreateNonGroupExpenseData')
          ..add('G__typename', G__typename)
          ..add('addNonGroupExpense', addNonGroupExpense))
        .toString();
  }
}

class GcreateNonGroupExpenseDataBuilder
    implements
        Builder<GcreateNonGroupExpenseData, GcreateNonGroupExpenseDataBuilder> {
  _$GcreateNonGroupExpenseData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder? _addNonGroupExpense;
  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder get addNonGroupExpense =>
      _$this._addNonGroupExpense ??=
          new GcreateNonGroupExpenseData_addNonGroupExpenseBuilder();
  set addNonGroupExpense(
          GcreateNonGroupExpenseData_addNonGroupExpenseBuilder?
              addNonGroupExpense) =>
      _$this._addNonGroupExpense = addNonGroupExpense;

  GcreateNonGroupExpenseDataBuilder() {
    GcreateNonGroupExpenseData._initializeBuilder(this);
  }

  GcreateNonGroupExpenseDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _addNonGroupExpense = $v.addNonGroupExpense.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcreateNonGroupExpenseData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcreateNonGroupExpenseData;
  }

  @override
  void update(void Function(GcreateNonGroupExpenseDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData build() => _build();

  _$GcreateNonGroupExpenseData _build() {
    _$GcreateNonGroupExpenseData _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GcreateNonGroupExpenseData', 'G__typename'),
              addNonGroupExpense: addNonGroupExpense.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addNonGroupExpense';
        addNonGroupExpense.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense
    extends GcreateNonGroupExpenseData_addNonGroupExpense {
  @override
  final String G__typename;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_group group;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense expense;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense(
          [void Function(GcreateNonGroupExpenseData_addNonGroupExpenseBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpenseBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense._(
      {required this.G__typename, required this.group, required this.expense})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GcreateNonGroupExpenseData_addNonGroupExpense', 'group');
    BuiltValueNullFieldError.checkNotNull(
        expense, r'GcreateNonGroupExpenseData_addNonGroupExpense', 'expense');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense rebuild(
          void Function(GcreateNonGroupExpenseData_addNonGroupExpenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder toBuilder() =>
      new GcreateNonGroupExpenseData_addNonGroupExpenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcreateNonGroupExpenseData_addNonGroupExpense &&
        G__typename == other.G__typename &&
        group == other.group &&
        expense == other.expense;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense')
          ..add('G__typename', G__typename)
          ..add('group', group)
          ..add('expense', expense))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpenseBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense,
            GcreateNonGroupExpenseData_addNonGroupExpenseBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder? _group;
  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder get group =>
      _$this._group ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder();
  set group(
          GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder? group) =>
      _$this._group = group;

  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder? _expense;
  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder get expense =>
      _$this._expense ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder();
  set expense(
          GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder?
              expense) =>
      _$this._expense = expense;

  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _group = $v.group.toBuilder();
      _expense = $v.expense.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcreateNonGroupExpenseData_addNonGroupExpense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcreateNonGroupExpenseData_addNonGroupExpense;
  }

  @override
  void update(
      void Function(GcreateNonGroupExpenseData_addNonGroupExpenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense',
                  'G__typename'),
              group: group.build(),
              expense: expense.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'group';
        group.build();
        _$failedField = 'expense';
        expense.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group {
  @override
  final String G__typename;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_group_creator creator;
  @override
  final BuiltList<GcreateNonGroupExpenseData_addNonGroupExpense_group_members>
      members;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.createdAt,
      required this.id,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(creator,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'creator');
    BuiltValueNullFieldError.checkNotNull(members,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'members');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'id');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder toBuilder() =>
      new GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcreateNonGroupExpenseData_addNonGroupExpense_group &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_group,
            GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder? _creator;
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder
      get creator => _$this._creator ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder();
  set creator(
          GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder?
              creator) =>
      _$this._creator = creator;

  ListBuilder<GcreateNonGroupExpenseData_addNonGroupExpense_group_members>?
      _members;
  ListBuilder<GcreateNonGroupExpenseData_addNonGroupExpense_group_members>
      get members => _$this._members ??= new ListBuilder<
          GcreateNonGroupExpenseData_addNonGroupExpense_group_members>();
  set members(
          ListBuilder<
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members>?
              members) =>
      _$this._members = members;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group._initializeBuilder(
        this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcreateNonGroupExpenseData_addNonGroupExpense_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcreateNonGroupExpenseData_addNonGroupExpense_group;
  }

  @override
  void update(
      void Function(GcreateNonGroupExpenseData_addNonGroupExpense_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_group._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group',
                  'G__typename'),
              creator: creator.build(),
              members: members.build(),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group',
                  'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(id,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group', 'id'),
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creator rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_group_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_group_creator,
            GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group_creator
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_group_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v =
        other as _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_creator build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_creator',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group_members {
  @override
  final String G__typename;
  @override
  final BuiltList<
          GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup>
      owedInGroup;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
      member;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
        'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
        'member');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_group_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_group_members,
            GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<
          GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup>?
      _owedInGroup;
  ListBuilder<
          GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup>
      get owedInGroup => _$this._owedInGroup ??= new ListBuilder<
          GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup>();
  set owedInGroup(
          ListBuilder<
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup>?
              owedInGroup) =>
      _$this._owedInGroup = owedInGroup;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder?
      _member;
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder
      get member => _$this._member ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder();
  set member(
          GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder?
              member) =>
      _$this._member = member;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup.toBuilder();
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v =
        other as _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_membersBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
                  'G__typename'),
              owedInGroup: owedInGroup.build(),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'owedInGroup';
        owedInGroup.build();
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup',
        'currencyId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup,
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
      build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_owedInGroup',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
    extends GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member,
            GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_group_members_memberBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_group_members_member',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense {
  @override
  final String G__typename;
  @override
  final BuiltList<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>
      splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense._(
      {required this.G__typename,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(splits,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(title,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(category,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'creatorId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder toBuilder() =>
      new GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcreateNonGroupExpenseData_addNonGroupExpense_expense &&
        G__typename == other.G__typename &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense')
          ..add('G__typename', G__typename)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_expense,
            GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>?
      _splits;
  ListBuilder<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>
      get splits => _$this._splits ??= new ListBuilder<
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>();
  set splits(
          ListBuilder<
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits>?
              splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder? _amount;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder
      get amount => _$this._amount ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder();
  set amount(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder?
              amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense._initializeBuilder(
        this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcreateNonGroupExpenseData_addNonGroupExpense_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense',
                  'G__typename'),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense',
                  'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'splits';
        splits.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits {
  @override
  final String G__typename;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense?
      expense;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
      group;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
      creator;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
      fromUser;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
      toUser;
  @override
  final String id;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
      amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'group');
    BuiltValueNullFieldError.checkNotNull(
        creator,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'toUser');
    BuiltValueNullFieldError.checkNotNull(id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
        'groupId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder?
      _expense;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder
      get expense => _$this._expense ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder();
  set expense(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder?
              expense) =>
      _$this._expense = expense;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder?
      _group;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder
      get group => _$this._group ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder();
  set group(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder?
              group) =>
      _$this._group = group;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder?
      _creator;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder
      get creator => _$this._creator ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder();
  set creator(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder?
              creator) =>
      _$this._creator = creator;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder?
      _fromUser;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder
      get fromUser => _$this._fromUser ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder();
  set fromUser(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder?
      _toUser;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder
      get toUser => _$this._toUser ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder();
  set toUser(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder?
              toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder?
      _amount;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder
      get amount => _$this._amount ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder();
  set amount(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder?
              amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v =
        other as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splitsBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
                  'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
                  'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(toUserId, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
      amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        title,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'category');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
        'creatorId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder?
      _amount;
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder
      get amount => _$this._amount ??=
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder();
  set amount(
          GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder?
              amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
      build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
      _build() {
    _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense
        _$result;
    try {
      _$result = _$v ??
          new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
                  'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId,
                  r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
                  'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount',
        'currencyId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
      rebuild(
              void Function(
                      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder)
                  updates) =>
          (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
      build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group',
        'id');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_group',
                'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
      build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_creator',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
      build() => _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
        'isSignedUp');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount',
        'currencyId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder
    implements
        Builder<
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
      _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_splits_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount
    extends GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount(
          [void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder)?
              updates]) =>
      (new GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount',
        'currencyId');
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount rebuild(
          void Function(
                  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder
      toBuilder() =>
          new GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder
    implements
        Builder<GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount,
            GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder> {
  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder() {
    GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount
        ._initializeBuilder(this);
  }

  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v =
        other as _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount;
  }

  @override
  void update(
      void Function(
              GcreateNonGroupExpenseData_addNonGroupExpense_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount build() =>
      _build();

  _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount _build() {
    final _$result = _$v ??
        new _$GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GcreateNonGroupExpenseData_addNonGroupExpense_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData extends GsettleInGroupData {
  @override
  final String G__typename;
  @override
  final GsettleInGroupData_settleInGroup settleInGroup;

  factory _$GsettleInGroupData(
          [void Function(GsettleInGroupDataBuilder)? updates]) =>
      (new GsettleInGroupDataBuilder()..update(updates))._build();

  _$GsettleInGroupData._(
      {required this.G__typename, required this.settleInGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        settleInGroup, r'GsettleInGroupData', 'settleInGroup');
  }

  @override
  GsettleInGroupData rebuild(
          void Function(GsettleInGroupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupDataBuilder toBuilder() =>
      new GsettleInGroupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData &&
        G__typename == other.G__typename &&
        settleInGroup == other.settleInGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, settleInGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsettleInGroupData')
          ..add('G__typename', G__typename)
          ..add('settleInGroup', settleInGroup))
        .toString();
  }
}

class GsettleInGroupDataBuilder
    implements Builder<GsettleInGroupData, GsettleInGroupDataBuilder> {
  _$GsettleInGroupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsettleInGroupData_settleInGroupBuilder? _settleInGroup;
  GsettleInGroupData_settleInGroupBuilder get settleInGroup =>
      _$this._settleInGroup ??= new GsettleInGroupData_settleInGroupBuilder();
  set settleInGroup(GsettleInGroupData_settleInGroupBuilder? settleInGroup) =>
      _$this._settleInGroup = settleInGroup;

  GsettleInGroupDataBuilder() {
    GsettleInGroupData._initializeBuilder(this);
  }

  GsettleInGroupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _settleInGroup = $v.settleInGroup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData;
  }

  @override
  void update(void Function(GsettleInGroupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData build() => _build();

  _$GsettleInGroupData _build() {
    _$GsettleInGroupData _$result;
    try {
      _$result = _$v ??
          new _$GsettleInGroupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsettleInGroupData', 'G__typename'),
              settleInGroup: settleInGroup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'settleInGroup';
        settleInGroup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsettleInGroupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup
    extends GsettleInGroupData_settleInGroup {
  @override
  final String G__typename;
  @override
  final GsettleInGroupData_settleInGroup_expense? expense;
  @override
  final GsettleInGroupData_settleInGroup_group group;
  @override
  final GsettleInGroupData_settleInGroup_creator creator;
  @override
  final GsettleInGroupData_settleInGroup_fromUser fromUser;
  @override
  final GsettleInGroupData_settleInGroup_toUser toUser;
  @override
  final String id;
  @override
  final GsettleInGroupData_settleInGroup_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsettleInGroupData_settleInGroup(
          [void Function(GsettleInGroupData_settleInGroupBuilder)? updates]) =>
      (new GsettleInGroupData_settleInGroupBuilder()..update(updates))._build();

  _$GsettleInGroupData_settleInGroup._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData_settleInGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GsettleInGroupData_settleInGroup', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GsettleInGroupData_settleInGroup', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GsettleInGroupData_settleInGroup', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GsettleInGroupData_settleInGroup', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsettleInGroupData_settleInGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GsettleInGroupData_settleInGroup', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsettleInGroupData_settleInGroup', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GsettleInGroupData_settleInGroup', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GsettleInGroupData_settleInGroup', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsettleInGroupData_settleInGroup', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GsettleInGroupData_settleInGroup', 'groupId');
  }

  @override
  GsettleInGroupData_settleInGroup rebuild(
          void Function(GsettleInGroupData_settleInGroupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroupBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsettleInGroupData_settleInGroup')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsettleInGroupData_settleInGroupBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup,
            GsettleInGroupData_settleInGroupBuilder> {
  _$GsettleInGroupData_settleInGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsettleInGroupData_settleInGroup_expenseBuilder? _expense;
  GsettleInGroupData_settleInGroup_expenseBuilder get expense =>
      _$this._expense ??= new GsettleInGroupData_settleInGroup_expenseBuilder();
  set expense(GsettleInGroupData_settleInGroup_expenseBuilder? expense) =>
      _$this._expense = expense;

  GsettleInGroupData_settleInGroup_groupBuilder? _group;
  GsettleInGroupData_settleInGroup_groupBuilder get group =>
      _$this._group ??= new GsettleInGroupData_settleInGroup_groupBuilder();
  set group(GsettleInGroupData_settleInGroup_groupBuilder? group) =>
      _$this._group = group;

  GsettleInGroupData_settleInGroup_creatorBuilder? _creator;
  GsettleInGroupData_settleInGroup_creatorBuilder get creator =>
      _$this._creator ??= new GsettleInGroupData_settleInGroup_creatorBuilder();
  set creator(GsettleInGroupData_settleInGroup_creatorBuilder? creator) =>
      _$this._creator = creator;

  GsettleInGroupData_settleInGroup_fromUserBuilder? _fromUser;
  GsettleInGroupData_settleInGroup_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GsettleInGroupData_settleInGroup_fromUserBuilder();
  set fromUser(GsettleInGroupData_settleInGroup_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GsettleInGroupData_settleInGroup_toUserBuilder? _toUser;
  GsettleInGroupData_settleInGroup_toUserBuilder get toUser =>
      _$this._toUser ??= new GsettleInGroupData_settleInGroup_toUserBuilder();
  set toUser(GsettleInGroupData_settleInGroup_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GsettleInGroupData_settleInGroup_amountBuilder? _amount;
  GsettleInGroupData_settleInGroup_amountBuilder get amount =>
      _$this._amount ??= new GsettleInGroupData_settleInGroup_amountBuilder();
  set amount(GsettleInGroupData_settleInGroup_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsettleInGroupData_settleInGroupBuilder() {
    GsettleInGroupData_settleInGroup._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup;
  }

  @override
  void update(void Function(GsettleInGroupData_settleInGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup build() => _build();

  _$GsettleInGroupData_settleInGroup _build() {
    _$GsettleInGroupData_settleInGroup _$result;
    try {
      _$result = _$v ??
          new _$GsettleInGroupData_settleInGroup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsettleInGroupData_settleInGroup', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsettleInGroupData_settleInGroup', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GsettleInGroupData_settleInGroup', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsettleInGroupData_settleInGroup', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GsettleInGroupData_settleInGroup', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GsettleInGroupData_settleInGroup', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GsettleInGroupData_settleInGroup', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GsettleInGroupData_settleInGroup', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsettleInGroupData_settleInGroup', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_expense
    extends GsettleInGroupData_settleInGroup_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GsettleInGroupData_settleInGroup_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsettleInGroupData_settleInGroup_expense(
          [void Function(GsettleInGroupData_settleInGroup_expenseBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_expenseBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsettleInGroupData_settleInGroup_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GsettleInGroupData_settleInGroup_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsettleInGroupData_settleInGroup_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GsettleInGroupData_settleInGroup_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsettleInGroupData_settleInGroup_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsettleInGroupData_settleInGroup_expense', 'creatorId');
  }

  @override
  GsettleInGroupData_settleInGroup_expense rebuild(
          void Function(GsettleInGroupData_settleInGroup_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_expenseBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_expenseBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_expense,
            GsettleInGroupData_settleInGroup_expenseBuilder> {
  _$GsettleInGroupData_settleInGroup_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GsettleInGroupData_settleInGroup_expense_amountBuilder? _amount;
  GsettleInGroupData_settleInGroup_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GsettleInGroupData_settleInGroup_expense_amountBuilder();
  set amount(GsettleInGroupData_settleInGroup_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsettleInGroupData_settleInGroup_expenseBuilder() {
    GsettleInGroupData_settleInGroup_expense._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_expense;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_expense build() => _build();

  _$GsettleInGroupData_settleInGroup_expense _build() {
    _$GsettleInGroupData_settleInGroup_expense _$result;
    try {
      _$result = _$v ??
          new _$GsettleInGroupData_settleInGroup_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GsettleInGroupData_settleInGroup_expense', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsettleInGroupData_settleInGroup_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GsettleInGroupData_settleInGroup_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsettleInGroupData_settleInGroup_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GsettleInGroupData_settleInGroup_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GsettleInGroupData_settleInGroup_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsettleInGroupData_settleInGroup_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_expense_amount
    extends GsettleInGroupData_settleInGroup_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsettleInGroupData_settleInGroup_expense_amount(
          [void Function(
                  GsettleInGroupData_settleInGroup_expense_amountBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsettleInGroupData_settleInGroup_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsettleInGroupData_settleInGroup_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GsettleInGroupData_settleInGroup_expense_amount', 'currencyId');
  }

  @override
  GsettleInGroupData_settleInGroup_expense_amount rebuild(
          void Function(GsettleInGroupData_settleInGroup_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_expense_amountBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_expense_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_expense_amountBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_expense_amount,
            GsettleInGroupData_settleInGroup_expense_amountBuilder> {
  _$GsettleInGroupData_settleInGroup_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsettleInGroupData_settleInGroup_expense_amountBuilder() {
    GsettleInGroupData_settleInGroup_expense_amount._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_expense_amount;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_expense_amount build() => _build();

  _$GsettleInGroupData_settleInGroup_expense_amount _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GsettleInGroupData_settleInGroup_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GsettleInGroupData_settleInGroup_expense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GsettleInGroupData_settleInGroup_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_group
    extends GsettleInGroupData_settleInGroup_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GsettleInGroupData_settleInGroup_group(
          [void Function(GsettleInGroupData_settleInGroup_groupBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_groupBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData_settleInGroup_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_group', 'id');
  }

  @override
  GsettleInGroupData_settleInGroup_group rebuild(
          void Function(GsettleInGroupData_settleInGroup_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_groupBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_groupBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_group,
            GsettleInGroupData_settleInGroup_groupBuilder> {
  _$GsettleInGroupData_settleInGroup_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GsettleInGroupData_settleInGroup_groupBuilder() {
    GsettleInGroupData_settleInGroup_group._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_group;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_group build() => _build();

  _$GsettleInGroupData_settleInGroup_group _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_creator
    extends GsettleInGroupData_settleInGroup_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsettleInGroupData_settleInGroup_creator(
          [void Function(GsettleInGroupData_settleInGroup_creatorBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_creatorBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsettleInGroupData_settleInGroup_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsettleInGroupData_settleInGroup_creator', 'isSignedUp');
  }

  @override
  GsettleInGroupData_settleInGroup_creator rebuild(
          void Function(GsettleInGroupData_settleInGroup_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_creatorBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_creatorBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_creator,
            GsettleInGroupData_settleInGroup_creatorBuilder> {
  _$GsettleInGroupData_settleInGroup_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsettleInGroupData_settleInGroup_creatorBuilder() {
    GsettleInGroupData_settleInGroup_creator._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_creator;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_creator build() => _build();

  _$GsettleInGroupData_settleInGroup_creator _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsettleInGroupData_settleInGroup_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_fromUser
    extends GsettleInGroupData_settleInGroup_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsettleInGroupData_settleInGroup_fromUser(
          [void Function(GsettleInGroupData_settleInGroup_fromUserBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_fromUserBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsettleInGroupData_settleInGroup_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsettleInGroupData_settleInGroup_fromUser', 'isSignedUp');
  }

  @override
  GsettleInGroupData_settleInGroup_fromUser rebuild(
          void Function(GsettleInGroupData_settleInGroup_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_fromUserBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_fromUserBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_fromUser,
            GsettleInGroupData_settleInGroup_fromUserBuilder> {
  _$GsettleInGroupData_settleInGroup_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsettleInGroupData_settleInGroup_fromUserBuilder() {
    GsettleInGroupData_settleInGroup_fromUser._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_fromUser;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_fromUser build() => _build();

  _$GsettleInGroupData_settleInGroup_fromUser _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsettleInGroupData_settleInGroup_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_toUser
    extends GsettleInGroupData_settleInGroup_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsettleInGroupData_settleInGroup_toUser(
          [void Function(GsettleInGroupData_settleInGroup_toUserBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_toUserBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData_settleInGroup_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsettleInGroupData_settleInGroup_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsettleInGroupData_settleInGroup_toUser', 'isSignedUp');
  }

  @override
  GsettleInGroupData_settleInGroup_toUser rebuild(
          void Function(GsettleInGroupData_settleInGroup_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_toUserBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_toUserBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_toUser,
            GsettleInGroupData_settleInGroup_toUserBuilder> {
  _$GsettleInGroupData_settleInGroup_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsettleInGroupData_settleInGroup_toUserBuilder() {
    GsettleInGroupData_settleInGroup_toUser._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_toUser;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_toUser build() => _build();

  _$GsettleInGroupData_settleInGroup_toUser _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsettleInGroupData_settleInGroup_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsettleInGroupData_settleInGroup_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsettleInGroupData_settleInGroup_amount
    extends GsettleInGroupData_settleInGroup_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsettleInGroupData_settleInGroup_amount(
          [void Function(GsettleInGroupData_settleInGroup_amountBuilder)?
              updates]) =>
      (new GsettleInGroupData_settleInGroup_amountBuilder()..update(updates))
          ._build();

  _$GsettleInGroupData_settleInGroup_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsettleInGroupData_settleInGroup_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsettleInGroupData_settleInGroup_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GsettleInGroupData_settleInGroup_amount', 'currencyId');
  }

  @override
  GsettleInGroupData_settleInGroup_amount rebuild(
          void Function(GsettleInGroupData_settleInGroup_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsettleInGroupData_settleInGroup_amountBuilder toBuilder() =>
      new GsettleInGroupData_settleInGroup_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsettleInGroupData_settleInGroup_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsettleInGroupData_settleInGroup_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsettleInGroupData_settleInGroup_amountBuilder
    implements
        Builder<GsettleInGroupData_settleInGroup_amount,
            GsettleInGroupData_settleInGroup_amountBuilder> {
  _$GsettleInGroupData_settleInGroup_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsettleInGroupData_settleInGroup_amountBuilder() {
    GsettleInGroupData_settleInGroup_amount._initializeBuilder(this);
  }

  GsettleInGroupData_settleInGroup_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsettleInGroupData_settleInGroup_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsettleInGroupData_settleInGroup_amount;
  }

  @override
  void update(
      void Function(GsettleInGroupData_settleInGroup_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsettleInGroupData_settleInGroup_amount build() => _build();

  _$GsettleInGroupData_settleInGroup_amount _build() {
    final _$result = _$v ??
        new _$GsettleInGroupData_settleInGroup_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsettleInGroupData_settleInGroup_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GsettleInGroupData_settleInGroup_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GsettleInGroupData_settleInGroup_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData extends GsimplifyUserData {
  @override
  final String G__typename;
  @override
  final BuiltList<GsimplifyUserData_simplifyCrossGroup> simplifyCrossGroup;

  factory _$GsimplifyUserData(
          [void Function(GsimplifyUserDataBuilder)? updates]) =>
      (new GsimplifyUserDataBuilder()..update(updates))._build();

  _$GsimplifyUserData._(
      {required this.G__typename, required this.simplifyCrossGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsimplifyUserData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        simplifyCrossGroup, r'GsimplifyUserData', 'simplifyCrossGroup');
  }

  @override
  GsimplifyUserData rebuild(void Function(GsimplifyUserDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserDataBuilder toBuilder() =>
      new GsimplifyUserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData &&
        G__typename == other.G__typename &&
        simplifyCrossGroup == other.simplifyCrossGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, simplifyCrossGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsimplifyUserData')
          ..add('G__typename', G__typename)
          ..add('simplifyCrossGroup', simplifyCrossGroup))
        .toString();
  }
}

class GsimplifyUserDataBuilder
    implements Builder<GsimplifyUserData, GsimplifyUserDataBuilder> {
  _$GsimplifyUserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GsimplifyUserData_simplifyCrossGroup>? _simplifyCrossGroup;
  ListBuilder<GsimplifyUserData_simplifyCrossGroup> get simplifyCrossGroup =>
      _$this._simplifyCrossGroup ??=
          new ListBuilder<GsimplifyUserData_simplifyCrossGroup>();
  set simplifyCrossGroup(
          ListBuilder<GsimplifyUserData_simplifyCrossGroup>?
              simplifyCrossGroup) =>
      _$this._simplifyCrossGroup = simplifyCrossGroup;

  GsimplifyUserDataBuilder() {
    GsimplifyUserData._initializeBuilder(this);
  }

  GsimplifyUserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _simplifyCrossGroup = $v.simplifyCrossGroup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData;
  }

  @override
  void update(void Function(GsimplifyUserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData build() => _build();

  _$GsimplifyUserData _build() {
    _$GsimplifyUserData _$result;
    try {
      _$result = _$v ??
          new _$GsimplifyUserData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsimplifyUserData', 'G__typename'),
              simplifyCrossGroup: simplifyCrossGroup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'simplifyCrossGroup';
        simplifyCrossGroup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsimplifyUserData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup
    extends GsimplifyUserData_simplifyCrossGroup {
  @override
  final String G__typename;
  @override
  final GsimplifyUserData_simplifyCrossGroup_expense? expense;
  @override
  final GsimplifyUserData_simplifyCrossGroup_group group;
  @override
  final GsimplifyUserData_simplifyCrossGroup_creator creator;
  @override
  final GsimplifyUserData_simplifyCrossGroup_fromUser fromUser;
  @override
  final GsimplifyUserData_simplifyCrossGroup_toUser toUser;
  @override
  final String id;
  @override
  final GsimplifyUserData_simplifyCrossGroup_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsimplifyUserData_simplifyCrossGroup(
          [void Function(GsimplifyUserData_simplifyCrossGroupBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroupBuilder()..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsimplifyUserData_simplifyCrossGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GsimplifyUserData_simplifyCrossGroup', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GsimplifyUserData_simplifyCrossGroup', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GsimplifyUserData_simplifyCrossGroup', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GsimplifyUserData_simplifyCrossGroup', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsimplifyUserData_simplifyCrossGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GsimplifyUserData_simplifyCrossGroup', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsimplifyUserData_simplifyCrossGroup', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GsimplifyUserData_simplifyCrossGroup', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GsimplifyUserData_simplifyCrossGroup', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsimplifyUserData_simplifyCrossGroup', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GsimplifyUserData_simplifyCrossGroup', 'groupId');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroupBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsimplifyUserData_simplifyCrossGroup')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroupBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup,
            GsimplifyUserData_simplifyCrossGroupBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsimplifyUserData_simplifyCrossGroup_expenseBuilder? _expense;
  GsimplifyUserData_simplifyCrossGroup_expenseBuilder get expense =>
      _$this._expense ??=
          new GsimplifyUserData_simplifyCrossGroup_expenseBuilder();
  set expense(GsimplifyUserData_simplifyCrossGroup_expenseBuilder? expense) =>
      _$this._expense = expense;

  GsimplifyUserData_simplifyCrossGroup_groupBuilder? _group;
  GsimplifyUserData_simplifyCrossGroup_groupBuilder get group =>
      _$this._group ??= new GsimplifyUserData_simplifyCrossGroup_groupBuilder();
  set group(GsimplifyUserData_simplifyCrossGroup_groupBuilder? group) =>
      _$this._group = group;

  GsimplifyUserData_simplifyCrossGroup_creatorBuilder? _creator;
  GsimplifyUserData_simplifyCrossGroup_creatorBuilder get creator =>
      _$this._creator ??=
          new GsimplifyUserData_simplifyCrossGroup_creatorBuilder();
  set creator(GsimplifyUserData_simplifyCrossGroup_creatorBuilder? creator) =>
      _$this._creator = creator;

  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder? _fromUser;
  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GsimplifyUserData_simplifyCrossGroup_fromUserBuilder();
  set fromUser(
          GsimplifyUserData_simplifyCrossGroup_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GsimplifyUserData_simplifyCrossGroup_toUserBuilder? _toUser;
  GsimplifyUserData_simplifyCrossGroup_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GsimplifyUserData_simplifyCrossGroup_toUserBuilder();
  set toUser(GsimplifyUserData_simplifyCrossGroup_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GsimplifyUserData_simplifyCrossGroup_amountBuilder? _amount;
  GsimplifyUserData_simplifyCrossGroup_amountBuilder get amount =>
      _$this._amount ??=
          new GsimplifyUserData_simplifyCrossGroup_amountBuilder();
  set amount(GsimplifyUserData_simplifyCrossGroup_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsimplifyUserData_simplifyCrossGroupBuilder() {
    GsimplifyUserData_simplifyCrossGroup._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup _build() {
    _$GsimplifyUserData_simplifyCrossGroup _$result;
    try {
      _$result = _$v ??
          new _$GsimplifyUserData_simplifyCrossGroup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsimplifyUserData_simplifyCrossGroup', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsimplifyUserData_simplifyCrossGroup', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GsimplifyUserData_simplifyCrossGroup', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsimplifyUserData_simplifyCrossGroup', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GsimplifyUserData_simplifyCrossGroup', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GsimplifyUserData_simplifyCrossGroup', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GsimplifyUserData_simplifyCrossGroup', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GsimplifyUserData_simplifyCrossGroup', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsimplifyUserData_simplifyCrossGroup',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_expense
    extends GsimplifyUserData_simplifyCrossGroup_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GsimplifyUserData_simplifyCrossGroup_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsimplifyUserData_simplifyCrossGroup_expense(
          [void Function(GsimplifyUserData_simplifyCrossGroup_expenseBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_expenseBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GsimplifyUserData_simplifyCrossGroup_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GsimplifyUserData_simplifyCrossGroup_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GsimplifyUserData_simplifyCrossGroup_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsimplifyUserData_simplifyCrossGroup_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GsimplifyUserData_simplifyCrossGroup_expense', 'creatorId');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_expenseBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_expenseBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_expense,
            GsimplifyUserData_simplifyCrossGroup_expenseBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder? _amount;
  GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder();
  set amount(
          GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsimplifyUserData_simplifyCrossGroup_expenseBuilder() {
    GsimplifyUserData_simplifyCrossGroup_expense._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_expense;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_expense _build() {
    _$GsimplifyUserData_simplifyCrossGroup_expense _$result;
    try {
      _$result = _$v ??
          new _$GsimplifyUserData_simplifyCrossGroup_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GsimplifyUserData_simplifyCrossGroup_expense',
                  'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsimplifyUserData_simplifyCrossGroup_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GsimplifyUserData_simplifyCrossGroup_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsimplifyUserData_simplifyCrossGroup_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GsimplifyUserData_simplifyCrossGroup_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GsimplifyUserData_simplifyCrossGroup_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsimplifyUserData_simplifyCrossGroup_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_expense_amount
    extends GsimplifyUserData_simplifyCrossGroup_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsimplifyUserData_simplifyCrossGroup_expense_amount(
          [void Function(
                  GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GsimplifyUserData_simplifyCrossGroup_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GsimplifyUserData_simplifyCrossGroup_expense_amount', 'currencyId');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense_amount rebuild(
          void Function(
                  GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_expense_amount,
            GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder() {
    GsimplifyUserData_simplifyCrossGroup_expense_amount._initializeBuilder(
        this);
  }

  GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_expense_amount;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_expense_amount build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_expense_amount _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GsimplifyUserData_simplifyCrossGroup_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GsimplifyUserData_simplifyCrossGroup_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_group
    extends GsimplifyUserData_simplifyCrossGroup_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GsimplifyUserData_simplifyCrossGroup_group(
          [void Function(GsimplifyUserData_simplifyCrossGroup_groupBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_groupBuilder()..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_group', 'id');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_group rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_groupBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_groupBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_group,
            GsimplifyUserData_simplifyCrossGroup_groupBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GsimplifyUserData_simplifyCrossGroup_groupBuilder() {
    GsimplifyUserData_simplifyCrossGroup_group._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_group;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_group build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_group _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_creator
    extends GsimplifyUserData_simplifyCrossGroup_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsimplifyUserData_simplifyCrossGroup_creator(
          [void Function(GsimplifyUserData_simplifyCrossGroup_creatorBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_creatorBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsimplifyUserData_simplifyCrossGroup_creator', 'isSignedUp');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_creator rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_creatorBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_creatorBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_creator,
            GsimplifyUserData_simplifyCrossGroup_creatorBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsimplifyUserData_simplifyCrossGroup_creatorBuilder() {
    GsimplifyUserData_simplifyCrossGroup_creator._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_creator;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_creator build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_creator _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsimplifyUserData_simplifyCrossGroup_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_fromUser
    extends GsimplifyUserData_simplifyCrossGroup_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsimplifyUserData_simplifyCrossGroup_fromUser(
          [void Function(GsimplifyUserData_simplifyCrossGroup_fromUserBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsimplifyUserData_simplifyCrossGroup_fromUser', 'isSignedUp');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_fromUser rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_fromUserBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_fromUser,
            GsimplifyUserData_simplifyCrossGroup_fromUserBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder() {
    GsimplifyUserData_simplifyCrossGroup_fromUser._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_fromUser;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_fromUser build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_fromUser _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GsimplifyUserData_simplifyCrossGroup_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_toUser
    extends GsimplifyUserData_simplifyCrossGroup_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsimplifyUserData_simplifyCrossGroup_toUser(
          [void Function(GsimplifyUserData_simplifyCrossGroup_toUserBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_toUserBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsimplifyUserData_simplifyCrossGroup_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsimplifyUserData_simplifyCrossGroup_toUser', 'isSignedUp');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_toUser rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_toUserBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_toUserBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_toUser,
            GsimplifyUserData_simplifyCrossGroup_toUserBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsimplifyUserData_simplifyCrossGroup_toUserBuilder() {
    GsimplifyUserData_simplifyCrossGroup_toUser._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_toUser;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_toUser build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_toUser _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsimplifyUserData_simplifyCrossGroup_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsimplifyUserData_simplifyCrossGroup_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsimplifyUserData_simplifyCrossGroup_amount
    extends GsimplifyUserData_simplifyCrossGroup_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsimplifyUserData_simplifyCrossGroup_amount(
          [void Function(GsimplifyUserData_simplifyCrossGroup_amountBuilder)?
              updates]) =>
      (new GsimplifyUserData_simplifyCrossGroup_amountBuilder()
            ..update(updates))
          ._build();

  _$GsimplifyUserData_simplifyCrossGroup_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsimplifyUserData_simplifyCrossGroup_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsimplifyUserData_simplifyCrossGroup_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GsimplifyUserData_simplifyCrossGroup_amount', 'currencyId');
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_amount rebuild(
          void Function(GsimplifyUserData_simplifyCrossGroup_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsimplifyUserData_simplifyCrossGroup_amountBuilder toBuilder() =>
      new GsimplifyUserData_simplifyCrossGroup_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsimplifyUserData_simplifyCrossGroup_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsimplifyUserData_simplifyCrossGroup_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsimplifyUserData_simplifyCrossGroup_amountBuilder
    implements
        Builder<GsimplifyUserData_simplifyCrossGroup_amount,
            GsimplifyUserData_simplifyCrossGroup_amountBuilder> {
  _$GsimplifyUserData_simplifyCrossGroup_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsimplifyUserData_simplifyCrossGroup_amountBuilder() {
    GsimplifyUserData_simplifyCrossGroup_amount._initializeBuilder(this);
  }

  GsimplifyUserData_simplifyCrossGroup_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsimplifyUserData_simplifyCrossGroup_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsimplifyUserData_simplifyCrossGroup_amount;
  }

  @override
  void update(
      void Function(GsimplifyUserData_simplifyCrossGroup_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsimplifyUserData_simplifyCrossGroup_amount build() => _build();

  _$GsimplifyUserData_simplifyCrossGroup_amount _build() {
    final _$result = _$v ??
        new _$GsimplifyUserData_simplifyCrossGroup_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsimplifyUserData_simplifyCrossGroup_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GsimplifyUserData_simplifyCrossGroup_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GsimplifyUserData_simplifyCrossGroup_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData extends GautoSettleWithUserData {
  @override
  final String G__typename;
  @override
  final BuiltList<GautoSettleWithUserData_autoSettleWithUser>
      autoSettleWithUser;

  factory _$GautoSettleWithUserData(
          [void Function(GautoSettleWithUserDataBuilder)? updates]) =>
      (new GautoSettleWithUserDataBuilder()..update(updates))._build();

  _$GautoSettleWithUserData._(
      {required this.G__typename, required this.autoSettleWithUser})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GautoSettleWithUserData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        autoSettleWithUser, r'GautoSettleWithUserData', 'autoSettleWithUser');
  }

  @override
  GautoSettleWithUserData rebuild(
          void Function(GautoSettleWithUserDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserDataBuilder toBuilder() =>
      new GautoSettleWithUserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData &&
        G__typename == other.G__typename &&
        autoSettleWithUser == other.autoSettleWithUser;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, autoSettleWithUser.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GautoSettleWithUserData')
          ..add('G__typename', G__typename)
          ..add('autoSettleWithUser', autoSettleWithUser))
        .toString();
  }
}

class GautoSettleWithUserDataBuilder
    implements
        Builder<GautoSettleWithUserData, GautoSettleWithUserDataBuilder> {
  _$GautoSettleWithUserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GautoSettleWithUserData_autoSettleWithUser>? _autoSettleWithUser;
  ListBuilder<GautoSettleWithUserData_autoSettleWithUser>
      get autoSettleWithUser => _$this._autoSettleWithUser ??=
          new ListBuilder<GautoSettleWithUserData_autoSettleWithUser>();
  set autoSettleWithUser(
          ListBuilder<GautoSettleWithUserData_autoSettleWithUser>?
              autoSettleWithUser) =>
      _$this._autoSettleWithUser = autoSettleWithUser;

  GautoSettleWithUserDataBuilder() {
    GautoSettleWithUserData._initializeBuilder(this);
  }

  GautoSettleWithUserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _autoSettleWithUser = $v.autoSettleWithUser.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData;
  }

  @override
  void update(void Function(GautoSettleWithUserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData build() => _build();

  _$GautoSettleWithUserData _build() {
    _$GautoSettleWithUserData _$result;
    try {
      _$result = _$v ??
          new _$GautoSettleWithUserData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GautoSettleWithUserData', 'G__typename'),
              autoSettleWithUser: autoSettleWithUser.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'autoSettleWithUser';
        autoSettleWithUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GautoSettleWithUserData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser
    extends GautoSettleWithUserData_autoSettleWithUser {
  @override
  final String G__typename;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_expense? expense;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_group group;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_creator creator;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_fromUser fromUser;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_toUser toUser;
  @override
  final String id;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GautoSettleWithUserData_autoSettleWithUser(
          [void Function(GautoSettleWithUserData_autoSettleWithUserBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUserBuilder()..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GautoSettleWithUserData_autoSettleWithUser', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GautoSettleWithUserData_autoSettleWithUser', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GautoSettleWithUserData_autoSettleWithUser', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GautoSettleWithUserData_autoSettleWithUser', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GautoSettleWithUserData_autoSettleWithUser', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GautoSettleWithUserData_autoSettleWithUser', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GautoSettleWithUserData_autoSettleWithUser', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(fromUserId,
        r'GautoSettleWithUserData_autoSettleWithUser', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GautoSettleWithUserData_autoSettleWithUser', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GautoSettleWithUserData_autoSettleWithUser', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GautoSettleWithUserData_autoSettleWithUser', 'groupId');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser rebuild(
          void Function(GautoSettleWithUserData_autoSettleWithUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUserBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUserBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser,
            GautoSettleWithUserData_autoSettleWithUserBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder? _expense;
  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder get expense =>
      _$this._expense ??=
          new GautoSettleWithUserData_autoSettleWithUser_expenseBuilder();
  set expense(
          GautoSettleWithUserData_autoSettleWithUser_expenseBuilder? expense) =>
      _$this._expense = expense;

  GautoSettleWithUserData_autoSettleWithUser_groupBuilder? _group;
  GautoSettleWithUserData_autoSettleWithUser_groupBuilder get group =>
      _$this._group ??=
          new GautoSettleWithUserData_autoSettleWithUser_groupBuilder();
  set group(GautoSettleWithUserData_autoSettleWithUser_groupBuilder? group) =>
      _$this._group = group;

  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder? _creator;
  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder get creator =>
      _$this._creator ??=
          new GautoSettleWithUserData_autoSettleWithUser_creatorBuilder();
  set creator(
          GautoSettleWithUserData_autoSettleWithUser_creatorBuilder? creator) =>
      _$this._creator = creator;

  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder? _fromUser;
  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder();
  set fromUser(
          GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder? _toUser;
  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GautoSettleWithUserData_autoSettleWithUser_toUserBuilder();
  set toUser(
          GautoSettleWithUserData_autoSettleWithUser_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GautoSettleWithUserData_autoSettleWithUser_amountBuilder? _amount;
  GautoSettleWithUserData_autoSettleWithUser_amountBuilder get amount =>
      _$this._amount ??=
          new GautoSettleWithUserData_autoSettleWithUser_amountBuilder();
  set amount(
          GautoSettleWithUserData_autoSettleWithUser_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GautoSettleWithUserData_autoSettleWithUserBuilder() {
    GautoSettleWithUserData_autoSettleWithUser._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser _build() {
    _$GautoSettleWithUserData_autoSettleWithUser _$result;
    try {
      _$result = _$v ??
          new _$GautoSettleWithUserData_autoSettleWithUser._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GautoSettleWithUserData_autoSettleWithUser', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GautoSettleWithUserData_autoSettleWithUser', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GautoSettleWithUserData_autoSettleWithUser', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GautoSettleWithUserData_autoSettleWithUser', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GautoSettleWithUserData_autoSettleWithUser', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GautoSettleWithUserData_autoSettleWithUser', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GautoSettleWithUserData_autoSettleWithUser', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GautoSettleWithUserData_autoSettleWithUser', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GautoSettleWithUserData_autoSettleWithUser',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_expense
    extends GautoSettleWithUserData_autoSettleWithUser_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GautoSettleWithUserData_autoSettleWithUser_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GautoSettleWithUserData_autoSettleWithUser_expense(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_expenseBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(category,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GautoSettleWithUserData_autoSettleWithUser_expense', 'creatorId');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_expenseBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_expenseBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_expense,
            GautoSettleWithUserData_autoSettleWithUser_expenseBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder? _amount;
  GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder();
  set amount(
          GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder?
              amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_expense._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_expense;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_expense _build() {
    _$GautoSettleWithUserData_autoSettleWithUser_expense _$result;
    try {
      _$result = _$v ??
          new _$GautoSettleWithUserData_autoSettleWithUser_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GautoSettleWithUserData_autoSettleWithUser_expense',
                  'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GautoSettleWithUserData_autoSettleWithUser_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId,
                  r'GautoSettleWithUserData_autoSettleWithUser_expense',
                  'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GautoSettleWithUserData_autoSettleWithUser_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_expense_amount
    extends GautoSettleWithUserData_autoSettleWithUser_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GautoSettleWithUserData_autoSettleWithUser_expense_amount(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_expense_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GautoSettleWithUserData_autoSettleWithUser_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GautoSettleWithUserData_autoSettleWithUser_expense_amount',
        'currencyId');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense_amount rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder
      toBuilder() =>
          new GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_expense_amount,
            GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_expense_amount
        ._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GautoSettleWithUserData_autoSettleWithUser_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_expense_amount;
  }

  @override
  void update(
      void Function(
              GautoSettleWithUserData_autoSettleWithUser_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_expense_amount build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_expense_amount _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GautoSettleWithUserData_autoSettleWithUser_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GautoSettleWithUserData_autoSettleWithUser_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_group
    extends GautoSettleWithUserData_autoSettleWithUser_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GautoSettleWithUserData_autoSettleWithUser_group(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_groupBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_groupBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_group', 'id');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_group rebuild(
          void Function(GautoSettleWithUserData_autoSettleWithUser_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_groupBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_groupBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_groupBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_group,
            GautoSettleWithUserData_autoSettleWithUser_groupBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GautoSettleWithUserData_autoSettleWithUser_groupBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_group._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_group;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_group build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_group _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_group',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GautoSettleWithUserData_autoSettleWithUser_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_creator
    extends GautoSettleWithUserData_autoSettleWithUser_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GautoSettleWithUserData_autoSettleWithUser_creator(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_creatorBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GautoSettleWithUserData_autoSettleWithUser_creator', 'isSignedUp');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_creator rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_creatorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_creatorBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_creator,
            GautoSettleWithUserData_autoSettleWithUser_creatorBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_creator._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_creator;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_creator build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_creator _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_creator',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(id,
                r'GautoSettleWithUserData_autoSettleWithUser_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GautoSettleWithUserData_autoSettleWithUser_creator',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_fromUser
    extends GautoSettleWithUserData_autoSettleWithUser_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GautoSettleWithUserData_autoSettleWithUser_fromUser(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GautoSettleWithUserData_autoSettleWithUser_fromUser', 'isSignedUp');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_fromUser rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_fromUser,
            GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_fromUser._initializeBuilder(
        this);
  }

  GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_fromUser;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_fromUser build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_fromUser _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(id,
                r'GautoSettleWithUserData_autoSettleWithUser_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GautoSettleWithUserData_autoSettleWithUser_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_toUser
    extends GautoSettleWithUserData_autoSettleWithUser_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GautoSettleWithUserData_autoSettleWithUser_toUser(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_toUserBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GautoSettleWithUserData_autoSettleWithUser_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GautoSettleWithUserData_autoSettleWithUser_toUser', 'isSignedUp');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_toUser rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_toUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_toUserBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_toUser,
            GautoSettleWithUserData_autoSettleWithUser_toUserBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_toUser._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_toUser;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_toUser build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_toUser _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GautoSettleWithUserData_autoSettleWithUser_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GautoSettleWithUserData_autoSettleWithUser_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GautoSettleWithUserData_autoSettleWithUser_amount
    extends GautoSettleWithUserData_autoSettleWithUser_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GautoSettleWithUserData_autoSettleWithUser_amount(
          [void Function(
                  GautoSettleWithUserData_autoSettleWithUser_amountBuilder)?
              updates]) =>
      (new GautoSettleWithUserData_autoSettleWithUser_amountBuilder()
            ..update(updates))
          ._build();

  _$GautoSettleWithUserData_autoSettleWithUser_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GautoSettleWithUserData_autoSettleWithUser_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GautoSettleWithUserData_autoSettleWithUser_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GautoSettleWithUserData_autoSettleWithUser_amount', 'currencyId');
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_amount rebuild(
          void Function(
                  GautoSettleWithUserData_autoSettleWithUser_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GautoSettleWithUserData_autoSettleWithUser_amountBuilder toBuilder() =>
      new GautoSettleWithUserData_autoSettleWithUser_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GautoSettleWithUserData_autoSettleWithUser_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GautoSettleWithUserData_autoSettleWithUser_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GautoSettleWithUserData_autoSettleWithUser_amountBuilder
    implements
        Builder<GautoSettleWithUserData_autoSettleWithUser_amount,
            GautoSettleWithUserData_autoSettleWithUser_amountBuilder> {
  _$GautoSettleWithUserData_autoSettleWithUser_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GautoSettleWithUserData_autoSettleWithUser_amountBuilder() {
    GautoSettleWithUserData_autoSettleWithUser_amount._initializeBuilder(this);
  }

  GautoSettleWithUserData_autoSettleWithUser_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GautoSettleWithUserData_autoSettleWithUser_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GautoSettleWithUserData_autoSettleWithUser_amount;
  }

  @override
  void update(
      void Function(GautoSettleWithUserData_autoSettleWithUser_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GautoSettleWithUserData_autoSettleWithUser_amount build() => _build();

  _$GautoSettleWithUserData_autoSettleWithUser_amount _build() {
    final _$result = _$v ??
        new _$GautoSettleWithUserData_autoSettleWithUser_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GautoSettleWithUserData_autoSettleWithUser_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GautoSettleWithUserData_autoSettleWithUser_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GautoSettleWithUserData_autoSettleWithUser_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData extends GtransactionWithUserData {
  @override
  final String G__typename;
  @override
  final BuiltList<GtransactionWithUserData_getTransactionsMixExpenseWithUser>
      getTransactionsMixExpenseWithUser;

  factory _$GtransactionWithUserData(
          [void Function(GtransactionWithUserDataBuilder)? updates]) =>
      (new GtransactionWithUserDataBuilder()..update(updates))._build();

  _$GtransactionWithUserData._(
      {required this.G__typename,
      required this.getTransactionsMixExpenseWithUser})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GtransactionWithUserData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(getTransactionsMixExpenseWithUser,
        r'GtransactionWithUserData', 'getTransactionsMixExpenseWithUser');
  }

  @override
  GtransactionWithUserData rebuild(
          void Function(GtransactionWithUserDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserDataBuilder toBuilder() =>
      new GtransactionWithUserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionWithUserData &&
        G__typename == other.G__typename &&
        getTransactionsMixExpenseWithUser ==
            other.getTransactionsMixExpenseWithUser;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, getTransactionsMixExpenseWithUser.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GtransactionWithUserData')
          ..add('G__typename', G__typename)
          ..add('getTransactionsMixExpenseWithUser',
              getTransactionsMixExpenseWithUser))
        .toString();
  }
}

class GtransactionWithUserDataBuilder
    implements
        Builder<GtransactionWithUserData, GtransactionWithUserDataBuilder> {
  _$GtransactionWithUserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GtransactionWithUserData_getTransactionsMixExpenseWithUser>?
      _getTransactionsMixExpenseWithUser;
  ListBuilder<GtransactionWithUserData_getTransactionsMixExpenseWithUser>
      get getTransactionsMixExpenseWithUser =>
          _$this._getTransactionsMixExpenseWithUser ??= new ListBuilder<
              GtransactionWithUserData_getTransactionsMixExpenseWithUser>();
  set getTransactionsMixExpenseWithUser(
          ListBuilder<
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser>?
              getTransactionsMixExpenseWithUser) =>
      _$this._getTransactionsMixExpenseWithUser =
          getTransactionsMixExpenseWithUser;

  GtransactionWithUserDataBuilder() {
    GtransactionWithUserData._initializeBuilder(this);
  }

  GtransactionWithUserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _getTransactionsMixExpenseWithUser =
          $v.getTransactionsMixExpenseWithUser.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionWithUserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData;
  }

  @override
  void update(void Function(GtransactionWithUserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData build() => _build();

  _$GtransactionWithUserData _build() {
    _$GtransactionWithUserData _$result;
    try {
      _$result = _$v ??
          new _$GtransactionWithUserData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GtransactionWithUserData', 'G__typename'),
              getTransactionsMixExpenseWithUser:
                  getTransactionsMixExpenseWithUser.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'getTransactionsMixExpenseWithUser';
        getTransactionsMixExpenseWithUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionWithUserData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser
    extends GtransactionWithUserData_getTransactionsMixExpenseWithUser {
  @override
  final String G__typename;
  @override
  final GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense?
      expense;
  @override
  final GtransactionWithUserData_getTransactionsMixExpenseWithUser_split? split;

  factory _$GtransactionWithUserData_getTransactionsMixExpenseWithUser(
          [void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser._(
      {required this.G__typename, this.expense, this.split})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser',
        'G__typename');
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder
      toBuilder() =>
          new GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionWithUserData_getTransactionsMixExpenseWithUser &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        split == other.split;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, split.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('split', split))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder
    implements
        Builder<GtransactionWithUserData_getTransactionsMixExpenseWithUser,
            GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder> {
  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder?
      _expense;
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder
      get expense => _$this._expense ??=
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder();
  set expense(
          GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder?
              expense) =>
      _$this._expense = expense;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder?
      _split;
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder
      get split => _$this._split ??=
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder();
  set split(
          GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder?
              split) =>
      _$this._split = split;

  GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder() {
    GtransactionWithUserData_getTransactionsMixExpenseWithUser
        ._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _split = $v.split?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionWithUserData_getTransactionsMixExpenseWithUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionWithUserData_getTransactionsMixExpenseWithUser;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsMixExpenseWithUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser build() =>
      _build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser _build() {
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser _$result;
    try {
      _$result = _$v ??
          new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GtransactionWithUserData_getTransactionsMixExpenseWithUser',
                  'G__typename'),
              expense: _expense?.build(),
              split: _split?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'split';
        _split?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense
    extends GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
      amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense(
          [void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        title,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
        'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
        'category');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
        'creatorId');
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder
      toBuilder() =>
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder
    implements
        Builder<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense,
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder> {
  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder?
      _amount;
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder
      get amount => _$this._amount ??=
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder();
  set amount(
          GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder?
              amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder() {
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense
        ._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense build() =>
      _build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense
      _build() {
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense
        _$result;
    try {
      _$result = _$v ??
          new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
                  'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId,
                  r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
                  'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
    extends GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount(
          [void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount',
        'currencyId');
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder
      toBuilder() =>
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder
    implements
        Builder<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount,
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder> {
  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder() {
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
        ._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
      build() => _build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
      _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split
    extends GtransactionWithUserData_getTransactionsMixExpenseWithUser_split {
  @override
  final String G__typename;
  @override
  final GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
      fromUser;
  @override
  final GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
      toUser;
  @override
  final String id;
  @override
  final GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
      amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split(
          [void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
        'groupId');
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder
      toBuilder() =>
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionWithUserData_getTransactionsMixExpenseWithUser_split &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder
    implements
        Builder<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split,
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder> {
  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder?
      _fromUser;
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder
      get fromUser => _$this._fromUser ??=
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder();
  set fromUser(
          GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder?
      _toUser;
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder
      get toUser => _$this._toUser ??=
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder();
  set toUser(
          GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder?
              toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder?
      _amount;
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder
      get amount => _$this._amount ??=
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder();
  set amount(
          GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder?
              amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder() {
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_split
        ._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_splitBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split build() =>
      _build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split _build() {
    _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split _$result;
    try {
      _$result = _$v ??
          new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
                  'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId,
                  r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
                  'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(toUserId, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
    extends GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser(
          [void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser',
        'isSignedUp');
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder
      toBuilder() =>
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder
    implements
        Builder<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser,
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder> {
  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder() {
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
        ._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
      build() => _build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
      _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
    extends GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser(
          [void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser',
        'isSignedUp');
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder
      toBuilder() =>
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder
    implements
        Builder<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser,
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder> {
  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder() {
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
        ._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
      build() => _build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
      _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
    extends GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount(
          [void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder)?
              updates]) =>
      (new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder()
            ..update(updates))
          ._build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount',
        'currencyId');
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount rebuild(
          void Function(
                  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder
      toBuilder() =>
          new GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder
    implements
        Builder<
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount,
            GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder> {
  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder() {
    GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
        ._initializeBuilder(this);
  }

  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount;
  }

  @override
  void update(
      void Function(
              GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
      build() => _build();

  _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
      _build() {
    final _$result = _$v ??
        new _$GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GtransactionWithUserData_getTransactionsMixExpenseWithUser_split_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData extends GtransactionMixExpenseData {
  @override
  final String G__typename;
  @override
  final BuiltList<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>
      getTransactionsMixExpenseWithGroup;

  factory _$GtransactionMixExpenseData(
          [void Function(GtransactionMixExpenseDataBuilder)? updates]) =>
      (new GtransactionMixExpenseDataBuilder()..update(updates))._build();

  _$GtransactionMixExpenseData._(
      {required this.G__typename,
      required this.getTransactionsMixExpenseWithGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GtransactionMixExpenseData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(getTransactionsMixExpenseWithGroup,
        r'GtransactionMixExpenseData', 'getTransactionsMixExpenseWithGroup');
  }

  @override
  GtransactionMixExpenseData rebuild(
          void Function(GtransactionMixExpenseDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseDataBuilder toBuilder() =>
      new GtransactionMixExpenseDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GtransactionMixExpenseData &&
        G__typename == other.G__typename &&
        getTransactionsMixExpenseWithGroup ==
            other.getTransactionsMixExpenseWithGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, getTransactionsMixExpenseWithGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GtransactionMixExpenseData')
          ..add('G__typename', G__typename)
          ..add('getTransactionsMixExpenseWithGroup',
              getTransactionsMixExpenseWithGroup))
        .toString();
  }
}

class GtransactionMixExpenseDataBuilder
    implements
        Builder<GtransactionMixExpenseData, GtransactionMixExpenseDataBuilder> {
  _$GtransactionMixExpenseData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>?
      _getTransactionsMixExpenseWithGroup;
  ListBuilder<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>
      get getTransactionsMixExpenseWithGroup =>
          _$this._getTransactionsMixExpenseWithGroup ??= new ListBuilder<
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>();
  set getTransactionsMixExpenseWithGroup(
          ListBuilder<
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup>?
              getTransactionsMixExpenseWithGroup) =>
      _$this._getTransactionsMixExpenseWithGroup =
          getTransactionsMixExpenseWithGroup;

  GtransactionMixExpenseDataBuilder() {
    GtransactionMixExpenseData._initializeBuilder(this);
  }

  GtransactionMixExpenseDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _getTransactionsMixExpenseWithGroup =
          $v.getTransactionsMixExpenseWithGroup.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GtransactionMixExpenseData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GtransactionMixExpenseData;
  }

  @override
  void update(void Function(GtransactionMixExpenseDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData build() => _build();

  _$GtransactionMixExpenseData _build() {
    _$GtransactionMixExpenseData _$result;
    try {
      _$result = _$v ??
          new _$GtransactionMixExpenseData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GtransactionMixExpenseData', 'G__typename'),
              getTransactionsMixExpenseWithGroup:
                  getTransactionsMixExpenseWithGroup.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'getTransactionsMixExpenseWithGroup';
        getTransactionsMixExpenseWithGroup.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionMixExpenseData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup {
  @override
  final String G__typename;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense?
      expense;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split?
      split;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup._(
      {required this.G__typename, this.expense, this.split})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup',
        'G__typename');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup rebuild(
          void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        split == other.split;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, split.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('split', split))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder
    implements
        Builder<GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder?
      _expense;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder
      get expense => _$this._expense ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder();
  set expense(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder?
              expense) =>
      _$this._expense = expense;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder?
      _split;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder
      get split => _$this._split ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder();
  set split(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder?
              split) =>
      _$this._split = split;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _split = $v.split?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup build() =>
      _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup _build() {
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup _$result;
    try {
      _$result = _$v ??
          new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup',
                  'G__typename'),
              expense: _expense?.build(),
              split: _split?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'split';
        _split?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
      amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        title,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'category');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
        'creatorId');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense rebuild(
          void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder?
      _amount;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder
      get amount => _$this._amount ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder();
  set amount(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder?
              amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
      build() => _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
      _build() {
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense
        _$result;
    try {
      _$result = _$v ??
          new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
                  'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
                  'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount',
        'currencyId');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
      rebuild(
              void Function(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder)
                  updates) =>
          (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
      build() => _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
      _build() {
    final _$result = _$v ??
        new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split {
  @override
  final String G__typename;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      fromUser;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      toUser;
  @override
  final String id;
  @override
  final GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
      amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
        'groupId');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split rebuild(
          void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder?
      _fromUser;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder
      get fromUser => _$this._fromUser ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder();
  set fromUser(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder?
      _toUser;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder
      get toUser => _$this._toUser ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder();
  set toUser(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder?
              toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder?
      _amount;
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder
      get amount => _$this._amount ??=
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder();
  set amount(
          GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder?
              amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_splitBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split build() =>
      _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
      _build() {
    _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split
        _$result;
    try {
      _$result = _$v ??
          new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
                  'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId,
                  r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
                  'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(toUserId, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
        'isSignedUp');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      rebuild(
              void Function(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder)
                  updates) =>
          (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      build() => _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
      _build() {
    final _$result = _$v ??
        new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
        'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
        'isSignedUp');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      rebuild(
              void Function(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder)
                  updates) =>
          (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      build() => _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
      _build() {
    final _$result = _$v ??
        new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
                'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
    extends GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount(
          [void Function(
                  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder)?
              updates]) =>
      (new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder()
            ..update(updates))
          ._build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount',
        'currencyId');
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
      rebuild(
              void Function(
                      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder)
                  updates) =>
          (toBuilder()..update(updates)).build();

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder
      toBuilder() =>
          new GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder
    implements
        Builder<
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount,
            GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder> {
  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount?
      _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder() {
    GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
        ._initializeBuilder(this);
  }

  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
          other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount;
  }

  @override
  void update(
      void Function(
              GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
      build() => _build();

  _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
      _build() {
    final _$result = _$v ??
        new _$GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount
            ._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GtransactionMixExpenseData_getTransactionsMixExpenseWithGroup_split_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsetDefaultCurrencyData extends GsetDefaultCurrencyData {
  @override
  final String G__typename;
  @override
  final GsetDefaultCurrencyData_setDefaultCurrency setDefaultCurrency;

  factory _$GsetDefaultCurrencyData(
          [void Function(GsetDefaultCurrencyDataBuilder)? updates]) =>
      (new GsetDefaultCurrencyDataBuilder()..update(updates))._build();

  _$GsetDefaultCurrencyData._(
      {required this.G__typename, required this.setDefaultCurrency})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsetDefaultCurrencyData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        setDefaultCurrency, r'GsetDefaultCurrencyData', 'setDefaultCurrency');
  }

  @override
  GsetDefaultCurrencyData rebuild(
          void Function(GsetDefaultCurrencyDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsetDefaultCurrencyDataBuilder toBuilder() =>
      new GsetDefaultCurrencyDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsetDefaultCurrencyData &&
        G__typename == other.G__typename &&
        setDefaultCurrency == other.setDefaultCurrency;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, setDefaultCurrency.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsetDefaultCurrencyData')
          ..add('G__typename', G__typename)
          ..add('setDefaultCurrency', setDefaultCurrency))
        .toString();
  }
}

class GsetDefaultCurrencyDataBuilder
    implements
        Builder<GsetDefaultCurrencyData, GsetDefaultCurrencyDataBuilder> {
  _$GsetDefaultCurrencyData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsetDefaultCurrencyData_setDefaultCurrencyBuilder? _setDefaultCurrency;
  GsetDefaultCurrencyData_setDefaultCurrencyBuilder get setDefaultCurrency =>
      _$this._setDefaultCurrency ??=
          new GsetDefaultCurrencyData_setDefaultCurrencyBuilder();
  set setDefaultCurrency(
          GsetDefaultCurrencyData_setDefaultCurrencyBuilder?
              setDefaultCurrency) =>
      _$this._setDefaultCurrency = setDefaultCurrency;

  GsetDefaultCurrencyDataBuilder() {
    GsetDefaultCurrencyData._initializeBuilder(this);
  }

  GsetDefaultCurrencyDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _setDefaultCurrency = $v.setDefaultCurrency.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsetDefaultCurrencyData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsetDefaultCurrencyData;
  }

  @override
  void update(void Function(GsetDefaultCurrencyDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsetDefaultCurrencyData build() => _build();

  _$GsetDefaultCurrencyData _build() {
    _$GsetDefaultCurrencyData _$result;
    try {
      _$result = _$v ??
          new _$GsetDefaultCurrencyData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsetDefaultCurrencyData', 'G__typename'),
              setDefaultCurrency: setDefaultCurrency.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'setDefaultCurrency';
        setDefaultCurrency.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsetDefaultCurrencyData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsetDefaultCurrencyData_setDefaultCurrency
    extends GsetDefaultCurrencyData_setDefaultCurrency {
  @override
  final String G__typename;
  @override
  final String defaultCurrencyId;

  factory _$GsetDefaultCurrencyData_setDefaultCurrency(
          [void Function(GsetDefaultCurrencyData_setDefaultCurrencyBuilder)?
              updates]) =>
      (new GsetDefaultCurrencyData_setDefaultCurrencyBuilder()..update(updates))
          ._build();

  _$GsetDefaultCurrencyData_setDefaultCurrency._(
      {required this.G__typename, required this.defaultCurrencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsetDefaultCurrencyData_setDefaultCurrency', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(defaultCurrencyId,
        r'GsetDefaultCurrencyData_setDefaultCurrency', 'defaultCurrencyId');
  }

  @override
  GsetDefaultCurrencyData_setDefaultCurrency rebuild(
          void Function(GsetDefaultCurrencyData_setDefaultCurrencyBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsetDefaultCurrencyData_setDefaultCurrencyBuilder toBuilder() =>
      new GsetDefaultCurrencyData_setDefaultCurrencyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsetDefaultCurrencyData_setDefaultCurrency &&
        G__typename == other.G__typename &&
        defaultCurrencyId == other.defaultCurrencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, defaultCurrencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsetDefaultCurrencyData_setDefaultCurrency')
          ..add('G__typename', G__typename)
          ..add('defaultCurrencyId', defaultCurrencyId))
        .toString();
  }
}

class GsetDefaultCurrencyData_setDefaultCurrencyBuilder
    implements
        Builder<GsetDefaultCurrencyData_setDefaultCurrency,
            GsetDefaultCurrencyData_setDefaultCurrencyBuilder> {
  _$GsetDefaultCurrencyData_setDefaultCurrency? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _defaultCurrencyId;
  String? get defaultCurrencyId => _$this._defaultCurrencyId;
  set defaultCurrencyId(String? defaultCurrencyId) =>
      _$this._defaultCurrencyId = defaultCurrencyId;

  GsetDefaultCurrencyData_setDefaultCurrencyBuilder() {
    GsetDefaultCurrencyData_setDefaultCurrency._initializeBuilder(this);
  }

  GsetDefaultCurrencyData_setDefaultCurrencyBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _defaultCurrencyId = $v.defaultCurrencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsetDefaultCurrencyData_setDefaultCurrency other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsetDefaultCurrencyData_setDefaultCurrency;
  }

  @override
  void update(
      void Function(GsetDefaultCurrencyData_setDefaultCurrencyBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsetDefaultCurrencyData_setDefaultCurrency build() => _build();

  _$GsetDefaultCurrencyData_setDefaultCurrency _build() {
    final _$result = _$v ??
        new _$GsetDefaultCurrencyData_setDefaultCurrency._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsetDefaultCurrencyData_setDefaultCurrency', 'G__typename'),
            defaultCurrencyId: BuiltValueNullFieldError.checkNotNull(
                defaultCurrencyId,
                r'GsetDefaultCurrencyData_setDefaultCurrency',
                'defaultCurrencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData extends GcurrencyConvertData {
  @override
  final String G__typename;
  @override
  final BuiltList<GcurrencyConvertData_convertCurrency> convertCurrency;

  factory _$GcurrencyConvertData(
          [void Function(GcurrencyConvertDataBuilder)? updates]) =>
      (new GcurrencyConvertDataBuilder()..update(updates))._build();

  _$GcurrencyConvertData._(
      {required this.G__typename, required this.convertCurrency})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GcurrencyConvertData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        convertCurrency, r'GcurrencyConvertData', 'convertCurrency');
  }

  @override
  GcurrencyConvertData rebuild(
          void Function(GcurrencyConvertDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertDataBuilder toBuilder() =>
      new GcurrencyConvertDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData &&
        G__typename == other.G__typename &&
        convertCurrency == other.convertCurrency;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, convertCurrency.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GcurrencyConvertData')
          ..add('G__typename', G__typename)
          ..add('convertCurrency', convertCurrency))
        .toString();
  }
}

class GcurrencyConvertDataBuilder
    implements Builder<GcurrencyConvertData, GcurrencyConvertDataBuilder> {
  _$GcurrencyConvertData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GcurrencyConvertData_convertCurrency>? _convertCurrency;
  ListBuilder<GcurrencyConvertData_convertCurrency> get convertCurrency =>
      _$this._convertCurrency ??=
          new ListBuilder<GcurrencyConvertData_convertCurrency>();
  set convertCurrency(
          ListBuilder<GcurrencyConvertData_convertCurrency>? convertCurrency) =>
      _$this._convertCurrency = convertCurrency;

  GcurrencyConvertDataBuilder() {
    GcurrencyConvertData._initializeBuilder(this);
  }

  GcurrencyConvertDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _convertCurrency = $v.convertCurrency.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData;
  }

  @override
  void update(void Function(GcurrencyConvertDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData build() => _build();

  _$GcurrencyConvertData _build() {
    _$GcurrencyConvertData _$result;
    try {
      _$result = _$v ??
          new _$GcurrencyConvertData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GcurrencyConvertData', 'G__typename'),
              convertCurrency: convertCurrency.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'convertCurrency';
        convertCurrency.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcurrencyConvertData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData_convertCurrency
    extends GcurrencyConvertData_convertCurrency {
  @override
  final String G__typename;
  @override
  final GcurrencyConvertData_convertCurrency_expense? expense;
  @override
  final GcurrencyConvertData_convertCurrency_group group;
  @override
  final GcurrencyConvertData_convertCurrency_creator creator;
  @override
  final GcurrencyConvertData_convertCurrency_fromUser fromUser;
  @override
  final GcurrencyConvertData_convertCurrency_toUser toUser;
  @override
  final String id;
  @override
  final GcurrencyConvertData_convertCurrency_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GcurrencyConvertData_convertCurrency(
          [void Function(GcurrencyConvertData_convertCurrencyBuilder)?
              updates]) =>
      (new GcurrencyConvertData_convertCurrencyBuilder()..update(updates))
          ._build();

  _$GcurrencyConvertData_convertCurrency._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GcurrencyConvertData_convertCurrency', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GcurrencyConvertData_convertCurrency', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GcurrencyConvertData_convertCurrency', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GcurrencyConvertData_convertCurrency', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GcurrencyConvertData_convertCurrency', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcurrencyConvertData_convertCurrency', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GcurrencyConvertData_convertCurrency', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GcurrencyConvertData_convertCurrency', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GcurrencyConvertData_convertCurrency', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GcurrencyConvertData_convertCurrency', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GcurrencyConvertData_convertCurrency', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GcurrencyConvertData_convertCurrency', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GcurrencyConvertData_convertCurrency', 'groupId');
  }

  @override
  GcurrencyConvertData_convertCurrency rebuild(
          void Function(GcurrencyConvertData_convertCurrencyBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertData_convertCurrencyBuilder toBuilder() =>
      new GcurrencyConvertData_convertCurrencyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData_convertCurrency &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GcurrencyConvertData_convertCurrency')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GcurrencyConvertData_convertCurrencyBuilder
    implements
        Builder<GcurrencyConvertData_convertCurrency,
            GcurrencyConvertData_convertCurrencyBuilder> {
  _$GcurrencyConvertData_convertCurrency? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GcurrencyConvertData_convertCurrency_expenseBuilder? _expense;
  GcurrencyConvertData_convertCurrency_expenseBuilder get expense =>
      _$this._expense ??=
          new GcurrencyConvertData_convertCurrency_expenseBuilder();
  set expense(GcurrencyConvertData_convertCurrency_expenseBuilder? expense) =>
      _$this._expense = expense;

  GcurrencyConvertData_convertCurrency_groupBuilder? _group;
  GcurrencyConvertData_convertCurrency_groupBuilder get group =>
      _$this._group ??= new GcurrencyConvertData_convertCurrency_groupBuilder();
  set group(GcurrencyConvertData_convertCurrency_groupBuilder? group) =>
      _$this._group = group;

  GcurrencyConvertData_convertCurrency_creatorBuilder? _creator;
  GcurrencyConvertData_convertCurrency_creatorBuilder get creator =>
      _$this._creator ??=
          new GcurrencyConvertData_convertCurrency_creatorBuilder();
  set creator(GcurrencyConvertData_convertCurrency_creatorBuilder? creator) =>
      _$this._creator = creator;

  GcurrencyConvertData_convertCurrency_fromUserBuilder? _fromUser;
  GcurrencyConvertData_convertCurrency_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GcurrencyConvertData_convertCurrency_fromUserBuilder();
  set fromUser(
          GcurrencyConvertData_convertCurrency_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GcurrencyConvertData_convertCurrency_toUserBuilder? _toUser;
  GcurrencyConvertData_convertCurrency_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GcurrencyConvertData_convertCurrency_toUserBuilder();
  set toUser(GcurrencyConvertData_convertCurrency_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GcurrencyConvertData_convertCurrency_amountBuilder? _amount;
  GcurrencyConvertData_convertCurrency_amountBuilder get amount =>
      _$this._amount ??=
          new GcurrencyConvertData_convertCurrency_amountBuilder();
  set amount(GcurrencyConvertData_convertCurrency_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GcurrencyConvertData_convertCurrencyBuilder() {
    GcurrencyConvertData_convertCurrency._initializeBuilder(this);
  }

  GcurrencyConvertData_convertCurrencyBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData_convertCurrency other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData_convertCurrency;
  }

  @override
  void update(
      void Function(GcurrencyConvertData_convertCurrencyBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData_convertCurrency build() => _build();

  _$GcurrencyConvertData_convertCurrency _build() {
    _$GcurrencyConvertData_convertCurrency _$result;
    try {
      _$result = _$v ??
          new _$GcurrencyConvertData_convertCurrency._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GcurrencyConvertData_convertCurrency', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GcurrencyConvertData_convertCurrency', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GcurrencyConvertData_convertCurrency', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GcurrencyConvertData_convertCurrency', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GcurrencyConvertData_convertCurrency', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GcurrencyConvertData_convertCurrency', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GcurrencyConvertData_convertCurrency', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GcurrencyConvertData_convertCurrency', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcurrencyConvertData_convertCurrency',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData_convertCurrency_expense
    extends GcurrencyConvertData_convertCurrency_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GcurrencyConvertData_convertCurrency_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GcurrencyConvertData_convertCurrency_expense(
          [void Function(GcurrencyConvertData_convertCurrency_expenseBuilder)?
              updates]) =>
      (new GcurrencyConvertData_convertCurrency_expenseBuilder()
            ..update(updates))
          ._build();

  _$GcurrencyConvertData_convertCurrency_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcurrencyConvertData_convertCurrency_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcurrencyConvertData_convertCurrency_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GcurrencyConvertData_convertCurrency_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GcurrencyConvertData_convertCurrency_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GcurrencyConvertData_convertCurrency_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GcurrencyConvertData_convertCurrency_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GcurrencyConvertData_convertCurrency_expense', 'creatorId');
  }

  @override
  GcurrencyConvertData_convertCurrency_expense rebuild(
          void Function(GcurrencyConvertData_convertCurrency_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertData_convertCurrency_expenseBuilder toBuilder() =>
      new GcurrencyConvertData_convertCurrency_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData_convertCurrency_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcurrencyConvertData_convertCurrency_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GcurrencyConvertData_convertCurrency_expenseBuilder
    implements
        Builder<GcurrencyConvertData_convertCurrency_expense,
            GcurrencyConvertData_convertCurrency_expenseBuilder> {
  _$GcurrencyConvertData_convertCurrency_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GcurrencyConvertData_convertCurrency_expense_amountBuilder? _amount;
  GcurrencyConvertData_convertCurrency_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GcurrencyConvertData_convertCurrency_expense_amountBuilder();
  set amount(
          GcurrencyConvertData_convertCurrency_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GcurrencyConvertData_convertCurrency_expenseBuilder() {
    GcurrencyConvertData_convertCurrency_expense._initializeBuilder(this);
  }

  GcurrencyConvertData_convertCurrency_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData_convertCurrency_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData_convertCurrency_expense;
  }

  @override
  void update(
      void Function(GcurrencyConvertData_convertCurrency_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData_convertCurrency_expense build() => _build();

  _$GcurrencyConvertData_convertCurrency_expense _build() {
    _$GcurrencyConvertData_convertCurrency_expense _$result;
    try {
      _$result = _$v ??
          new _$GcurrencyConvertData_convertCurrency_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GcurrencyConvertData_convertCurrency_expense',
                  'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GcurrencyConvertData_convertCurrency_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GcurrencyConvertData_convertCurrency_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GcurrencyConvertData_convertCurrency_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GcurrencyConvertData_convertCurrency_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GcurrencyConvertData_convertCurrency_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GcurrencyConvertData_convertCurrency_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData_convertCurrency_expense_amount
    extends GcurrencyConvertData_convertCurrency_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GcurrencyConvertData_convertCurrency_expense_amount(
          [void Function(
                  GcurrencyConvertData_convertCurrency_expense_amountBuilder)?
              updates]) =>
      (new GcurrencyConvertData_convertCurrency_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GcurrencyConvertData_convertCurrency_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcurrencyConvertData_convertCurrency_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GcurrencyConvertData_convertCurrency_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GcurrencyConvertData_convertCurrency_expense_amount', 'currencyId');
  }

  @override
  GcurrencyConvertData_convertCurrency_expense_amount rebuild(
          void Function(
                  GcurrencyConvertData_convertCurrency_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertData_convertCurrency_expense_amountBuilder toBuilder() =>
      new GcurrencyConvertData_convertCurrency_expense_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData_convertCurrency_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcurrencyConvertData_convertCurrency_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GcurrencyConvertData_convertCurrency_expense_amountBuilder
    implements
        Builder<GcurrencyConvertData_convertCurrency_expense_amount,
            GcurrencyConvertData_convertCurrency_expense_amountBuilder> {
  _$GcurrencyConvertData_convertCurrency_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GcurrencyConvertData_convertCurrency_expense_amountBuilder() {
    GcurrencyConvertData_convertCurrency_expense_amount._initializeBuilder(
        this);
  }

  GcurrencyConvertData_convertCurrency_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData_convertCurrency_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData_convertCurrency_expense_amount;
  }

  @override
  void update(
      void Function(GcurrencyConvertData_convertCurrency_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData_convertCurrency_expense_amount build() => _build();

  _$GcurrencyConvertData_convertCurrency_expense_amount _build() {
    final _$result = _$v ??
        new _$GcurrencyConvertData_convertCurrency_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcurrencyConvertData_convertCurrency_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GcurrencyConvertData_convertCurrency_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GcurrencyConvertData_convertCurrency_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData_convertCurrency_group
    extends GcurrencyConvertData_convertCurrency_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GcurrencyConvertData_convertCurrency_group(
          [void Function(GcurrencyConvertData_convertCurrency_groupBuilder)?
              updates]) =>
      (new GcurrencyConvertData_convertCurrency_groupBuilder()..update(updates))
          ._build();

  _$GcurrencyConvertData_convertCurrency_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcurrencyConvertData_convertCurrency_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcurrencyConvertData_convertCurrency_group', 'id');
  }

  @override
  GcurrencyConvertData_convertCurrency_group rebuild(
          void Function(GcurrencyConvertData_convertCurrency_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertData_convertCurrency_groupBuilder toBuilder() =>
      new GcurrencyConvertData_convertCurrency_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData_convertCurrency_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcurrencyConvertData_convertCurrency_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GcurrencyConvertData_convertCurrency_groupBuilder
    implements
        Builder<GcurrencyConvertData_convertCurrency_group,
            GcurrencyConvertData_convertCurrency_groupBuilder> {
  _$GcurrencyConvertData_convertCurrency_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GcurrencyConvertData_convertCurrency_groupBuilder() {
    GcurrencyConvertData_convertCurrency_group._initializeBuilder(this);
  }

  GcurrencyConvertData_convertCurrency_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData_convertCurrency_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData_convertCurrency_group;
  }

  @override
  void update(
      void Function(GcurrencyConvertData_convertCurrency_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData_convertCurrency_group build() => _build();

  _$GcurrencyConvertData_convertCurrency_group _build() {
    final _$result = _$v ??
        new _$GcurrencyConvertData_convertCurrency_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GcurrencyConvertData_convertCurrency_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GcurrencyConvertData_convertCurrency_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData_convertCurrency_creator
    extends GcurrencyConvertData_convertCurrency_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcurrencyConvertData_convertCurrency_creator(
          [void Function(GcurrencyConvertData_convertCurrency_creatorBuilder)?
              updates]) =>
      (new GcurrencyConvertData_convertCurrency_creatorBuilder()
            ..update(updates))
          ._build();

  _$GcurrencyConvertData_convertCurrency_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcurrencyConvertData_convertCurrency_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcurrencyConvertData_convertCurrency_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GcurrencyConvertData_convertCurrency_creator', 'isSignedUp');
  }

  @override
  GcurrencyConvertData_convertCurrency_creator rebuild(
          void Function(GcurrencyConvertData_convertCurrency_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertData_convertCurrency_creatorBuilder toBuilder() =>
      new GcurrencyConvertData_convertCurrency_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData_convertCurrency_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcurrencyConvertData_convertCurrency_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcurrencyConvertData_convertCurrency_creatorBuilder
    implements
        Builder<GcurrencyConvertData_convertCurrency_creator,
            GcurrencyConvertData_convertCurrency_creatorBuilder> {
  _$GcurrencyConvertData_convertCurrency_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcurrencyConvertData_convertCurrency_creatorBuilder() {
    GcurrencyConvertData_convertCurrency_creator._initializeBuilder(this);
  }

  GcurrencyConvertData_convertCurrency_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData_convertCurrency_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData_convertCurrency_creator;
  }

  @override
  void update(
      void Function(GcurrencyConvertData_convertCurrency_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData_convertCurrency_creator build() => _build();

  _$GcurrencyConvertData_convertCurrency_creator _build() {
    final _$result = _$v ??
        new _$GcurrencyConvertData_convertCurrency_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GcurrencyConvertData_convertCurrency_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GcurrencyConvertData_convertCurrency_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GcurrencyConvertData_convertCurrency_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData_convertCurrency_fromUser
    extends GcurrencyConvertData_convertCurrency_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcurrencyConvertData_convertCurrency_fromUser(
          [void Function(GcurrencyConvertData_convertCurrency_fromUserBuilder)?
              updates]) =>
      (new GcurrencyConvertData_convertCurrency_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GcurrencyConvertData_convertCurrency_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcurrencyConvertData_convertCurrency_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcurrencyConvertData_convertCurrency_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GcurrencyConvertData_convertCurrency_fromUser', 'isSignedUp');
  }

  @override
  GcurrencyConvertData_convertCurrency_fromUser rebuild(
          void Function(GcurrencyConvertData_convertCurrency_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertData_convertCurrency_fromUserBuilder toBuilder() =>
      new GcurrencyConvertData_convertCurrency_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData_convertCurrency_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcurrencyConvertData_convertCurrency_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcurrencyConvertData_convertCurrency_fromUserBuilder
    implements
        Builder<GcurrencyConvertData_convertCurrency_fromUser,
            GcurrencyConvertData_convertCurrency_fromUserBuilder> {
  _$GcurrencyConvertData_convertCurrency_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcurrencyConvertData_convertCurrency_fromUserBuilder() {
    GcurrencyConvertData_convertCurrency_fromUser._initializeBuilder(this);
  }

  GcurrencyConvertData_convertCurrency_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData_convertCurrency_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData_convertCurrency_fromUser;
  }

  @override
  void update(
      void Function(GcurrencyConvertData_convertCurrency_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData_convertCurrency_fromUser build() => _build();

  _$GcurrencyConvertData_convertCurrency_fromUser _build() {
    final _$result = _$v ??
        new _$GcurrencyConvertData_convertCurrency_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GcurrencyConvertData_convertCurrency_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GcurrencyConvertData_convertCurrency_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GcurrencyConvertData_convertCurrency_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData_convertCurrency_toUser
    extends GcurrencyConvertData_convertCurrency_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GcurrencyConvertData_convertCurrency_toUser(
          [void Function(GcurrencyConvertData_convertCurrency_toUserBuilder)?
              updates]) =>
      (new GcurrencyConvertData_convertCurrency_toUserBuilder()
            ..update(updates))
          ._build();

  _$GcurrencyConvertData_convertCurrency_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcurrencyConvertData_convertCurrency_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GcurrencyConvertData_convertCurrency_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GcurrencyConvertData_convertCurrency_toUser', 'isSignedUp');
  }

  @override
  GcurrencyConvertData_convertCurrency_toUser rebuild(
          void Function(GcurrencyConvertData_convertCurrency_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertData_convertCurrency_toUserBuilder toBuilder() =>
      new GcurrencyConvertData_convertCurrency_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData_convertCurrency_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcurrencyConvertData_convertCurrency_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GcurrencyConvertData_convertCurrency_toUserBuilder
    implements
        Builder<GcurrencyConvertData_convertCurrency_toUser,
            GcurrencyConvertData_convertCurrency_toUserBuilder> {
  _$GcurrencyConvertData_convertCurrency_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GcurrencyConvertData_convertCurrency_toUserBuilder() {
    GcurrencyConvertData_convertCurrency_toUser._initializeBuilder(this);
  }

  GcurrencyConvertData_convertCurrency_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData_convertCurrency_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData_convertCurrency_toUser;
  }

  @override
  void update(
      void Function(GcurrencyConvertData_convertCurrency_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData_convertCurrency_toUser build() => _build();

  _$GcurrencyConvertData_convertCurrency_toUser _build() {
    final _$result = _$v ??
        new _$GcurrencyConvertData_convertCurrency_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GcurrencyConvertData_convertCurrency_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GcurrencyConvertData_convertCurrency_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GcurrencyConvertData_convertCurrency_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GcurrencyConvertData_convertCurrency_amount
    extends GcurrencyConvertData_convertCurrency_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GcurrencyConvertData_convertCurrency_amount(
          [void Function(GcurrencyConvertData_convertCurrency_amountBuilder)?
              updates]) =>
      (new GcurrencyConvertData_convertCurrency_amountBuilder()
            ..update(updates))
          ._build();

  _$GcurrencyConvertData_convertCurrency_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GcurrencyConvertData_convertCurrency_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GcurrencyConvertData_convertCurrency_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GcurrencyConvertData_convertCurrency_amount', 'currencyId');
  }

  @override
  GcurrencyConvertData_convertCurrency_amount rebuild(
          void Function(GcurrencyConvertData_convertCurrency_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcurrencyConvertData_convertCurrency_amountBuilder toBuilder() =>
      new GcurrencyConvertData_convertCurrency_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GcurrencyConvertData_convertCurrency_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GcurrencyConvertData_convertCurrency_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GcurrencyConvertData_convertCurrency_amountBuilder
    implements
        Builder<GcurrencyConvertData_convertCurrency_amount,
            GcurrencyConvertData_convertCurrency_amountBuilder> {
  _$GcurrencyConvertData_convertCurrency_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GcurrencyConvertData_convertCurrency_amountBuilder() {
    GcurrencyConvertData_convertCurrency_amount._initializeBuilder(this);
  }

  GcurrencyConvertData_convertCurrency_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GcurrencyConvertData_convertCurrency_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GcurrencyConvertData_convertCurrency_amount;
  }

  @override
  void update(
      void Function(GcurrencyConvertData_convertCurrency_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GcurrencyConvertData_convertCurrency_amount build() => _build();

  _$GcurrencyConvertData_convertCurrency_amount _build() {
    final _$result = _$v ??
        new _$GcurrencyConvertData_convertCurrency_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GcurrencyConvertData_convertCurrency_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GcurrencyConvertData_convertCurrency_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GcurrencyConvertData_convertCurrency_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GchangeNameData extends GchangeNameData {
  @override
  final String G__typename;
  @override
  final GchangeNameData_changeName changeName;

  factory _$GchangeNameData([void Function(GchangeNameDataBuilder)? updates]) =>
      (new GchangeNameDataBuilder()..update(updates))._build();

  _$GchangeNameData._({required this.G__typename, required this.changeName})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GchangeNameData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        changeName, r'GchangeNameData', 'changeName');
  }

  @override
  GchangeNameData rebuild(void Function(GchangeNameDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GchangeNameDataBuilder toBuilder() =>
      new GchangeNameDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GchangeNameData &&
        G__typename == other.G__typename &&
        changeName == other.changeName;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, changeName.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GchangeNameData')
          ..add('G__typename', G__typename)
          ..add('changeName', changeName))
        .toString();
  }
}

class GchangeNameDataBuilder
    implements Builder<GchangeNameData, GchangeNameDataBuilder> {
  _$GchangeNameData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GchangeNameData_changeNameBuilder? _changeName;
  GchangeNameData_changeNameBuilder get changeName =>
      _$this._changeName ??= new GchangeNameData_changeNameBuilder();
  set changeName(GchangeNameData_changeNameBuilder? changeName) =>
      _$this._changeName = changeName;

  GchangeNameDataBuilder() {
    GchangeNameData._initializeBuilder(this);
  }

  GchangeNameDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _changeName = $v.changeName.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GchangeNameData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GchangeNameData;
  }

  @override
  void update(void Function(GchangeNameDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GchangeNameData build() => _build();

  _$GchangeNameData _build() {
    _$GchangeNameData _$result;
    try {
      _$result = _$v ??
          new _$GchangeNameData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GchangeNameData', 'G__typename'),
              changeName: changeName.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'changeName';
        changeName.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GchangeNameData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GchangeNameData_changeName extends GchangeNameData_changeName {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GchangeNameData_changeName(
          [void Function(GchangeNameData_changeNameBuilder)? updates]) =>
      (new GchangeNameData_changeNameBuilder()..update(updates))._build();

  _$GchangeNameData_changeName._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GchangeNameData_changeName', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GchangeNameData_changeName', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GchangeNameData_changeName', 'isSignedUp');
  }

  @override
  GchangeNameData_changeName rebuild(
          void Function(GchangeNameData_changeNameBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GchangeNameData_changeNameBuilder toBuilder() =>
      new GchangeNameData_changeNameBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GchangeNameData_changeName &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GchangeNameData_changeName')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GchangeNameData_changeNameBuilder
    implements
        Builder<GchangeNameData_changeName, GchangeNameData_changeNameBuilder> {
  _$GchangeNameData_changeName? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GchangeNameData_changeNameBuilder() {
    GchangeNameData_changeName._initializeBuilder(this);
  }

  GchangeNameData_changeNameBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GchangeNameData_changeName other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GchangeNameData_changeName;
  }

  @override
  void update(void Function(GchangeNameData_changeNameBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GchangeNameData_changeName build() => _build();

  _$GchangeNameData_changeName _build() {
    final _$result = _$v ??
        new _$GchangeNameData_changeName._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GchangeNameData_changeName', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GchangeNameData_changeName', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GchangeNameData_changeName', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetTransactionsData extends GgetTransactionsData {
  @override
  final String G__typename;
  @override
  final BuiltList<GgetTransactionsData_getTransactions> getTransactions;

  factory _$GgetTransactionsData(
          [void Function(GgetTransactionsDataBuilder)? updates]) =>
      (new GgetTransactionsDataBuilder()..update(updates))._build();

  _$GgetTransactionsData._(
      {required this.G__typename, required this.getTransactions})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetTransactionsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        getTransactions, r'GgetTransactionsData', 'getTransactions');
  }

  @override
  GgetTransactionsData rebuild(
          void Function(GgetTransactionsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetTransactionsDataBuilder toBuilder() =>
      new GgetTransactionsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetTransactionsData &&
        G__typename == other.G__typename &&
        getTransactions == other.getTransactions;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, getTransactions.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetTransactionsData')
          ..add('G__typename', G__typename)
          ..add('getTransactions', getTransactions))
        .toString();
  }
}

class GgetTransactionsDataBuilder
    implements Builder<GgetTransactionsData, GgetTransactionsDataBuilder> {
  _$GgetTransactionsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GgetTransactionsData_getTransactions>? _getTransactions;
  ListBuilder<GgetTransactionsData_getTransactions> get getTransactions =>
      _$this._getTransactions ??=
          new ListBuilder<GgetTransactionsData_getTransactions>();
  set getTransactions(
          ListBuilder<GgetTransactionsData_getTransactions>? getTransactions) =>
      _$this._getTransactions = getTransactions;

  GgetTransactionsDataBuilder() {
    GgetTransactionsData._initializeBuilder(this);
  }

  GgetTransactionsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _getTransactions = $v.getTransactions.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetTransactionsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetTransactionsData;
  }

  @override
  void update(void Function(GgetTransactionsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetTransactionsData build() => _build();

  _$GgetTransactionsData _build() {
    _$GgetTransactionsData _$result;
    try {
      _$result = _$v ??
          new _$GgetTransactionsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgetTransactionsData', 'G__typename'),
              getTransactions: getTransactions.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'getTransactions';
        getTransactions.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgetTransactionsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgetTransactionsData_getTransactions
    extends GgetTransactionsData_getTransactions {
  @override
  final String G__typename;
  @override
  final GgetTransactionsData_getTransactions_expense? expense;
  @override
  final GgetTransactionsData_getTransactions_split? split;

  factory _$GgetTransactionsData_getTransactions(
          [void Function(GgetTransactionsData_getTransactionsBuilder)?
              updates]) =>
      (new GgetTransactionsData_getTransactionsBuilder()..update(updates))
          ._build();

  _$GgetTransactionsData_getTransactions._(
      {required this.G__typename, this.expense, this.split})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetTransactionsData_getTransactions', 'G__typename');
  }

  @override
  GgetTransactionsData_getTransactions rebuild(
          void Function(GgetTransactionsData_getTransactionsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetTransactionsData_getTransactionsBuilder toBuilder() =>
      new GgetTransactionsData_getTransactionsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetTransactionsData_getTransactions &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        split == other.split;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, split.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetTransactionsData_getTransactions')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('split', split))
        .toString();
  }
}

class GgetTransactionsData_getTransactionsBuilder
    implements
        Builder<GgetTransactionsData_getTransactions,
            GgetTransactionsData_getTransactionsBuilder> {
  _$GgetTransactionsData_getTransactions? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgetTransactionsData_getTransactions_expenseBuilder? _expense;
  GgetTransactionsData_getTransactions_expenseBuilder get expense =>
      _$this._expense ??=
          new GgetTransactionsData_getTransactions_expenseBuilder();
  set expense(GgetTransactionsData_getTransactions_expenseBuilder? expense) =>
      _$this._expense = expense;

  GgetTransactionsData_getTransactions_splitBuilder? _split;
  GgetTransactionsData_getTransactions_splitBuilder get split =>
      _$this._split ??= new GgetTransactionsData_getTransactions_splitBuilder();
  set split(GgetTransactionsData_getTransactions_splitBuilder? split) =>
      _$this._split = split;

  GgetTransactionsData_getTransactionsBuilder() {
    GgetTransactionsData_getTransactions._initializeBuilder(this);
  }

  GgetTransactionsData_getTransactionsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _split = $v.split?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetTransactionsData_getTransactions other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetTransactionsData_getTransactions;
  }

  @override
  void update(
      void Function(GgetTransactionsData_getTransactionsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetTransactionsData_getTransactions build() => _build();

  _$GgetTransactionsData_getTransactions _build() {
    _$GgetTransactionsData_getTransactions _$result;
    try {
      _$result = _$v ??
          new _$GgetTransactionsData_getTransactions._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GgetTransactionsData_getTransactions', 'G__typename'),
              expense: _expense?.build(),
              split: _split?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'split';
        _split?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgetTransactionsData_getTransactions',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgetTransactionsData_getTransactions_expense
    extends GgetTransactionsData_getTransactions_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GgetTransactionsData_getTransactions_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GgetTransactionsData_getTransactions_expense(
          [void Function(GgetTransactionsData_getTransactions_expenseBuilder)?
              updates]) =>
      (new GgetTransactionsData_getTransactions_expenseBuilder()
            ..update(updates))
          ._build();

  _$GgetTransactionsData_getTransactions_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetTransactionsData_getTransactions_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetTransactionsData_getTransactions_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GgetTransactionsData_getTransactions_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(createdAt,
        r'GgetTransactionsData_getTransactions_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GgetTransactionsData_getTransactions_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgetTransactionsData_getTransactions_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(creatorId,
        r'GgetTransactionsData_getTransactions_expense', 'creatorId');
  }

  @override
  GgetTransactionsData_getTransactions_expense rebuild(
          void Function(GgetTransactionsData_getTransactions_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetTransactionsData_getTransactions_expenseBuilder toBuilder() =>
      new GgetTransactionsData_getTransactions_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetTransactionsData_getTransactions_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetTransactionsData_getTransactions_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GgetTransactionsData_getTransactions_expenseBuilder
    implements
        Builder<GgetTransactionsData_getTransactions_expense,
            GgetTransactionsData_getTransactions_expenseBuilder> {
  _$GgetTransactionsData_getTransactions_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GgetTransactionsData_getTransactions_expense_amountBuilder? _amount;
  GgetTransactionsData_getTransactions_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GgetTransactionsData_getTransactions_expense_amountBuilder();
  set amount(
          GgetTransactionsData_getTransactions_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GgetTransactionsData_getTransactions_expenseBuilder() {
    GgetTransactionsData_getTransactions_expense._initializeBuilder(this);
  }

  GgetTransactionsData_getTransactions_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetTransactionsData_getTransactions_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetTransactionsData_getTransactions_expense;
  }

  @override
  void update(
      void Function(GgetTransactionsData_getTransactions_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetTransactionsData_getTransactions_expense build() => _build();

  _$GgetTransactionsData_getTransactions_expense _build() {
    _$GgetTransactionsData_getTransactions_expense _$result;
    try {
      _$result = _$v ??
          new _$GgetTransactionsData_getTransactions_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GgetTransactionsData_getTransactions_expense',
                  'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgetTransactionsData_getTransactions_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GgetTransactionsData_getTransactions_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgetTransactionsData_getTransactions_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GgetTransactionsData_getTransactions_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GgetTransactionsData_getTransactions_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgetTransactionsData_getTransactions_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgetTransactionsData_getTransactions_expense_amount
    extends GgetTransactionsData_getTransactions_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GgetTransactionsData_getTransactions_expense_amount(
          [void Function(
                  GgetTransactionsData_getTransactions_expense_amountBuilder)?
              updates]) =>
      (new GgetTransactionsData_getTransactions_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GgetTransactionsData_getTransactions_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetTransactionsData_getTransactions_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GgetTransactionsData_getTransactions_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GgetTransactionsData_getTransactions_expense_amount', 'currencyId');
  }

  @override
  GgetTransactionsData_getTransactions_expense_amount rebuild(
          void Function(
                  GgetTransactionsData_getTransactions_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetTransactionsData_getTransactions_expense_amountBuilder toBuilder() =>
      new GgetTransactionsData_getTransactions_expense_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetTransactionsData_getTransactions_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetTransactionsData_getTransactions_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GgetTransactionsData_getTransactions_expense_amountBuilder
    implements
        Builder<GgetTransactionsData_getTransactions_expense_amount,
            GgetTransactionsData_getTransactions_expense_amountBuilder> {
  _$GgetTransactionsData_getTransactions_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GgetTransactionsData_getTransactions_expense_amountBuilder() {
    GgetTransactionsData_getTransactions_expense_amount._initializeBuilder(
        this);
  }

  GgetTransactionsData_getTransactions_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetTransactionsData_getTransactions_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetTransactionsData_getTransactions_expense_amount;
  }

  @override
  void update(
      void Function(GgetTransactionsData_getTransactions_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetTransactionsData_getTransactions_expense_amount build() => _build();

  _$GgetTransactionsData_getTransactions_expense_amount _build() {
    final _$result = _$v ??
        new _$GgetTransactionsData_getTransactions_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GgetTransactionsData_getTransactions_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GgetTransactionsData_getTransactions_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GgetTransactionsData_getTransactions_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetTransactionsData_getTransactions_split
    extends GgetTransactionsData_getTransactions_split {
  @override
  final String G__typename;
  @override
  final GgetTransactionsData_getTransactions_split_fromUser fromUser;
  @override
  final GgetTransactionsData_getTransactions_split_toUser toUser;
  @override
  final String id;
  @override
  final GgetTransactionsData_getTransactions_split_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GgetTransactionsData_getTransactions_split(
          [void Function(GgetTransactionsData_getTransactions_splitBuilder)?
              updates]) =>
      (new GgetTransactionsData_getTransactions_splitBuilder()..update(updates))
          ._build();

  _$GgetTransactionsData_getTransactions_split._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetTransactionsData_getTransactions_split', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GgetTransactionsData_getTransactions_split', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GgetTransactionsData_getTransactions_split', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetTransactionsData_getTransactions_split', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgetTransactionsData_getTransactions_split', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GgetTransactionsData_getTransactions_split', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgetTransactionsData_getTransactions_split', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(fromUserId,
        r'GgetTransactionsData_getTransactions_split', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GgetTransactionsData_getTransactions_split', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GgetTransactionsData_getTransactions_split', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GgetTransactionsData_getTransactions_split', 'groupId');
  }

  @override
  GgetTransactionsData_getTransactions_split rebuild(
          void Function(GgetTransactionsData_getTransactions_splitBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetTransactionsData_getTransactions_splitBuilder toBuilder() =>
      new GgetTransactionsData_getTransactions_splitBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetTransactionsData_getTransactions_split &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetTransactionsData_getTransactions_split')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GgetTransactionsData_getTransactions_splitBuilder
    implements
        Builder<GgetTransactionsData_getTransactions_split,
            GgetTransactionsData_getTransactions_splitBuilder> {
  _$GgetTransactionsData_getTransactions_split? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgetTransactionsData_getTransactions_split_fromUserBuilder? _fromUser;
  GgetTransactionsData_getTransactions_split_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GgetTransactionsData_getTransactions_split_fromUserBuilder();
  set fromUser(
          GgetTransactionsData_getTransactions_split_fromUserBuilder?
              fromUser) =>
      _$this._fromUser = fromUser;

  GgetTransactionsData_getTransactions_split_toUserBuilder? _toUser;
  GgetTransactionsData_getTransactions_split_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GgetTransactionsData_getTransactions_split_toUserBuilder();
  set toUser(
          GgetTransactionsData_getTransactions_split_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GgetTransactionsData_getTransactions_split_amountBuilder? _amount;
  GgetTransactionsData_getTransactions_split_amountBuilder get amount =>
      _$this._amount ??=
          new GgetTransactionsData_getTransactions_split_amountBuilder();
  set amount(
          GgetTransactionsData_getTransactions_split_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GgetTransactionsData_getTransactions_splitBuilder() {
    GgetTransactionsData_getTransactions_split._initializeBuilder(this);
  }

  GgetTransactionsData_getTransactions_splitBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetTransactionsData_getTransactions_split other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetTransactionsData_getTransactions_split;
  }

  @override
  void update(
      void Function(GgetTransactionsData_getTransactions_splitBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetTransactionsData_getTransactions_split build() => _build();

  _$GgetTransactionsData_getTransactions_split _build() {
    _$GgetTransactionsData_getTransactions_split _$result;
    try {
      _$result = _$v ??
          new _$GgetTransactionsData_getTransactions_split._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgetTransactionsData_getTransactions_split', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgetTransactionsData_getTransactions_split', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GgetTransactionsData_getTransactions_split', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgetTransactionsData_getTransactions_split', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GgetTransactionsData_getTransactions_split', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GgetTransactionsData_getTransactions_split', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GgetTransactionsData_getTransactions_split', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GgetTransactionsData_getTransactions_split', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgetTransactionsData_getTransactions_split',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgetTransactionsData_getTransactions_split_fromUser
    extends GgetTransactionsData_getTransactions_split_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgetTransactionsData_getTransactions_split_fromUser(
          [void Function(
                  GgetTransactionsData_getTransactions_split_fromUserBuilder)?
              updates]) =>
      (new GgetTransactionsData_getTransactions_split_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GgetTransactionsData_getTransactions_split_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetTransactionsData_getTransactions_split_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetTransactionsData_getTransactions_split_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GgetTransactionsData_getTransactions_split_fromUser', 'isSignedUp');
  }

  @override
  GgetTransactionsData_getTransactions_split_fromUser rebuild(
          void Function(
                  GgetTransactionsData_getTransactions_split_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetTransactionsData_getTransactions_split_fromUserBuilder toBuilder() =>
      new GgetTransactionsData_getTransactions_split_fromUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetTransactionsData_getTransactions_split_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetTransactionsData_getTransactions_split_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgetTransactionsData_getTransactions_split_fromUserBuilder
    implements
        Builder<GgetTransactionsData_getTransactions_split_fromUser,
            GgetTransactionsData_getTransactions_split_fromUserBuilder> {
  _$GgetTransactionsData_getTransactions_split_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgetTransactionsData_getTransactions_split_fromUserBuilder() {
    GgetTransactionsData_getTransactions_split_fromUser._initializeBuilder(
        this);
  }

  GgetTransactionsData_getTransactions_split_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetTransactionsData_getTransactions_split_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetTransactionsData_getTransactions_split_fromUser;
  }

  @override
  void update(
      void Function(GgetTransactionsData_getTransactions_split_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetTransactionsData_getTransactions_split_fromUser build() => _build();

  _$GgetTransactionsData_getTransactions_split_fromUser _build() {
    final _$result = _$v ??
        new _$GgetTransactionsData_getTransactions_split_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GgetTransactionsData_getTransactions_split_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(id,
                r'GgetTransactionsData_getTransactions_split_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GgetTransactionsData_getTransactions_split_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetTransactionsData_getTransactions_split_toUser
    extends GgetTransactionsData_getTransactions_split_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgetTransactionsData_getTransactions_split_toUser(
          [void Function(
                  GgetTransactionsData_getTransactions_split_toUserBuilder)?
              updates]) =>
      (new GgetTransactionsData_getTransactions_split_toUserBuilder()
            ..update(updates))
          ._build();

  _$GgetTransactionsData_getTransactions_split_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetTransactionsData_getTransactions_split_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetTransactionsData_getTransactions_split_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GgetTransactionsData_getTransactions_split_toUser', 'isSignedUp');
  }

  @override
  GgetTransactionsData_getTransactions_split_toUser rebuild(
          void Function(
                  GgetTransactionsData_getTransactions_split_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetTransactionsData_getTransactions_split_toUserBuilder toBuilder() =>
      new GgetTransactionsData_getTransactions_split_toUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetTransactionsData_getTransactions_split_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetTransactionsData_getTransactions_split_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgetTransactionsData_getTransactions_split_toUserBuilder
    implements
        Builder<GgetTransactionsData_getTransactions_split_toUser,
            GgetTransactionsData_getTransactions_split_toUserBuilder> {
  _$GgetTransactionsData_getTransactions_split_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgetTransactionsData_getTransactions_split_toUserBuilder() {
    GgetTransactionsData_getTransactions_split_toUser._initializeBuilder(this);
  }

  GgetTransactionsData_getTransactions_split_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetTransactionsData_getTransactions_split_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetTransactionsData_getTransactions_split_toUser;
  }

  @override
  void update(
      void Function(GgetTransactionsData_getTransactions_split_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetTransactionsData_getTransactions_split_toUser build() => _build();

  _$GgetTransactionsData_getTransactions_split_toUser _build() {
    final _$result = _$v ??
        new _$GgetTransactionsData_getTransactions_split_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GgetTransactionsData_getTransactions_split_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgetTransactionsData_getTransactions_split_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GgetTransactionsData_getTransactions_split_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetTransactionsData_getTransactions_split_amount
    extends GgetTransactionsData_getTransactions_split_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GgetTransactionsData_getTransactions_split_amount(
          [void Function(
                  GgetTransactionsData_getTransactions_split_amountBuilder)?
              updates]) =>
      (new GgetTransactionsData_getTransactions_split_amountBuilder()
            ..update(updates))
          ._build();

  _$GgetTransactionsData_getTransactions_split_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetTransactionsData_getTransactions_split_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgetTransactionsData_getTransactions_split_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GgetTransactionsData_getTransactions_split_amount', 'currencyId');
  }

  @override
  GgetTransactionsData_getTransactions_split_amount rebuild(
          void Function(
                  GgetTransactionsData_getTransactions_split_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetTransactionsData_getTransactions_split_amountBuilder toBuilder() =>
      new GgetTransactionsData_getTransactions_split_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetTransactionsData_getTransactions_split_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetTransactionsData_getTransactions_split_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GgetTransactionsData_getTransactions_split_amountBuilder
    implements
        Builder<GgetTransactionsData_getTransactions_split_amount,
            GgetTransactionsData_getTransactions_split_amountBuilder> {
  _$GgetTransactionsData_getTransactions_split_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GgetTransactionsData_getTransactions_split_amountBuilder() {
    GgetTransactionsData_getTransactions_split_amount._initializeBuilder(this);
  }

  GgetTransactionsData_getTransactions_split_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetTransactionsData_getTransactions_split_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetTransactionsData_getTransactions_split_amount;
  }

  @override
  void update(
      void Function(GgetTransactionsData_getTransactions_split_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetTransactionsData_getTransactions_split_amount build() => _build();

  _$GgetTransactionsData_getTransactions_split_amount _build() {
    final _$result = _$v ??
        new _$GgetTransactionsData_getTransactions_split_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GgetTransactionsData_getTransactions_split_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GgetTransactionsData_getTransactions_split_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GgetTransactionsData_getTransactions_split_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsetNotificationTokenData extends GsetNotificationTokenData {
  @override
  final String G__typename;
  @override
  final String setNotificationToken;

  factory _$GsetNotificationTokenData(
          [void Function(GsetNotificationTokenDataBuilder)? updates]) =>
      (new GsetNotificationTokenDataBuilder()..update(updates))._build();

  _$GsetNotificationTokenData._(
      {required this.G__typename, required this.setNotificationToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsetNotificationTokenData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(setNotificationToken,
        r'GsetNotificationTokenData', 'setNotificationToken');
  }

  @override
  GsetNotificationTokenData rebuild(
          void Function(GsetNotificationTokenDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsetNotificationTokenDataBuilder toBuilder() =>
      new GsetNotificationTokenDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsetNotificationTokenData &&
        G__typename == other.G__typename &&
        setNotificationToken == other.setNotificationToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, setNotificationToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsetNotificationTokenData')
          ..add('G__typename', G__typename)
          ..add('setNotificationToken', setNotificationToken))
        .toString();
  }
}

class GsetNotificationTokenDataBuilder
    implements
        Builder<GsetNotificationTokenData, GsetNotificationTokenDataBuilder> {
  _$GsetNotificationTokenData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _setNotificationToken;
  String? get setNotificationToken => _$this._setNotificationToken;
  set setNotificationToken(String? setNotificationToken) =>
      _$this._setNotificationToken = setNotificationToken;

  GsetNotificationTokenDataBuilder() {
    GsetNotificationTokenData._initializeBuilder(this);
  }

  GsetNotificationTokenDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _setNotificationToken = $v.setNotificationToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsetNotificationTokenData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsetNotificationTokenData;
  }

  @override
  void update(void Function(GsetNotificationTokenDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsetNotificationTokenData build() => _build();

  _$GsetNotificationTokenData _build() {
    final _$result = _$v ??
        new _$GsetNotificationTokenData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GsetNotificationTokenData', 'G__typename'),
            setNotificationToken: BuiltValueNullFieldError.checkNotNull(
                setNotificationToken,
                r'GsetNotificationTokenData',
                'setNotificationToken'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetImageUploadUrlData extends GgetImageUploadUrlData {
  @override
  final String G__typename;
  @override
  final GgetImageUploadUrlData_uploadImage uploadImage;

  factory _$GgetImageUploadUrlData(
          [void Function(GgetImageUploadUrlDataBuilder)? updates]) =>
      (new GgetImageUploadUrlDataBuilder()..update(updates))._build();

  _$GgetImageUploadUrlData._(
      {required this.G__typename, required this.uploadImage})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetImageUploadUrlData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        uploadImage, r'GgetImageUploadUrlData', 'uploadImage');
  }

  @override
  GgetImageUploadUrlData rebuild(
          void Function(GgetImageUploadUrlDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetImageUploadUrlDataBuilder toBuilder() =>
      new GgetImageUploadUrlDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetImageUploadUrlData &&
        G__typename == other.G__typename &&
        uploadImage == other.uploadImage;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, uploadImage.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetImageUploadUrlData')
          ..add('G__typename', G__typename)
          ..add('uploadImage', uploadImage))
        .toString();
  }
}

class GgetImageUploadUrlDataBuilder
    implements Builder<GgetImageUploadUrlData, GgetImageUploadUrlDataBuilder> {
  _$GgetImageUploadUrlData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgetImageUploadUrlData_uploadImageBuilder? _uploadImage;
  GgetImageUploadUrlData_uploadImageBuilder get uploadImage =>
      _$this._uploadImage ??= new GgetImageUploadUrlData_uploadImageBuilder();
  set uploadImage(GgetImageUploadUrlData_uploadImageBuilder? uploadImage) =>
      _$this._uploadImage = uploadImage;

  GgetImageUploadUrlDataBuilder() {
    GgetImageUploadUrlData._initializeBuilder(this);
  }

  GgetImageUploadUrlDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _uploadImage = $v.uploadImage.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetImageUploadUrlData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetImageUploadUrlData;
  }

  @override
  void update(void Function(GgetImageUploadUrlDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetImageUploadUrlData build() => _build();

  _$GgetImageUploadUrlData _build() {
    _$GgetImageUploadUrlData _$result;
    try {
      _$result = _$v ??
          new _$GgetImageUploadUrlData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgetImageUploadUrlData', 'G__typename'),
              uploadImage: uploadImage.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'uploadImage';
        uploadImage.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgetImageUploadUrlData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgetImageUploadUrlData_uploadImage
    extends GgetImageUploadUrlData_uploadImage {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String presignedUrl;

  factory _$GgetImageUploadUrlData_uploadImage(
          [void Function(GgetImageUploadUrlData_uploadImageBuilder)?
              updates]) =>
      (new GgetImageUploadUrlData_uploadImageBuilder()..update(updates))
          ._build();

  _$GgetImageUploadUrlData_uploadImage._(
      {required this.G__typename, required this.id, required this.presignedUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetImageUploadUrlData_uploadImage', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetImageUploadUrlData_uploadImage', 'id');
    BuiltValueNullFieldError.checkNotNull(
        presignedUrl, r'GgetImageUploadUrlData_uploadImage', 'presignedUrl');
  }

  @override
  GgetImageUploadUrlData_uploadImage rebuild(
          void Function(GgetImageUploadUrlData_uploadImageBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetImageUploadUrlData_uploadImageBuilder toBuilder() =>
      new GgetImageUploadUrlData_uploadImageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetImageUploadUrlData_uploadImage &&
        G__typename == other.G__typename &&
        id == other.id &&
        presignedUrl == other.presignedUrl;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, presignedUrl.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetImageUploadUrlData_uploadImage')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('presignedUrl', presignedUrl))
        .toString();
  }
}

class GgetImageUploadUrlData_uploadImageBuilder
    implements
        Builder<GgetImageUploadUrlData_uploadImage,
            GgetImageUploadUrlData_uploadImageBuilder> {
  _$GgetImageUploadUrlData_uploadImage? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _presignedUrl;
  String? get presignedUrl => _$this._presignedUrl;
  set presignedUrl(String? presignedUrl) => _$this._presignedUrl = presignedUrl;

  GgetImageUploadUrlData_uploadImageBuilder() {
    GgetImageUploadUrlData_uploadImage._initializeBuilder(this);
  }

  GgetImageUploadUrlData_uploadImageBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _presignedUrl = $v.presignedUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetImageUploadUrlData_uploadImage other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetImageUploadUrlData_uploadImage;
  }

  @override
  void update(
      void Function(GgetImageUploadUrlData_uploadImageBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetImageUploadUrlData_uploadImage build() => _build();

  _$GgetImageUploadUrlData_uploadImage _build() {
    final _$result = _$v ??
        new _$GgetImageUploadUrlData_uploadImage._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgetImageUploadUrlData_uploadImage', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgetImageUploadUrlData_uploadImage', 'id'),
            presignedUrl: BuiltValueNullFieldError.checkNotNull(presignedUrl,
                r'GgetImageUploadUrlData_uploadImage', 'presignedUrl'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetImageViewUrlData extends GgetImageViewUrlData {
  @override
  final String G__typename;
  @override
  final String imageUrl;

  factory _$GgetImageViewUrlData(
          [void Function(GgetImageViewUrlDataBuilder)? updates]) =>
      (new GgetImageViewUrlDataBuilder()..update(updates))._build();

  _$GgetImageViewUrlData._({required this.G__typename, required this.imageUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetImageViewUrlData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        imageUrl, r'GgetImageViewUrlData', 'imageUrl');
  }

  @override
  GgetImageViewUrlData rebuild(
          void Function(GgetImageViewUrlDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetImageViewUrlDataBuilder toBuilder() =>
      new GgetImageViewUrlDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetImageViewUrlData &&
        G__typename == other.G__typename &&
        imageUrl == other.imageUrl;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, imageUrl.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetImageViewUrlData')
          ..add('G__typename', G__typename)
          ..add('imageUrl', imageUrl))
        .toString();
  }
}

class GgetImageViewUrlDataBuilder
    implements Builder<GgetImageViewUrlData, GgetImageViewUrlDataBuilder> {
  _$GgetImageViewUrlData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _imageUrl;
  String? get imageUrl => _$this._imageUrl;
  set imageUrl(String? imageUrl) => _$this._imageUrl = imageUrl;

  GgetImageViewUrlDataBuilder() {
    GgetImageViewUrlData._initializeBuilder(this);
  }

  GgetImageViewUrlDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _imageUrl = $v.imageUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetImageViewUrlData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetImageViewUrlData;
  }

  @override
  void update(void Function(GgetImageViewUrlDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetImageViewUrlData build() => _build();

  _$GgetImageViewUrlData _build() {
    final _$result = _$v ??
        new _$GgetImageViewUrlData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GgetImageViewUrlData', 'G__typename'),
            imageUrl: BuiltValueNullFieldError.checkNotNull(
                imageUrl, r'GgetImageViewUrlData', 'imageUrl'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetExpenseData extends GgetExpenseData {
  @override
  final String G__typename;
  @override
  final GgetExpenseData_expenseById expenseById;

  factory _$GgetExpenseData([void Function(GgetExpenseDataBuilder)? updates]) =>
      (new GgetExpenseDataBuilder()..update(updates))._build();

  _$GgetExpenseData._({required this.G__typename, required this.expenseById})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetExpenseData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        expenseById, r'GgetExpenseData', 'expenseById');
  }

  @override
  GgetExpenseData rebuild(void Function(GgetExpenseDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetExpenseDataBuilder toBuilder() =>
      new GgetExpenseDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetExpenseData &&
        G__typename == other.G__typename &&
        expenseById == other.expenseById;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expenseById.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetExpenseData')
          ..add('G__typename', G__typename)
          ..add('expenseById', expenseById))
        .toString();
  }
}

class GgetExpenseDataBuilder
    implements Builder<GgetExpenseData, GgetExpenseDataBuilder> {
  _$GgetExpenseData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgetExpenseData_expenseByIdBuilder? _expenseById;
  GgetExpenseData_expenseByIdBuilder get expenseById =>
      _$this._expenseById ??= new GgetExpenseData_expenseByIdBuilder();
  set expenseById(GgetExpenseData_expenseByIdBuilder? expenseById) =>
      _$this._expenseById = expenseById;

  GgetExpenseDataBuilder() {
    GgetExpenseData._initializeBuilder(this);
  }

  GgetExpenseDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expenseById = $v.expenseById.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetExpenseData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetExpenseData;
  }

  @override
  void update(void Function(GgetExpenseDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetExpenseData build() => _build();

  _$GgetExpenseData _build() {
    _$GgetExpenseData _$result;
    try {
      _$result = _$v ??
          new _$GgetExpenseData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgetExpenseData', 'G__typename'),
              expenseById: expenseById.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expenseById';
        expenseById.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgetExpenseData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgetExpenseData_expenseById extends GgetExpenseData_expenseById {
  @override
  final String G__typename;
  @override
  final GgetExpenseData_expenseById_creator creator;
  @override
  final BuiltList<GgetExpenseData_expenseById_splits> splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GgetExpenseData_expenseById_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GgetExpenseData_expenseById(
          [void Function(GgetExpenseData_expenseByIdBuilder)? updates]) =>
      (new GgetExpenseData_expenseByIdBuilder()..update(updates))._build();

  _$GgetExpenseData_expenseById._(
      {required this.G__typename,
      required this.creator,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetExpenseData_expenseById', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GgetExpenseData_expenseById', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GgetExpenseData_expenseById', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetExpenseData_expenseById', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GgetExpenseData_expenseById', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgetExpenseData_expenseById', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GgetExpenseData_expenseById', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgetExpenseData_expenseById', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GgetExpenseData_expenseById', 'creatorId');
  }

  @override
  GgetExpenseData_expenseById rebuild(
          void Function(GgetExpenseData_expenseByIdBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetExpenseData_expenseByIdBuilder toBuilder() =>
      new GgetExpenseData_expenseByIdBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetExpenseData_expenseById &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetExpenseData_expenseById')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GgetExpenseData_expenseByIdBuilder
    implements
        Builder<GgetExpenseData_expenseById,
            GgetExpenseData_expenseByIdBuilder> {
  _$GgetExpenseData_expenseById? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgetExpenseData_expenseById_creatorBuilder? _creator;
  GgetExpenseData_expenseById_creatorBuilder get creator =>
      _$this._creator ??= new GgetExpenseData_expenseById_creatorBuilder();
  set creator(GgetExpenseData_expenseById_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GgetExpenseData_expenseById_splits>? _splits;
  ListBuilder<GgetExpenseData_expenseById_splits> get splits =>
      _$this._splits ??= new ListBuilder<GgetExpenseData_expenseById_splits>();
  set splits(ListBuilder<GgetExpenseData_expenseById_splits>? splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GgetExpenseData_expenseById_amountBuilder? _amount;
  GgetExpenseData_expenseById_amountBuilder get amount =>
      _$this._amount ??= new GgetExpenseData_expenseById_amountBuilder();
  set amount(GgetExpenseData_expenseById_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GgetExpenseData_expenseByIdBuilder() {
    GgetExpenseData_expenseById._initializeBuilder(this);
  }

  GgetExpenseData_expenseByIdBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetExpenseData_expenseById other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetExpenseData_expenseById;
  }

  @override
  void update(void Function(GgetExpenseData_expenseByIdBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetExpenseData_expenseById build() => _build();

  _$GgetExpenseData_expenseById _build() {
    _$GgetExpenseData_expenseById _$result;
    try {
      _$result = _$v ??
          new _$GgetExpenseData_expenseById._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgetExpenseData_expenseById', 'G__typename'),
              creator: creator.build(),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgetExpenseData_expenseById', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GgetExpenseData_expenseById', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgetExpenseData_expenseById', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GgetExpenseData_expenseById', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GgetExpenseData_expenseById', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'splits';
        splits.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgetExpenseData_expenseById', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgetExpenseData_expenseById_creator
    extends GgetExpenseData_expenseById_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgetExpenseData_expenseById_creator(
          [void Function(GgetExpenseData_expenseById_creatorBuilder)?
              updates]) =>
      (new GgetExpenseData_expenseById_creatorBuilder()..update(updates))
          ._build();

  _$GgetExpenseData_expenseById_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetExpenseData_expenseById_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetExpenseData_expenseById_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgetExpenseData_expenseById_creator', 'isSignedUp');
  }

  @override
  GgetExpenseData_expenseById_creator rebuild(
          void Function(GgetExpenseData_expenseById_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetExpenseData_expenseById_creatorBuilder toBuilder() =>
      new GgetExpenseData_expenseById_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetExpenseData_expenseById_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetExpenseData_expenseById_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgetExpenseData_expenseById_creatorBuilder
    implements
        Builder<GgetExpenseData_expenseById_creator,
            GgetExpenseData_expenseById_creatorBuilder> {
  _$GgetExpenseData_expenseById_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgetExpenseData_expenseById_creatorBuilder() {
    GgetExpenseData_expenseById_creator._initializeBuilder(this);
  }

  GgetExpenseData_expenseById_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetExpenseData_expenseById_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetExpenseData_expenseById_creator;
  }

  @override
  void update(
      void Function(GgetExpenseData_expenseById_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetExpenseData_expenseById_creator build() => _build();

  _$GgetExpenseData_expenseById_creator _build() {
    final _$result = _$v ??
        new _$GgetExpenseData_expenseById_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgetExpenseData_expenseById_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgetExpenseData_expenseById_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgetExpenseData_expenseById_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetExpenseData_expenseById_splits
    extends GgetExpenseData_expenseById_splits {
  @override
  final String G__typename;
  @override
  final GgetExpenseData_expenseById_splits_fromUser fromUser;
  @override
  final GgetExpenseData_expenseById_splits_toUser toUser;
  @override
  final String id;
  @override
  final GgetExpenseData_expenseById_splits_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GgetExpenseData_expenseById_splits(
          [void Function(GgetExpenseData_expenseById_splitsBuilder)?
              updates]) =>
      (new GgetExpenseData_expenseById_splitsBuilder()..update(updates))
          ._build();

  _$GgetExpenseData_expenseById_splits._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetExpenseData_expenseById_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GgetExpenseData_expenseById_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GgetExpenseData_expenseById_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetExpenseData_expenseById_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgetExpenseData_expenseById_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GgetExpenseData_expenseById_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GgetExpenseData_expenseById_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GgetExpenseData_expenseById_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GgetExpenseData_expenseById_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GgetExpenseData_expenseById_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GgetExpenseData_expenseById_splits', 'groupId');
  }

  @override
  GgetExpenseData_expenseById_splits rebuild(
          void Function(GgetExpenseData_expenseById_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetExpenseData_expenseById_splitsBuilder toBuilder() =>
      new GgetExpenseData_expenseById_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetExpenseData_expenseById_splits &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetExpenseData_expenseById_splits')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GgetExpenseData_expenseById_splitsBuilder
    implements
        Builder<GgetExpenseData_expenseById_splits,
            GgetExpenseData_expenseById_splitsBuilder> {
  _$GgetExpenseData_expenseById_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GgetExpenseData_expenseById_splits_fromUserBuilder? _fromUser;
  GgetExpenseData_expenseById_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GgetExpenseData_expenseById_splits_fromUserBuilder();
  set fromUser(GgetExpenseData_expenseById_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GgetExpenseData_expenseById_splits_toUserBuilder? _toUser;
  GgetExpenseData_expenseById_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new GgetExpenseData_expenseById_splits_toUserBuilder();
  set toUser(GgetExpenseData_expenseById_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GgetExpenseData_expenseById_splits_amountBuilder? _amount;
  GgetExpenseData_expenseById_splits_amountBuilder get amount =>
      _$this._amount ??= new GgetExpenseData_expenseById_splits_amountBuilder();
  set amount(GgetExpenseData_expenseById_splits_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GgetExpenseData_expenseById_splitsBuilder() {
    GgetExpenseData_expenseById_splits._initializeBuilder(this);
  }

  GgetExpenseData_expenseById_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetExpenseData_expenseById_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetExpenseData_expenseById_splits;
  }

  @override
  void update(
      void Function(GgetExpenseData_expenseById_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetExpenseData_expenseById_splits build() => _build();

  _$GgetExpenseData_expenseById_splits _build() {
    _$GgetExpenseData_expenseById_splits _$result;
    try {
      _$result = _$v ??
          new _$GgetExpenseData_expenseById_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GgetExpenseData_expenseById_splits', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GgetExpenseData_expenseById_splits', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GgetExpenseData_expenseById_splits', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GgetExpenseData_expenseById_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GgetExpenseData_expenseById_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GgetExpenseData_expenseById_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GgetExpenseData_expenseById_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GgetExpenseData_expenseById_splits', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GgetExpenseData_expenseById_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GgetExpenseData_expenseById_splits_fromUser
    extends GgetExpenseData_expenseById_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgetExpenseData_expenseById_splits_fromUser(
          [void Function(GgetExpenseData_expenseById_splits_fromUserBuilder)?
              updates]) =>
      (new GgetExpenseData_expenseById_splits_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GgetExpenseData_expenseById_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetExpenseData_expenseById_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetExpenseData_expenseById_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GgetExpenseData_expenseById_splits_fromUser', 'isSignedUp');
  }

  @override
  GgetExpenseData_expenseById_splits_fromUser rebuild(
          void Function(GgetExpenseData_expenseById_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetExpenseData_expenseById_splits_fromUserBuilder toBuilder() =>
      new GgetExpenseData_expenseById_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetExpenseData_expenseById_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetExpenseData_expenseById_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgetExpenseData_expenseById_splits_fromUserBuilder
    implements
        Builder<GgetExpenseData_expenseById_splits_fromUser,
            GgetExpenseData_expenseById_splits_fromUserBuilder> {
  _$GgetExpenseData_expenseById_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgetExpenseData_expenseById_splits_fromUserBuilder() {
    GgetExpenseData_expenseById_splits_fromUser._initializeBuilder(this);
  }

  GgetExpenseData_expenseById_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetExpenseData_expenseById_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetExpenseData_expenseById_splits_fromUser;
  }

  @override
  void update(
      void Function(GgetExpenseData_expenseById_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetExpenseData_expenseById_splits_fromUser build() => _build();

  _$GgetExpenseData_expenseById_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GgetExpenseData_expenseById_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgetExpenseData_expenseById_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgetExpenseData_expenseById_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgetExpenseData_expenseById_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetExpenseData_expenseById_splits_toUser
    extends GgetExpenseData_expenseById_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GgetExpenseData_expenseById_splits_toUser(
          [void Function(GgetExpenseData_expenseById_splits_toUserBuilder)?
              updates]) =>
      (new GgetExpenseData_expenseById_splits_toUserBuilder()..update(updates))
          ._build();

  _$GgetExpenseData_expenseById_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetExpenseData_expenseById_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GgetExpenseData_expenseById_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GgetExpenseData_expenseById_splits_toUser', 'isSignedUp');
  }

  @override
  GgetExpenseData_expenseById_splits_toUser rebuild(
          void Function(GgetExpenseData_expenseById_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetExpenseData_expenseById_splits_toUserBuilder toBuilder() =>
      new GgetExpenseData_expenseById_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetExpenseData_expenseById_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetExpenseData_expenseById_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GgetExpenseData_expenseById_splits_toUserBuilder
    implements
        Builder<GgetExpenseData_expenseById_splits_toUser,
            GgetExpenseData_expenseById_splits_toUserBuilder> {
  _$GgetExpenseData_expenseById_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GgetExpenseData_expenseById_splits_toUserBuilder() {
    GgetExpenseData_expenseById_splits_toUser._initializeBuilder(this);
  }

  GgetExpenseData_expenseById_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetExpenseData_expenseById_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetExpenseData_expenseById_splits_toUser;
  }

  @override
  void update(
      void Function(GgetExpenseData_expenseById_splits_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetExpenseData_expenseById_splits_toUser build() => _build();

  _$GgetExpenseData_expenseById_splits_toUser _build() {
    final _$result = _$v ??
        new _$GgetExpenseData_expenseById_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgetExpenseData_expenseById_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GgetExpenseData_expenseById_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GgetExpenseData_expenseById_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetExpenseData_expenseById_splits_amount
    extends GgetExpenseData_expenseById_splits_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GgetExpenseData_expenseById_splits_amount(
          [void Function(GgetExpenseData_expenseById_splits_amountBuilder)?
              updates]) =>
      (new GgetExpenseData_expenseById_splits_amountBuilder()..update(updates))
          ._build();

  _$GgetExpenseData_expenseById_splits_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GgetExpenseData_expenseById_splits_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgetExpenseData_expenseById_splits_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GgetExpenseData_expenseById_splits_amount', 'currencyId');
  }

  @override
  GgetExpenseData_expenseById_splits_amount rebuild(
          void Function(GgetExpenseData_expenseById_splits_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetExpenseData_expenseById_splits_amountBuilder toBuilder() =>
      new GgetExpenseData_expenseById_splits_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetExpenseData_expenseById_splits_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GgetExpenseData_expenseById_splits_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GgetExpenseData_expenseById_splits_amountBuilder
    implements
        Builder<GgetExpenseData_expenseById_splits_amount,
            GgetExpenseData_expenseById_splits_amountBuilder> {
  _$GgetExpenseData_expenseById_splits_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GgetExpenseData_expenseById_splits_amountBuilder() {
    GgetExpenseData_expenseById_splits_amount._initializeBuilder(this);
  }

  GgetExpenseData_expenseById_splits_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetExpenseData_expenseById_splits_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetExpenseData_expenseById_splits_amount;
  }

  @override
  void update(
      void Function(GgetExpenseData_expenseById_splits_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetExpenseData_expenseById_splits_amount build() => _build();

  _$GgetExpenseData_expenseById_splits_amount _build() {
    final _$result = _$v ??
        new _$GgetExpenseData_expenseById_splits_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgetExpenseData_expenseById_splits_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GgetExpenseData_expenseById_splits_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GgetExpenseData_expenseById_splits_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GgetExpenseData_expenseById_amount
    extends GgetExpenseData_expenseById_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GgetExpenseData_expenseById_amount(
          [void Function(GgetExpenseData_expenseById_amountBuilder)?
              updates]) =>
      (new GgetExpenseData_expenseById_amountBuilder()..update(updates))
          ._build();

  _$GgetExpenseData_expenseById_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GgetExpenseData_expenseById_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GgetExpenseData_expenseById_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GgetExpenseData_expenseById_amount', 'currencyId');
  }

  @override
  GgetExpenseData_expenseById_amount rebuild(
          void Function(GgetExpenseData_expenseById_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GgetExpenseData_expenseById_amountBuilder toBuilder() =>
      new GgetExpenseData_expenseById_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GgetExpenseData_expenseById_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GgetExpenseData_expenseById_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GgetExpenseData_expenseById_amountBuilder
    implements
        Builder<GgetExpenseData_expenseById_amount,
            GgetExpenseData_expenseById_amountBuilder> {
  _$GgetExpenseData_expenseById_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GgetExpenseData_expenseById_amountBuilder() {
    GgetExpenseData_expenseById_amount._initializeBuilder(this);
  }

  GgetExpenseData_expenseById_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GgetExpenseData_expenseById_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GgetExpenseData_expenseById_amount;
  }

  @override
  void update(
      void Function(GgetExpenseData_expenseById_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GgetExpenseData_expenseById_amount build() => _build();

  _$GgetExpenseData_expenseById_amount _build() {
    final _$result = _$v ??
        new _$GgetExpenseData_expenseById_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GgetExpenseData_expenseById_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GgetExpenseData_expenseById_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GgetExpenseData_expenseById_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData extends GsplitFromidData {
  @override
  final String G__typename;
  @override
  final GsplitFromidData_splitById splitById;

  factory _$GsplitFromidData(
          [void Function(GsplitFromidDataBuilder)? updates]) =>
      (new GsplitFromidDataBuilder()..update(updates))._build();

  _$GsplitFromidData._({required this.G__typename, required this.splitById})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        splitById, r'GsplitFromidData', 'splitById');
  }

  @override
  GsplitFromidData rebuild(void Function(GsplitFromidDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidDataBuilder toBuilder() =>
      new GsplitFromidDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData &&
        G__typename == other.G__typename &&
        splitById == other.splitById;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, splitById.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData')
          ..add('G__typename', G__typename)
          ..add('splitById', splitById))
        .toString();
  }
}

class GsplitFromidDataBuilder
    implements Builder<GsplitFromidData, GsplitFromidDataBuilder> {
  _$GsplitFromidData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsplitFromidData_splitByIdBuilder? _splitById;
  GsplitFromidData_splitByIdBuilder get splitById =>
      _$this._splitById ??= new GsplitFromidData_splitByIdBuilder();
  set splitById(GsplitFromidData_splitByIdBuilder? splitById) =>
      _$this._splitById = splitById;

  GsplitFromidDataBuilder() {
    GsplitFromidData._initializeBuilder(this);
  }

  GsplitFromidDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _splitById = $v.splitById.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData;
  }

  @override
  void update(void Function(GsplitFromidDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData build() => _build();

  _$GsplitFromidData _build() {
    _$GsplitFromidData _$result;
    try {
      _$result = _$v ??
          new _$GsplitFromidData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsplitFromidData', 'G__typename'),
              splitById: splitById.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'splitById';
        splitById.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsplitFromidData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById extends GsplitFromidData_splitById {
  @override
  final String G__typename;
  @override
  final BuiltList<GsplitFromidData_splitById_siblings> siblings;
  @override
  final GsplitFromidData_splitById_expense? expense;
  @override
  final GsplitFromidData_splitById_group group;
  @override
  final GsplitFromidData_splitById_creator creator;
  @override
  final GsplitFromidData_splitById_fromUser fromUser;
  @override
  final GsplitFromidData_splitById_toUser toUser;
  @override
  final String id;
  @override
  final GsplitFromidData_splitById_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsplitFromidData_splitById(
          [void Function(GsplitFromidData_splitByIdBuilder)? updates]) =>
      (new GsplitFromidData_splitByIdBuilder()..update(updates))._build();

  _$GsplitFromidData_splitById._(
      {required this.G__typename,
      required this.siblings,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData_splitById', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        siblings, r'GsplitFromidData_splitById', 'siblings');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GsplitFromidData_splitById', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GsplitFromidData_splitById', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GsplitFromidData_splitById', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GsplitFromidData_splitById', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromidData_splitById', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GsplitFromidData_splitById', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsplitFromidData_splitById', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GsplitFromidData_splitById', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GsplitFromidData_splitById', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsplitFromidData_splitById', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GsplitFromidData_splitById', 'groupId');
  }

  @override
  GsplitFromidData_splitById rebuild(
          void Function(GsplitFromidData_splitByIdBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitByIdBuilder toBuilder() =>
      new GsplitFromidData_splitByIdBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById &&
        G__typename == other.G__typename &&
        siblings == other.siblings &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, siblings.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData_splitById')
          ..add('G__typename', G__typename)
          ..add('siblings', siblings)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsplitFromidData_splitByIdBuilder
    implements
        Builder<GsplitFromidData_splitById, GsplitFromidData_splitByIdBuilder> {
  _$GsplitFromidData_splitById? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GsplitFromidData_splitById_siblings>? _siblings;
  ListBuilder<GsplitFromidData_splitById_siblings> get siblings =>
      _$this._siblings ??=
          new ListBuilder<GsplitFromidData_splitById_siblings>();
  set siblings(ListBuilder<GsplitFromidData_splitById_siblings>? siblings) =>
      _$this._siblings = siblings;

  GsplitFromidData_splitById_expenseBuilder? _expense;
  GsplitFromidData_splitById_expenseBuilder get expense =>
      _$this._expense ??= new GsplitFromidData_splitById_expenseBuilder();
  set expense(GsplitFromidData_splitById_expenseBuilder? expense) =>
      _$this._expense = expense;

  GsplitFromidData_splitById_groupBuilder? _group;
  GsplitFromidData_splitById_groupBuilder get group =>
      _$this._group ??= new GsplitFromidData_splitById_groupBuilder();
  set group(GsplitFromidData_splitById_groupBuilder? group) =>
      _$this._group = group;

  GsplitFromidData_splitById_creatorBuilder? _creator;
  GsplitFromidData_splitById_creatorBuilder get creator =>
      _$this._creator ??= new GsplitFromidData_splitById_creatorBuilder();
  set creator(GsplitFromidData_splitById_creatorBuilder? creator) =>
      _$this._creator = creator;

  GsplitFromidData_splitById_fromUserBuilder? _fromUser;
  GsplitFromidData_splitById_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GsplitFromidData_splitById_fromUserBuilder();
  set fromUser(GsplitFromidData_splitById_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GsplitFromidData_splitById_toUserBuilder? _toUser;
  GsplitFromidData_splitById_toUserBuilder get toUser =>
      _$this._toUser ??= new GsplitFromidData_splitById_toUserBuilder();
  set toUser(GsplitFromidData_splitById_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GsplitFromidData_splitById_amountBuilder? _amount;
  GsplitFromidData_splitById_amountBuilder get amount =>
      _$this._amount ??= new GsplitFromidData_splitById_amountBuilder();
  set amount(GsplitFromidData_splitById_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsplitFromidData_splitByIdBuilder() {
    GsplitFromidData_splitById._initializeBuilder(this);
  }

  GsplitFromidData_splitByIdBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _siblings = $v.siblings.toBuilder();
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById;
  }

  @override
  void update(void Function(GsplitFromidData_splitByIdBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById build() => _build();

  _$GsplitFromidData_splitById _build() {
    _$GsplitFromidData_splitById _$result;
    try {
      _$result = _$v ??
          new _$GsplitFromidData_splitById._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsplitFromidData_splitById', 'G__typename'),
              siblings: siblings.build(),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsplitFromidData_splitById', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GsplitFromidData_splitById', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsplitFromidData_splitById', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GsplitFromidData_splitById', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GsplitFromidData_splitById', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GsplitFromidData_splitById', 'creatorId'),
              withGroupId: withGroupId,
              groupId:
                  BuiltValueNullFieldError.checkNotNull(groupId, r'GsplitFromidData_splitById', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'siblings';
        siblings.build();
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsplitFromidData_splitById', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_siblings
    extends GsplitFromidData_splitById_siblings {
  @override
  final String G__typename;
  @override
  final GsplitFromidData_splitById_siblings_expense? expense;
  @override
  final GsplitFromidData_splitById_siblings_group group;
  @override
  final GsplitFromidData_splitById_siblings_creator creator;
  @override
  final GsplitFromidData_splitById_siblings_fromUser fromUser;
  @override
  final GsplitFromidData_splitById_siblings_toUser toUser;
  @override
  final String id;
  @override
  final GsplitFromidData_splitById_siblings_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsplitFromidData_splitById_siblings(
          [void Function(GsplitFromidData_splitById_siblingsBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_siblingsBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_siblings._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData_splitById_siblings', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GsplitFromidData_splitById_siblings', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GsplitFromidData_splitById_siblings', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GsplitFromidData_splitById_siblings', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GsplitFromidData_splitById_siblings', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_siblings', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromidData_splitById_siblings', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GsplitFromidData_splitById_siblings', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsplitFromidData_splitById_siblings', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GsplitFromidData_splitById_siblings', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GsplitFromidData_splitById_siblings', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsplitFromidData_splitById_siblings', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GsplitFromidData_splitById_siblings', 'groupId');
  }

  @override
  GsplitFromidData_splitById_siblings rebuild(
          void Function(GsplitFromidData_splitById_siblingsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_siblingsBuilder toBuilder() =>
      new GsplitFromidData_splitById_siblingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_siblings &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData_splitById_siblings')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsplitFromidData_splitById_siblingsBuilder
    implements
        Builder<GsplitFromidData_splitById_siblings,
            GsplitFromidData_splitById_siblingsBuilder> {
  _$GsplitFromidData_splitById_siblings? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsplitFromidData_splitById_siblings_expenseBuilder? _expense;
  GsplitFromidData_splitById_siblings_expenseBuilder get expense =>
      _$this._expense ??=
          new GsplitFromidData_splitById_siblings_expenseBuilder();
  set expense(GsplitFromidData_splitById_siblings_expenseBuilder? expense) =>
      _$this._expense = expense;

  GsplitFromidData_splitById_siblings_groupBuilder? _group;
  GsplitFromidData_splitById_siblings_groupBuilder get group =>
      _$this._group ??= new GsplitFromidData_splitById_siblings_groupBuilder();
  set group(GsplitFromidData_splitById_siblings_groupBuilder? group) =>
      _$this._group = group;

  GsplitFromidData_splitById_siblings_creatorBuilder? _creator;
  GsplitFromidData_splitById_siblings_creatorBuilder get creator =>
      _$this._creator ??=
          new GsplitFromidData_splitById_siblings_creatorBuilder();
  set creator(GsplitFromidData_splitById_siblings_creatorBuilder? creator) =>
      _$this._creator = creator;

  GsplitFromidData_splitById_siblings_fromUserBuilder? _fromUser;
  GsplitFromidData_splitById_siblings_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GsplitFromidData_splitById_siblings_fromUserBuilder();
  set fromUser(GsplitFromidData_splitById_siblings_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GsplitFromidData_splitById_siblings_toUserBuilder? _toUser;
  GsplitFromidData_splitById_siblings_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GsplitFromidData_splitById_siblings_toUserBuilder();
  set toUser(GsplitFromidData_splitById_siblings_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GsplitFromidData_splitById_siblings_amountBuilder? _amount;
  GsplitFromidData_splitById_siblings_amountBuilder get amount =>
      _$this._amount ??=
          new GsplitFromidData_splitById_siblings_amountBuilder();
  set amount(GsplitFromidData_splitById_siblings_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsplitFromidData_splitById_siblingsBuilder() {
    GsplitFromidData_splitById_siblings._initializeBuilder(this);
  }

  GsplitFromidData_splitById_siblingsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_siblings other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_siblings;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_siblingsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_siblings build() => _build();

  _$GsplitFromidData_splitById_siblings _build() {
    _$GsplitFromidData_splitById_siblings _$result;
    try {
      _$result = _$v ??
          new _$GsplitFromidData_splitById_siblings._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsplitFromidData_splitById_siblings', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsplitFromidData_splitById_siblings', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GsplitFromidData_splitById_siblings', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsplitFromidData_splitById_siblings', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GsplitFromidData_splitById_siblings', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GsplitFromidData_splitById_siblings', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GsplitFromidData_splitById_siblings', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GsplitFromidData_splitById_siblings', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsplitFromidData_splitById_siblings',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_siblings_expense
    extends GsplitFromidData_splitById_siblings_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GsplitFromidData_splitById_siblings_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsplitFromidData_splitById_siblings_expense(
          [void Function(GsplitFromidData_splitById_siblings_expenseBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_siblings_expenseBuilder()
            ..update(updates))
          ._build();

  _$GsplitFromidData_splitById_siblings_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromidData_splitById_siblings_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_siblings_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GsplitFromidData_splitById_siblings_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsplitFromidData_splitById_siblings_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GsplitFromidData_splitById_siblings_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromidData_splitById_siblings_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsplitFromidData_splitById_siblings_expense', 'creatorId');
  }

  @override
  GsplitFromidData_splitById_siblings_expense rebuild(
          void Function(GsplitFromidData_splitById_siblings_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_siblings_expenseBuilder toBuilder() =>
      new GsplitFromidData_splitById_siblings_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_siblings_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromidData_splitById_siblings_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsplitFromidData_splitById_siblings_expenseBuilder
    implements
        Builder<GsplitFromidData_splitById_siblings_expense,
            GsplitFromidData_splitById_siblings_expenseBuilder> {
  _$GsplitFromidData_splitById_siblings_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GsplitFromidData_splitById_siblings_expense_amountBuilder? _amount;
  GsplitFromidData_splitById_siblings_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GsplitFromidData_splitById_siblings_expense_amountBuilder();
  set amount(
          GsplitFromidData_splitById_siblings_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsplitFromidData_splitById_siblings_expenseBuilder() {
    GsplitFromidData_splitById_siblings_expense._initializeBuilder(this);
  }

  GsplitFromidData_splitById_siblings_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_siblings_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_siblings_expense;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_siblings_expenseBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_siblings_expense build() => _build();

  _$GsplitFromidData_splitById_siblings_expense _build() {
    _$GsplitFromidData_splitById_siblings_expense _$result;
    try {
      _$result = _$v ??
          new _$GsplitFromidData_splitById_siblings_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GsplitFromidData_splitById_siblings_expense',
                  'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsplitFromidData_splitById_siblings_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GsplitFromidData_splitById_siblings_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsplitFromidData_splitById_siblings_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GsplitFromidData_splitById_siblings_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GsplitFromidData_splitById_siblings_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsplitFromidData_splitById_siblings_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_siblings_expense_amount
    extends GsplitFromidData_splitById_siblings_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsplitFromidData_splitById_siblings_expense_amount(
          [void Function(
                  GsplitFromidData_splitById_siblings_expense_amountBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_siblings_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GsplitFromidData_splitById_siblings_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromidData_splitById_siblings_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GsplitFromidData_splitById_siblings_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GsplitFromidData_splitById_siblings_expense_amount', 'currencyId');
  }

  @override
  GsplitFromidData_splitById_siblings_expense_amount rebuild(
          void Function(
                  GsplitFromidData_splitById_siblings_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_siblings_expense_amountBuilder toBuilder() =>
      new GsplitFromidData_splitById_siblings_expense_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_siblings_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromidData_splitById_siblings_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsplitFromidData_splitById_siblings_expense_amountBuilder
    implements
        Builder<GsplitFromidData_splitById_siblings_expense_amount,
            GsplitFromidData_splitById_siblings_expense_amountBuilder> {
  _$GsplitFromidData_splitById_siblings_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsplitFromidData_splitById_siblings_expense_amountBuilder() {
    GsplitFromidData_splitById_siblings_expense_amount._initializeBuilder(this);
  }

  GsplitFromidData_splitById_siblings_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_siblings_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_siblings_expense_amount;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_siblings_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_siblings_expense_amount build() => _build();

  _$GsplitFromidData_splitById_siblings_expense_amount _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_siblings_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GsplitFromidData_splitById_siblings_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GsplitFromidData_splitById_siblings_expense_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GsplitFromidData_splitById_siblings_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_siblings_group
    extends GsplitFromidData_splitById_siblings_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GsplitFromidData_splitById_siblings_group(
          [void Function(GsplitFromidData_splitById_siblings_groupBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_siblings_groupBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_siblings_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromidData_splitById_siblings_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_siblings_group', 'id');
  }

  @override
  GsplitFromidData_splitById_siblings_group rebuild(
          void Function(GsplitFromidData_splitById_siblings_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_siblings_groupBuilder toBuilder() =>
      new GsplitFromidData_splitById_siblings_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_siblings_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromidData_splitById_siblings_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GsplitFromidData_splitById_siblings_groupBuilder
    implements
        Builder<GsplitFromidData_splitById_siblings_group,
            GsplitFromidData_splitById_siblings_groupBuilder> {
  _$GsplitFromidData_splitById_siblings_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GsplitFromidData_splitById_siblings_groupBuilder() {
    GsplitFromidData_splitById_siblings_group._initializeBuilder(this);
  }

  GsplitFromidData_splitById_siblings_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_siblings_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_siblings_group;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_siblings_groupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_siblings_group build() => _build();

  _$GsplitFromidData_splitById_siblings_group _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_siblings_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_siblings_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromidData_splitById_siblings_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_siblings_creator
    extends GsplitFromidData_splitById_siblings_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsplitFromidData_splitById_siblings_creator(
          [void Function(GsplitFromidData_splitById_siblings_creatorBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_siblings_creatorBuilder()
            ..update(updates))
          ._build();

  _$GsplitFromidData_splitById_siblings_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromidData_splitById_siblings_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_siblings_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsplitFromidData_splitById_siblings_creator', 'isSignedUp');
  }

  @override
  GsplitFromidData_splitById_siblings_creator rebuild(
          void Function(GsplitFromidData_splitById_siblings_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_siblings_creatorBuilder toBuilder() =>
      new GsplitFromidData_splitById_siblings_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_siblings_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromidData_splitById_siblings_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsplitFromidData_splitById_siblings_creatorBuilder
    implements
        Builder<GsplitFromidData_splitById_siblings_creator,
            GsplitFromidData_splitById_siblings_creatorBuilder> {
  _$GsplitFromidData_splitById_siblings_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsplitFromidData_splitById_siblings_creatorBuilder() {
    GsplitFromidData_splitById_siblings_creator._initializeBuilder(this);
  }

  GsplitFromidData_splitById_siblings_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_siblings_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_siblings_creator;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_siblings_creatorBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_siblings_creator build() => _build();

  _$GsplitFromidData_splitById_siblings_creator _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_siblings_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_siblings_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromidData_splitById_siblings_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsplitFromidData_splitById_siblings_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_siblings_fromUser
    extends GsplitFromidData_splitById_siblings_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsplitFromidData_splitById_siblings_fromUser(
          [void Function(GsplitFromidData_splitById_siblings_fromUserBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_siblings_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GsplitFromidData_splitById_siblings_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromidData_splitById_siblings_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_siblings_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsplitFromidData_splitById_siblings_fromUser', 'isSignedUp');
  }

  @override
  GsplitFromidData_splitById_siblings_fromUser rebuild(
          void Function(GsplitFromidData_splitById_siblings_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_siblings_fromUserBuilder toBuilder() =>
      new GsplitFromidData_splitById_siblings_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_siblings_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromidData_splitById_siblings_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsplitFromidData_splitById_siblings_fromUserBuilder
    implements
        Builder<GsplitFromidData_splitById_siblings_fromUser,
            GsplitFromidData_splitById_siblings_fromUserBuilder> {
  _$GsplitFromidData_splitById_siblings_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsplitFromidData_splitById_siblings_fromUserBuilder() {
    GsplitFromidData_splitById_siblings_fromUser._initializeBuilder(this);
  }

  GsplitFromidData_splitById_siblings_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_siblings_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_siblings_fromUser;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_siblings_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_siblings_fromUser build() => _build();

  _$GsplitFromidData_splitById_siblings_fromUser _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_siblings_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_siblings_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromidData_splitById_siblings_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsplitFromidData_splitById_siblings_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_siblings_toUser
    extends GsplitFromidData_splitById_siblings_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsplitFromidData_splitById_siblings_toUser(
          [void Function(GsplitFromidData_splitById_siblings_toUserBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_siblings_toUserBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_siblings_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromidData_splitById_siblings_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_siblings_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GsplitFromidData_splitById_siblings_toUser', 'isSignedUp');
  }

  @override
  GsplitFromidData_splitById_siblings_toUser rebuild(
          void Function(GsplitFromidData_splitById_siblings_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_siblings_toUserBuilder toBuilder() =>
      new GsplitFromidData_splitById_siblings_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_siblings_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromidData_splitById_siblings_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsplitFromidData_splitById_siblings_toUserBuilder
    implements
        Builder<GsplitFromidData_splitById_siblings_toUser,
            GsplitFromidData_splitById_siblings_toUserBuilder> {
  _$GsplitFromidData_splitById_siblings_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsplitFromidData_splitById_siblings_toUserBuilder() {
    GsplitFromidData_splitById_siblings_toUser._initializeBuilder(this);
  }

  GsplitFromidData_splitById_siblings_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_siblings_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_siblings_toUser;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_siblings_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_siblings_toUser build() => _build();

  _$GsplitFromidData_splitById_siblings_toUser _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_siblings_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_siblings_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromidData_splitById_siblings_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsplitFromidData_splitById_siblings_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_siblings_amount
    extends GsplitFromidData_splitById_siblings_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsplitFromidData_splitById_siblings_amount(
          [void Function(GsplitFromidData_splitById_siblings_amountBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_siblings_amountBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_siblings_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromidData_splitById_siblings_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromidData_splitById_siblings_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GsplitFromidData_splitById_siblings_amount', 'currencyId');
  }

  @override
  GsplitFromidData_splitById_siblings_amount rebuild(
          void Function(GsplitFromidData_splitById_siblings_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_siblings_amountBuilder toBuilder() =>
      new GsplitFromidData_splitById_siblings_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_siblings_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromidData_splitById_siblings_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsplitFromidData_splitById_siblings_amountBuilder
    implements
        Builder<GsplitFromidData_splitById_siblings_amount,
            GsplitFromidData_splitById_siblings_amountBuilder> {
  _$GsplitFromidData_splitById_siblings_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsplitFromidData_splitById_siblings_amountBuilder() {
    GsplitFromidData_splitById_siblings_amount._initializeBuilder(this);
  }

  GsplitFromidData_splitById_siblings_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_siblings_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_siblings_amount;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_siblings_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_siblings_amount build() => _build();

  _$GsplitFromidData_splitById_siblings_amount _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_siblings_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_siblings_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GsplitFromidData_splitById_siblings_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GsplitFromidData_splitById_siblings_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_expense
    extends GsplitFromidData_splitById_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GsplitFromidData_splitById_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsplitFromidData_splitById_expense(
          [void Function(GsplitFromidData_splitById_expenseBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_expenseBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData_splitById_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GsplitFromidData_splitById_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsplitFromidData_splitById_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GsplitFromidData_splitById_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromidData_splitById_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsplitFromidData_splitById_expense', 'creatorId');
  }

  @override
  GsplitFromidData_splitById_expense rebuild(
          void Function(GsplitFromidData_splitById_expenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_expenseBuilder toBuilder() =>
      new GsplitFromidData_splitById_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData_splitById_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsplitFromidData_splitById_expenseBuilder
    implements
        Builder<GsplitFromidData_splitById_expense,
            GsplitFromidData_splitById_expenseBuilder> {
  _$GsplitFromidData_splitById_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GsplitFromidData_splitById_expense_amountBuilder? _amount;
  GsplitFromidData_splitById_expense_amountBuilder get amount =>
      _$this._amount ??= new GsplitFromidData_splitById_expense_amountBuilder();
  set amount(GsplitFromidData_splitById_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsplitFromidData_splitById_expenseBuilder() {
    GsplitFromidData_splitById_expense._initializeBuilder(this);
  }

  GsplitFromidData_splitById_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_expense;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_expense build() => _build();

  _$GsplitFromidData_splitById_expense _build() {
    _$GsplitFromidData_splitById_expense _$result;
    try {
      _$result = _$v ??
          new _$GsplitFromidData_splitById_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GsplitFromidData_splitById_expense', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsplitFromidData_splitById_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GsplitFromidData_splitById_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(createdAt,
                  r'GsplitFromidData_splitById_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GsplitFromidData_splitById_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GsplitFromidData_splitById_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsplitFromidData_splitById_expense', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_expense_amount
    extends GsplitFromidData_splitById_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsplitFromidData_splitById_expense_amount(
          [void Function(GsplitFromidData_splitById_expense_amountBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_expense_amountBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromidData_splitById_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromidData_splitById_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GsplitFromidData_splitById_expense_amount', 'currencyId');
  }

  @override
  GsplitFromidData_splitById_expense_amount rebuild(
          void Function(GsplitFromidData_splitById_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_expense_amountBuilder toBuilder() =>
      new GsplitFromidData_splitById_expense_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromidData_splitById_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsplitFromidData_splitById_expense_amountBuilder
    implements
        Builder<GsplitFromidData_splitById_expense_amount,
            GsplitFromidData_splitById_expense_amountBuilder> {
  _$GsplitFromidData_splitById_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsplitFromidData_splitById_expense_amountBuilder() {
    GsplitFromidData_splitById_expense_amount._initializeBuilder(this);
  }

  GsplitFromidData_splitById_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_expense_amount;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_expense_amount build() => _build();

  _$GsplitFromidData_splitById_expense_amount _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_expense_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GsplitFromidData_splitById_expense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GsplitFromidData_splitById_expense_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_group
    extends GsplitFromidData_splitById_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GsplitFromidData_splitById_group(
          [void Function(GsplitFromidData_splitById_groupBuilder)? updates]) =>
      (new GsplitFromidData_splitById_groupBuilder()..update(updates))._build();

  _$GsplitFromidData_splitById_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData_splitById_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_group', 'id');
  }

  @override
  GsplitFromidData_splitById_group rebuild(
          void Function(GsplitFromidData_splitById_groupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_groupBuilder toBuilder() =>
      new GsplitFromidData_splitById_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData_splitById_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GsplitFromidData_splitById_groupBuilder
    implements
        Builder<GsplitFromidData_splitById_group,
            GsplitFromidData_splitById_groupBuilder> {
  _$GsplitFromidData_splitById_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GsplitFromidData_splitById_groupBuilder() {
    GsplitFromidData_splitById_group._initializeBuilder(this);
  }

  GsplitFromidData_splitById_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_group;
  }

  @override
  void update(void Function(GsplitFromidData_splitById_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_group build() => _build();

  _$GsplitFromidData_splitById_group _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromidData_splitById_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_creator
    extends GsplitFromidData_splitById_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsplitFromidData_splitById_creator(
          [void Function(GsplitFromidData_splitById_creatorBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_creatorBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData_splitById_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsplitFromidData_splitById_creator', 'isSignedUp');
  }

  @override
  GsplitFromidData_splitById_creator rebuild(
          void Function(GsplitFromidData_splitById_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_creatorBuilder toBuilder() =>
      new GsplitFromidData_splitById_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData_splitById_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsplitFromidData_splitById_creatorBuilder
    implements
        Builder<GsplitFromidData_splitById_creator,
            GsplitFromidData_splitById_creatorBuilder> {
  _$GsplitFromidData_splitById_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsplitFromidData_splitById_creatorBuilder() {
    GsplitFromidData_splitById_creator._initializeBuilder(this);
  }

  GsplitFromidData_splitById_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_creator;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_creator build() => _build();

  _$GsplitFromidData_splitById_creator _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromidData_splitById_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsplitFromidData_splitById_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_fromUser
    extends GsplitFromidData_splitById_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsplitFromidData_splitById_fromUser(
          [void Function(GsplitFromidData_splitById_fromUserBuilder)?
              updates]) =>
      (new GsplitFromidData_splitById_fromUserBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData_splitById_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsplitFromidData_splitById_fromUser', 'isSignedUp');
  }

  @override
  GsplitFromidData_splitById_fromUser rebuild(
          void Function(GsplitFromidData_splitById_fromUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_fromUserBuilder toBuilder() =>
      new GsplitFromidData_splitById_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData_splitById_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsplitFromidData_splitById_fromUserBuilder
    implements
        Builder<GsplitFromidData_splitById_fromUser,
            GsplitFromidData_splitById_fromUserBuilder> {
  _$GsplitFromidData_splitById_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsplitFromidData_splitById_fromUserBuilder() {
    GsplitFromidData_splitById_fromUser._initializeBuilder(this);
  }

  GsplitFromidData_splitById_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_fromUser;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_fromUser build() => _build();

  _$GsplitFromidData_splitById_fromUser _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromidData_splitById_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsplitFromidData_splitById_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_toUser
    extends GsplitFromidData_splitById_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsplitFromidData_splitById_toUser(
          [void Function(GsplitFromidData_splitById_toUserBuilder)? updates]) =>
      (new GsplitFromidData_splitById_toUserBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData_splitById_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromidData_splitById_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsplitFromidData_splitById_toUser', 'isSignedUp');
  }

  @override
  GsplitFromidData_splitById_toUser rebuild(
          void Function(GsplitFromidData_splitById_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_toUserBuilder toBuilder() =>
      new GsplitFromidData_splitById_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData_splitById_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsplitFromidData_splitById_toUserBuilder
    implements
        Builder<GsplitFromidData_splitById_toUser,
            GsplitFromidData_splitById_toUserBuilder> {
  _$GsplitFromidData_splitById_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsplitFromidData_splitById_toUserBuilder() {
    GsplitFromidData_splitById_toUser._initializeBuilder(this);
  }

  GsplitFromidData_splitById_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_toUser;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_toUser build() => _build();

  _$GsplitFromidData_splitById_toUser _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromidData_splitById_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsplitFromidData_splitById_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromidData_splitById_amount
    extends GsplitFromidData_splitById_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsplitFromidData_splitById_amount(
          [void Function(GsplitFromidData_splitById_amountBuilder)? updates]) =>
      (new GsplitFromidData_splitById_amountBuilder()..update(updates))
          ._build();

  _$GsplitFromidData_splitById_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromidData_splitById_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromidData_splitById_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GsplitFromidData_splitById_amount', 'currencyId');
  }

  @override
  GsplitFromidData_splitById_amount rebuild(
          void Function(GsplitFromidData_splitById_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromidData_splitById_amountBuilder toBuilder() =>
      new GsplitFromidData_splitById_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromidData_splitById_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromidData_splitById_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsplitFromidData_splitById_amountBuilder
    implements
        Builder<GsplitFromidData_splitById_amount,
            GsplitFromidData_splitById_amountBuilder> {
  _$GsplitFromidData_splitById_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsplitFromidData_splitById_amountBuilder() {
    GsplitFromidData_splitById_amount._initializeBuilder(this);
  }

  GsplitFromidData_splitById_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromidData_splitById_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromidData_splitById_amount;
  }

  @override
  void update(
      void Function(GsplitFromidData_splitById_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromidData_splitById_amount build() => _build();

  _$GsplitFromidData_splitById_amount _build() {
    final _$result = _$v ??
        new _$GsplitFromidData_splitById_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromidData_splitById_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GsplitFromidData_splitById_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GsplitFromidData_splitById_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromGroupData extends GsplitFromGroupData {
  @override
  final String G__typename;
  @override
  final BuiltList<GsplitFromGroupData_splitsByPart> splitsByPart;

  factory _$GsplitFromGroupData(
          [void Function(GsplitFromGroupDataBuilder)? updates]) =>
      (new GsplitFromGroupDataBuilder()..update(updates))._build();

  _$GsplitFromGroupData._(
      {required this.G__typename, required this.splitsByPart})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromGroupData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        splitsByPart, r'GsplitFromGroupData', 'splitsByPart');
  }

  @override
  GsplitFromGroupData rebuild(
          void Function(GsplitFromGroupDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromGroupDataBuilder toBuilder() =>
      new GsplitFromGroupDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromGroupData &&
        G__typename == other.G__typename &&
        splitsByPart == other.splitsByPart;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, splitsByPart.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromGroupData')
          ..add('G__typename', G__typename)
          ..add('splitsByPart', splitsByPart))
        .toString();
  }
}

class GsplitFromGroupDataBuilder
    implements Builder<GsplitFromGroupData, GsplitFromGroupDataBuilder> {
  _$GsplitFromGroupData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GsplitFromGroupData_splitsByPart>? _splitsByPart;
  ListBuilder<GsplitFromGroupData_splitsByPart> get splitsByPart =>
      _$this._splitsByPart ??=
          new ListBuilder<GsplitFromGroupData_splitsByPart>();
  set splitsByPart(
          ListBuilder<GsplitFromGroupData_splitsByPart>? splitsByPart) =>
      _$this._splitsByPart = splitsByPart;

  GsplitFromGroupDataBuilder() {
    GsplitFromGroupData._initializeBuilder(this);
  }

  GsplitFromGroupDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _splitsByPart = $v.splitsByPart.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromGroupData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromGroupData;
  }

  @override
  void update(void Function(GsplitFromGroupDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromGroupData build() => _build();

  _$GsplitFromGroupData _build() {
    _$GsplitFromGroupData _$result;
    try {
      _$result = _$v ??
          new _$GsplitFromGroupData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsplitFromGroupData', 'G__typename'),
              splitsByPart: splitsByPart.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'splitsByPart';
        splitsByPart.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsplitFromGroupData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromGroupData_splitsByPart
    extends GsplitFromGroupData_splitsByPart {
  @override
  final String G__typename;
  @override
  final GsplitFromGroupData_splitsByPart_fromUser fromUser;
  @override
  final GsplitFromGroupData_splitsByPart_toUser toUser;
  @override
  final String id;
  @override
  final GsplitFromGroupData_splitsByPart_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GsplitFromGroupData_splitsByPart(
          [void Function(GsplitFromGroupData_splitsByPartBuilder)? updates]) =>
      (new GsplitFromGroupData_splitsByPartBuilder()..update(updates))._build();

  _$GsplitFromGroupData_splitsByPart._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromGroupData_splitsByPart', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GsplitFromGroupData_splitsByPart', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GsplitFromGroupData_splitsByPart', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromGroupData_splitsByPart', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromGroupData_splitsByPart', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GsplitFromGroupData_splitsByPart', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GsplitFromGroupData_splitsByPart', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GsplitFromGroupData_splitsByPart', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GsplitFromGroupData_splitsByPart', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GsplitFromGroupData_splitsByPart', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GsplitFromGroupData_splitsByPart', 'groupId');
  }

  @override
  GsplitFromGroupData_splitsByPart rebuild(
          void Function(GsplitFromGroupData_splitsByPartBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromGroupData_splitsByPartBuilder toBuilder() =>
      new GsplitFromGroupData_splitsByPartBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromGroupData_splitsByPart &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GsplitFromGroupData_splitsByPart')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GsplitFromGroupData_splitsByPartBuilder
    implements
        Builder<GsplitFromGroupData_splitsByPart,
            GsplitFromGroupData_splitsByPartBuilder> {
  _$GsplitFromGroupData_splitsByPart? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GsplitFromGroupData_splitsByPart_fromUserBuilder? _fromUser;
  GsplitFromGroupData_splitsByPart_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GsplitFromGroupData_splitsByPart_fromUserBuilder();
  set fromUser(GsplitFromGroupData_splitsByPart_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GsplitFromGroupData_splitsByPart_toUserBuilder? _toUser;
  GsplitFromGroupData_splitsByPart_toUserBuilder get toUser =>
      _$this._toUser ??= new GsplitFromGroupData_splitsByPart_toUserBuilder();
  set toUser(GsplitFromGroupData_splitsByPart_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GsplitFromGroupData_splitsByPart_amountBuilder? _amount;
  GsplitFromGroupData_splitsByPart_amountBuilder get amount =>
      _$this._amount ??= new GsplitFromGroupData_splitsByPart_amountBuilder();
  set amount(GsplitFromGroupData_splitsByPart_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GsplitFromGroupData_splitsByPartBuilder() {
    GsplitFromGroupData_splitsByPart._initializeBuilder(this);
  }

  GsplitFromGroupData_splitsByPartBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromGroupData_splitsByPart other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromGroupData_splitsByPart;
  }

  @override
  void update(void Function(GsplitFromGroupData_splitsByPartBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromGroupData_splitsByPart build() => _build();

  _$GsplitFromGroupData_splitsByPart _build() {
    _$GsplitFromGroupData_splitsByPart _$result;
    try {
      _$result = _$v ??
          new _$GsplitFromGroupData_splitsByPart._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GsplitFromGroupData_splitsByPart', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GsplitFromGroupData_splitsByPart', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GsplitFromGroupData_splitsByPart', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GsplitFromGroupData_splitsByPart', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GsplitFromGroupData_splitsByPart', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GsplitFromGroupData_splitsByPart', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GsplitFromGroupData_splitsByPart', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GsplitFromGroupData_splitsByPart', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GsplitFromGroupData_splitsByPart', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromGroupData_splitsByPart_fromUser
    extends GsplitFromGroupData_splitsByPart_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsplitFromGroupData_splitsByPart_fromUser(
          [void Function(GsplitFromGroupData_splitsByPart_fromUserBuilder)?
              updates]) =>
      (new GsplitFromGroupData_splitsByPart_fromUserBuilder()..update(updates))
          ._build();

  _$GsplitFromGroupData_splitsByPart_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GsplitFromGroupData_splitsByPart_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromGroupData_splitsByPart_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsplitFromGroupData_splitsByPart_fromUser', 'isSignedUp');
  }

  @override
  GsplitFromGroupData_splitsByPart_fromUser rebuild(
          void Function(GsplitFromGroupData_splitsByPart_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromGroupData_splitsByPart_fromUserBuilder toBuilder() =>
      new GsplitFromGroupData_splitsByPart_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromGroupData_splitsByPart_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromGroupData_splitsByPart_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsplitFromGroupData_splitsByPart_fromUserBuilder
    implements
        Builder<GsplitFromGroupData_splitsByPart_fromUser,
            GsplitFromGroupData_splitsByPart_fromUserBuilder> {
  _$GsplitFromGroupData_splitsByPart_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsplitFromGroupData_splitsByPart_fromUserBuilder() {
    GsplitFromGroupData_splitsByPart_fromUser._initializeBuilder(this);
  }

  GsplitFromGroupData_splitsByPart_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromGroupData_splitsByPart_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromGroupData_splitsByPart_fromUser;
  }

  @override
  void update(
      void Function(GsplitFromGroupData_splitsByPart_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromGroupData_splitsByPart_fromUser build() => _build();

  _$GsplitFromGroupData_splitsByPart_fromUser _build() {
    final _$result = _$v ??
        new _$GsplitFromGroupData_splitsByPart_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromGroupData_splitsByPart_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromGroupData_splitsByPart_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsplitFromGroupData_splitsByPart_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromGroupData_splitsByPart_toUser
    extends GsplitFromGroupData_splitsByPart_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GsplitFromGroupData_splitsByPart_toUser(
          [void Function(GsplitFromGroupData_splitsByPart_toUserBuilder)?
              updates]) =>
      (new GsplitFromGroupData_splitsByPart_toUserBuilder()..update(updates))
          ._build();

  _$GsplitFromGroupData_splitsByPart_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromGroupData_splitsByPart_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GsplitFromGroupData_splitsByPart_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GsplitFromGroupData_splitsByPart_toUser', 'isSignedUp');
  }

  @override
  GsplitFromGroupData_splitsByPart_toUser rebuild(
          void Function(GsplitFromGroupData_splitsByPart_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromGroupData_splitsByPart_toUserBuilder toBuilder() =>
      new GsplitFromGroupData_splitsByPart_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromGroupData_splitsByPart_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromGroupData_splitsByPart_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GsplitFromGroupData_splitsByPart_toUserBuilder
    implements
        Builder<GsplitFromGroupData_splitsByPart_toUser,
            GsplitFromGroupData_splitsByPart_toUserBuilder> {
  _$GsplitFromGroupData_splitsByPart_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GsplitFromGroupData_splitsByPart_toUserBuilder() {
    GsplitFromGroupData_splitsByPart_toUser._initializeBuilder(this);
  }

  GsplitFromGroupData_splitsByPart_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromGroupData_splitsByPart_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromGroupData_splitsByPart_toUser;
  }

  @override
  void update(
      void Function(GsplitFromGroupData_splitsByPart_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromGroupData_splitsByPart_toUser build() => _build();

  _$GsplitFromGroupData_splitsByPart_toUser _build() {
    final _$result = _$v ??
        new _$GsplitFromGroupData_splitsByPart_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromGroupData_splitsByPart_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GsplitFromGroupData_splitsByPart_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GsplitFromGroupData_splitsByPart_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GsplitFromGroupData_splitsByPart_amount
    extends GsplitFromGroupData_splitsByPart_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GsplitFromGroupData_splitsByPart_amount(
          [void Function(GsplitFromGroupData_splitsByPart_amountBuilder)?
              updates]) =>
      (new GsplitFromGroupData_splitsByPart_amountBuilder()..update(updates))
          ._build();

  _$GsplitFromGroupData_splitsByPart_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GsplitFromGroupData_splitsByPart_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GsplitFromGroupData_splitsByPart_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GsplitFromGroupData_splitsByPart_amount', 'currencyId');
  }

  @override
  GsplitFromGroupData_splitsByPart_amount rebuild(
          void Function(GsplitFromGroupData_splitsByPart_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GsplitFromGroupData_splitsByPart_amountBuilder toBuilder() =>
      new GsplitFromGroupData_splitsByPart_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GsplitFromGroupData_splitsByPart_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GsplitFromGroupData_splitsByPart_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GsplitFromGroupData_splitsByPart_amountBuilder
    implements
        Builder<GsplitFromGroupData_splitsByPart_amount,
            GsplitFromGroupData_splitsByPart_amountBuilder> {
  _$GsplitFromGroupData_splitsByPart_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GsplitFromGroupData_splitsByPart_amountBuilder() {
    GsplitFromGroupData_splitsByPart_amount._initializeBuilder(this);
  }

  GsplitFromGroupData_splitsByPart_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GsplitFromGroupData_splitsByPart_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GsplitFromGroupData_splitsByPart_amount;
  }

  @override
  void update(
      void Function(GsplitFromGroupData_splitsByPart_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GsplitFromGroupData_splitsByPart_amount build() => _build();

  _$GsplitFromGroupData_splitsByPart_amount _build() {
    final _$result = _$v ??
        new _$GsplitFromGroupData_splitsByPart_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GsplitFromGroupData_splitsByPart_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GsplitFromGroupData_splitsByPart_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GsplitFromGroupData_splitsByPart_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GexpenseSummaryCategorisedData extends GexpenseSummaryCategorisedData {
  @override
  final String G__typename;
  @override
  final BuiltList<GexpenseSummaryCategorisedData_expenseSummaryByCategory>
      expenseSummaryByCategory;

  factory _$GexpenseSummaryCategorisedData(
          [void Function(GexpenseSummaryCategorisedDataBuilder)? updates]) =>
      (new GexpenseSummaryCategorisedDataBuilder()..update(updates))._build();

  _$GexpenseSummaryCategorisedData._(
      {required this.G__typename, required this.expenseSummaryByCategory})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GexpenseSummaryCategorisedData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(expenseSummaryByCategory,
        r'GexpenseSummaryCategorisedData', 'expenseSummaryByCategory');
  }

  @override
  GexpenseSummaryCategorisedData rebuild(
          void Function(GexpenseSummaryCategorisedDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GexpenseSummaryCategorisedDataBuilder toBuilder() =>
      new GexpenseSummaryCategorisedDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GexpenseSummaryCategorisedData &&
        G__typename == other.G__typename &&
        expenseSummaryByCategory == other.expenseSummaryByCategory;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expenseSummaryByCategory.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GexpenseSummaryCategorisedData')
          ..add('G__typename', G__typename)
          ..add('expenseSummaryByCategory', expenseSummaryByCategory))
        .toString();
  }
}

class GexpenseSummaryCategorisedDataBuilder
    implements
        Builder<GexpenseSummaryCategorisedData,
            GexpenseSummaryCategorisedDataBuilder> {
  _$GexpenseSummaryCategorisedData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GexpenseSummaryCategorisedData_expenseSummaryByCategory>?
      _expenseSummaryByCategory;
  ListBuilder<GexpenseSummaryCategorisedData_expenseSummaryByCategory>
      get expenseSummaryByCategory =>
          _$this._expenseSummaryByCategory ??= new ListBuilder<
              GexpenseSummaryCategorisedData_expenseSummaryByCategory>();
  set expenseSummaryByCategory(
          ListBuilder<GexpenseSummaryCategorisedData_expenseSummaryByCategory>?
              expenseSummaryByCategory) =>
      _$this._expenseSummaryByCategory = expenseSummaryByCategory;

  GexpenseSummaryCategorisedDataBuilder() {
    GexpenseSummaryCategorisedData._initializeBuilder(this);
  }

  GexpenseSummaryCategorisedDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expenseSummaryByCategory = $v.expenseSummaryByCategory.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GexpenseSummaryCategorisedData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GexpenseSummaryCategorisedData;
  }

  @override
  void update(void Function(GexpenseSummaryCategorisedDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GexpenseSummaryCategorisedData build() => _build();

  _$GexpenseSummaryCategorisedData _build() {
    _$GexpenseSummaryCategorisedData _$result;
    try {
      _$result = _$v ??
          new _$GexpenseSummaryCategorisedData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GexpenseSummaryCategorisedData', 'G__typename'),
              expenseSummaryByCategory: expenseSummaryByCategory.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expenseSummaryByCategory';
        expenseSummaryByCategory.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GexpenseSummaryCategorisedData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GexpenseSummaryCategorisedData_expenseSummaryByCategory
    extends GexpenseSummaryCategorisedData_expenseSummaryByCategory {
  @override
  final String G__typename;
  @override
  final String category;
  @override
  final GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount amount;

  factory _$GexpenseSummaryCategorisedData_expenseSummaryByCategory(
          [void Function(
                  GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder)?
              updates]) =>
      (new GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder()
            ..update(updates))
          ._build();

  _$GexpenseSummaryCategorisedData_expenseSummaryByCategory._(
      {required this.G__typename, required this.category, required this.amount})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GexpenseSummaryCategorisedData_expenseSummaryByCategory',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(category,
        r'GexpenseSummaryCategorisedData_expenseSummaryByCategory', 'category');
    BuiltValueNullFieldError.checkNotNull(amount,
        r'GexpenseSummaryCategorisedData_expenseSummaryByCategory', 'amount');
  }

  @override
  GexpenseSummaryCategorisedData_expenseSummaryByCategory rebuild(
          void Function(
                  GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder toBuilder() =>
      new GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GexpenseSummaryCategorisedData_expenseSummaryByCategory &&
        G__typename == other.G__typename &&
        category == other.category &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GexpenseSummaryCategorisedData_expenseSummaryByCategory')
          ..add('G__typename', G__typename)
          ..add('category', category)
          ..add('amount', amount))
        .toString();
  }
}

class GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder
    implements
        Builder<GexpenseSummaryCategorisedData_expenseSummaryByCategory,
            GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder> {
  _$GexpenseSummaryCategorisedData_expenseSummaryByCategory? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder?
      _amount;
  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder
      get amount => _$this._amount ??=
          new GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder();
  set amount(
          GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder?
              amount) =>
      _$this._amount = amount;

  GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder() {
    GexpenseSummaryCategorisedData_expenseSummaryByCategory._initializeBuilder(
        this);
  }

  GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GexpenseSummaryCategorisedData_expenseSummaryByCategory other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GexpenseSummaryCategorisedData_expenseSummaryByCategory;
  }

  @override
  void update(
      void Function(
              GexpenseSummaryCategorisedData_expenseSummaryByCategoryBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GexpenseSummaryCategorisedData_expenseSummaryByCategory build() => _build();

  _$GexpenseSummaryCategorisedData_expenseSummaryByCategory _build() {
    _$GexpenseSummaryCategorisedData_expenseSummaryByCategory _$result;
    try {
      _$result = _$v ??
          new _$GexpenseSummaryCategorisedData_expenseSummaryByCategory._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename,
                  r'GexpenseSummaryCategorisedData_expenseSummaryByCategory',
                  'G__typename'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category,
                  r'GexpenseSummaryCategorisedData_expenseSummaryByCategory',
                  'category'),
              amount: amount.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GexpenseSummaryCategorisedData_expenseSummaryByCategory',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount
    extends GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount(
          [void Function(
                  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder)?
              updates]) =>
      (new GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder()
            ..update(updates))
          ._build();

  _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename,
        r'GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount',
        'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount,
        r'GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount',
        'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId,
        r'GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount',
        'currencyId');
  }

  @override
  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount rebuild(
          void Function(
                  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder
      toBuilder() =>
          new GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder()
            ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder
    implements
        Builder<GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount,
            GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder> {
  _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder() {
    GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount
        ._initializeBuilder(this);
  }

  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder
      get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
      GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other
        as _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount;
  }

  @override
  void update(
      void Function(
              GexpenseSummaryCategorisedData_expenseSummaryByCategory_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount build() =>
      _build();

  _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount _build() {
    final _$result = _$v ??
        new _$GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount,
                r'GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount',
                'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GexpenseSummaryCategorisedData_expenseSummaryByCategory_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GUploadFieldsData extends GUploadFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String presignedUrl;

  factory _$GUploadFieldsData(
          [void Function(GUploadFieldsDataBuilder)? updates]) =>
      (new GUploadFieldsDataBuilder()..update(updates))._build();

  _$GUploadFieldsData._(
      {required this.G__typename, required this.id, required this.presignedUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GUploadFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GUploadFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        presignedUrl, r'GUploadFieldsData', 'presignedUrl');
  }

  @override
  GUploadFieldsData rebuild(void Function(GUploadFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUploadFieldsDataBuilder toBuilder() =>
      new GUploadFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUploadFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        presignedUrl == other.presignedUrl;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, presignedUrl.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUploadFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('presignedUrl', presignedUrl))
        .toString();
  }
}

class GUploadFieldsDataBuilder
    implements Builder<GUploadFieldsData, GUploadFieldsDataBuilder> {
  _$GUploadFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _presignedUrl;
  String? get presignedUrl => _$this._presignedUrl;
  set presignedUrl(String? presignedUrl) => _$this._presignedUrl = presignedUrl;

  GUploadFieldsDataBuilder() {
    GUploadFieldsData._initializeBuilder(this);
  }

  GUploadFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _presignedUrl = $v.presignedUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUploadFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUploadFieldsData;
  }

  @override
  void update(void Function(GUploadFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUploadFieldsData build() => _build();

  _$GUploadFieldsData _build() {
    final _$result = _$v ??
        new _$GUploadFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GUploadFieldsData', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GUploadFieldsData', 'id'),
            presignedUrl: BuiltValueNullFieldError.checkNotNull(
                presignedUrl, r'GUploadFieldsData', 'presignedUrl'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserFieldsData extends GUserFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GUserFieldsData([void Function(GUserFieldsDataBuilder)? updates]) =>
      (new GUserFieldsDataBuilder()..update(updates))._build();

  _$GUserFieldsData._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GUserFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GUserFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GUserFieldsData', 'isSignedUp');
  }

  @override
  GUserFieldsData rebuild(void Function(GUserFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserFieldsDataBuilder toBuilder() =>
      new GUserFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GUserFieldsDataBuilder
    implements Builder<GUserFieldsData, GUserFieldsDataBuilder> {
  _$GUserFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GUserFieldsDataBuilder() {
    GUserFieldsData._initializeBuilder(this);
  }

  GUserFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserFieldsData;
  }

  @override
  void update(void Function(GUserFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserFieldsData build() => _build();

  _$GUserFieldsData _build() {
    final _$result = _$v ??
        new _$GUserFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GUserFieldsData', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GUserFieldsData', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GUserFieldsData', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GAmountFieldsData extends GAmountFieldsData {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GAmountFieldsData(
          [void Function(GAmountFieldsDataBuilder)? updates]) =>
      (new GAmountFieldsDataBuilder()..update(updates))._build();

  _$GAmountFieldsData._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GAmountFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GAmountFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GAmountFieldsData', 'currencyId');
  }

  @override
  GAmountFieldsData rebuild(void Function(GAmountFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAmountFieldsDataBuilder toBuilder() =>
      new GAmountFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAmountFieldsData &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAmountFieldsData')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GAmountFieldsDataBuilder
    implements Builder<GAmountFieldsData, GAmountFieldsDataBuilder> {
  _$GAmountFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GAmountFieldsDataBuilder() {
    GAmountFieldsData._initializeBuilder(this);
  }

  GAmountFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAmountFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAmountFieldsData;
  }

  @override
  void update(void Function(GAmountFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAmountFieldsData build() => _build();

  _$GAmountFieldsData _build() {
    final _$result = _$v ??
        new _$GAmountFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GAmountFieldsData', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GAmountFieldsData', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GAmountFieldsData', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GCurrencyFieldsData extends GCurrencyFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final double rate;
  @override
  final String symbol;
  @override
  final String displayName;
  @override
  final int decimals;

  factory _$GCurrencyFieldsData(
          [void Function(GCurrencyFieldsDataBuilder)? updates]) =>
      (new GCurrencyFieldsDataBuilder()..update(updates))._build();

  _$GCurrencyFieldsData._(
      {required this.G__typename,
      required this.id,
      required this.rate,
      required this.symbol,
      required this.displayName,
      required this.decimals})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GCurrencyFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GCurrencyFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(rate, r'GCurrencyFieldsData', 'rate');
    BuiltValueNullFieldError.checkNotNull(
        symbol, r'GCurrencyFieldsData', 'symbol');
    BuiltValueNullFieldError.checkNotNull(
        displayName, r'GCurrencyFieldsData', 'displayName');
    BuiltValueNullFieldError.checkNotNull(
        decimals, r'GCurrencyFieldsData', 'decimals');
  }

  @override
  GCurrencyFieldsData rebuild(
          void Function(GCurrencyFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCurrencyFieldsDataBuilder toBuilder() =>
      new GCurrencyFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCurrencyFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        rate == other.rate &&
        symbol == other.symbol &&
        displayName == other.displayName &&
        decimals == other.decimals;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, rate.hashCode);
    _$hash = $jc(_$hash, symbol.hashCode);
    _$hash = $jc(_$hash, displayName.hashCode);
    _$hash = $jc(_$hash, decimals.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCurrencyFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('rate', rate)
          ..add('symbol', symbol)
          ..add('displayName', displayName)
          ..add('decimals', decimals))
        .toString();
  }
}

class GCurrencyFieldsDataBuilder
    implements Builder<GCurrencyFieldsData, GCurrencyFieldsDataBuilder> {
  _$GCurrencyFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  double? _rate;
  double? get rate => _$this._rate;
  set rate(double? rate) => _$this._rate = rate;

  String? _symbol;
  String? get symbol => _$this._symbol;
  set symbol(String? symbol) => _$this._symbol = symbol;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  int? _decimals;
  int? get decimals => _$this._decimals;
  set decimals(int? decimals) => _$this._decimals = decimals;

  GCurrencyFieldsDataBuilder() {
    GCurrencyFieldsData._initializeBuilder(this);
  }

  GCurrencyFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _rate = $v.rate;
      _symbol = $v.symbol;
      _displayName = $v.displayName;
      _decimals = $v.decimals;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCurrencyFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCurrencyFieldsData;
  }

  @override
  void update(void Function(GCurrencyFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCurrencyFieldsData build() => _build();

  _$GCurrencyFieldsData _build() {
    final _$result = _$v ??
        new _$GCurrencyFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GCurrencyFieldsData', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GCurrencyFieldsData', 'id'),
            rate: BuiltValueNullFieldError.checkNotNull(
                rate, r'GCurrencyFieldsData', 'rate'),
            symbol: BuiltValueNullFieldError.checkNotNull(
                symbol, r'GCurrencyFieldsData', 'symbol'),
            displayName: BuiltValueNullFieldError.checkNotNull(
                displayName, r'GCurrencyFieldsData', 'displayName'),
            decimals: BuiltValueNullFieldError.checkNotNull(
                decimals, r'GCurrencyFieldsData', 'decimals'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserPaysFieldsData extends GUserPaysFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;
  @override
  final BuiltList<String> upiIds;
  @override
  final BuiltList<GUserPaysFieldsData_owes> owes;

  factory _$GUserPaysFieldsData(
          [void Function(GUserPaysFieldsDataBuilder)? updates]) =>
      (new GUserPaysFieldsDataBuilder()..update(updates))._build();

  _$GUserPaysFieldsData._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp,
      required this.upiIds,
      required this.owes})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GUserPaysFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GUserPaysFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GUserPaysFieldsData', 'isSignedUp');
    BuiltValueNullFieldError.checkNotNull(
        upiIds, r'GUserPaysFieldsData', 'upiIds');
    BuiltValueNullFieldError.checkNotNull(owes, r'GUserPaysFieldsData', 'owes');
  }

  @override
  GUserPaysFieldsData rebuild(
          void Function(GUserPaysFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserPaysFieldsDataBuilder toBuilder() =>
      new GUserPaysFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserPaysFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp &&
        upiIds == other.upiIds &&
        owes == other.owes;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jc(_$hash, upiIds.hashCode);
    _$hash = $jc(_$hash, owes.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserPaysFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp)
          ..add('upiIds', upiIds)
          ..add('owes', owes))
        .toString();
  }
}

class GUserPaysFieldsDataBuilder
    implements Builder<GUserPaysFieldsData, GUserPaysFieldsDataBuilder> {
  _$GUserPaysFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  ListBuilder<String>? _upiIds;
  ListBuilder<String> get upiIds =>
      _$this._upiIds ??= new ListBuilder<String>();
  set upiIds(ListBuilder<String>? upiIds) => _$this._upiIds = upiIds;

  ListBuilder<GUserPaysFieldsData_owes>? _owes;
  ListBuilder<GUserPaysFieldsData_owes> get owes =>
      _$this._owes ??= new ListBuilder<GUserPaysFieldsData_owes>();
  set owes(ListBuilder<GUserPaysFieldsData_owes>? owes) => _$this._owes = owes;

  GUserPaysFieldsDataBuilder() {
    GUserPaysFieldsData._initializeBuilder(this);
  }

  GUserPaysFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _upiIds = $v.upiIds.toBuilder();
      _owes = $v.owes.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserPaysFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserPaysFieldsData;
  }

  @override
  void update(void Function(GUserPaysFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserPaysFieldsData build() => _build();

  _$GUserPaysFieldsData _build() {
    _$GUserPaysFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GUserPaysFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GUserPaysFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GUserPaysFieldsData', 'id'),
              name: name,
              phone: phone,
              email: email,
              isSignedUp: BuiltValueNullFieldError.checkNotNull(
                  isSignedUp, r'GUserPaysFieldsData', 'isSignedUp'),
              upiIds: upiIds.build(),
              owes: owes.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'upiIds';
        upiIds.build();
        _$failedField = 'owes';
        owes.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserPaysFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserPaysFieldsData_owes extends GUserPaysFieldsData_owes {
  @override
  final String G__typename;
  @override
  final String groupId;
  @override
  final GUserPaysFieldsData_owes_amount amount;

  factory _$GUserPaysFieldsData_owes(
          [void Function(GUserPaysFieldsData_owesBuilder)? updates]) =>
      (new GUserPaysFieldsData_owesBuilder()..update(updates))._build();

  _$GUserPaysFieldsData_owes._(
      {required this.G__typename, required this.groupId, required this.amount})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GUserPaysFieldsData_owes', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GUserPaysFieldsData_owes', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GUserPaysFieldsData_owes', 'amount');
  }

  @override
  GUserPaysFieldsData_owes rebuild(
          void Function(GUserPaysFieldsData_owesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserPaysFieldsData_owesBuilder toBuilder() =>
      new GUserPaysFieldsData_owesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserPaysFieldsData_owes &&
        G__typename == other.G__typename &&
        groupId == other.groupId &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserPaysFieldsData_owes')
          ..add('G__typename', G__typename)
          ..add('groupId', groupId)
          ..add('amount', amount))
        .toString();
  }
}

class GUserPaysFieldsData_owesBuilder
    implements
        Builder<GUserPaysFieldsData_owes, GUserPaysFieldsData_owesBuilder> {
  _$GUserPaysFieldsData_owes? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  GUserPaysFieldsData_owes_amountBuilder? _amount;
  GUserPaysFieldsData_owes_amountBuilder get amount =>
      _$this._amount ??= new GUserPaysFieldsData_owes_amountBuilder();
  set amount(GUserPaysFieldsData_owes_amountBuilder? amount) =>
      _$this._amount = amount;

  GUserPaysFieldsData_owesBuilder() {
    GUserPaysFieldsData_owes._initializeBuilder(this);
  }

  GUserPaysFieldsData_owesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _groupId = $v.groupId;
      _amount = $v.amount.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserPaysFieldsData_owes other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserPaysFieldsData_owes;
  }

  @override
  void update(void Function(GUserPaysFieldsData_owesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserPaysFieldsData_owes build() => _build();

  _$GUserPaysFieldsData_owes _build() {
    _$GUserPaysFieldsData_owes _$result;
    try {
      _$result = _$v ??
          new _$GUserPaysFieldsData_owes._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GUserPaysFieldsData_owes', 'G__typename'),
              groupId: BuiltValueNullFieldError.checkNotNull(
                  groupId, r'GUserPaysFieldsData_owes', 'groupId'),
              amount: amount.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserPaysFieldsData_owes', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserPaysFieldsData_owes_amount
    extends GUserPaysFieldsData_owes_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GUserPaysFieldsData_owes_amount(
          [void Function(GUserPaysFieldsData_owes_amountBuilder)? updates]) =>
      (new GUserPaysFieldsData_owes_amountBuilder()..update(updates))._build();

  _$GUserPaysFieldsData_owes_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GUserPaysFieldsData_owes_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GUserPaysFieldsData_owes_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GUserPaysFieldsData_owes_amount', 'currencyId');
  }

  @override
  GUserPaysFieldsData_owes_amount rebuild(
          void Function(GUserPaysFieldsData_owes_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserPaysFieldsData_owes_amountBuilder toBuilder() =>
      new GUserPaysFieldsData_owes_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserPaysFieldsData_owes_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserPaysFieldsData_owes_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GUserPaysFieldsData_owes_amountBuilder
    implements
        Builder<GUserPaysFieldsData_owes_amount,
            GUserPaysFieldsData_owes_amountBuilder> {
  _$GUserPaysFieldsData_owes_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GUserPaysFieldsData_owes_amountBuilder() {
    GUserPaysFieldsData_owes_amount._initializeBuilder(this);
  }

  GUserPaysFieldsData_owes_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserPaysFieldsData_owes_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserPaysFieldsData_owes_amount;
  }

  @override
  void update(void Function(GUserPaysFieldsData_owes_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserPaysFieldsData_owes_amount build() => _build();

  _$GUserPaysFieldsData_owes_amount _build() {
    final _$result = _$v ??
        new _$GUserPaysFieldsData_owes_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GUserPaysFieldsData_owes_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GUserPaysFieldsData_owes_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GUserPaysFieldsData_owes_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupBasicData extends GGroupBasicData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GGroupBasicData([void Function(GGroupBasicDataBuilder)? updates]) =>
      (new GGroupBasicDataBuilder()..update(updates))._build();

  _$GGroupBasicData._({required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupBasicData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GGroupBasicData', 'id');
  }

  @override
  GGroupBasicData rebuild(void Function(GGroupBasicDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupBasicDataBuilder toBuilder() =>
      new GGroupBasicDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupBasicData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupBasicData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GGroupBasicDataBuilder
    implements Builder<GGroupBasicData, GGroupBasicDataBuilder> {
  _$GGroupBasicData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GGroupBasicDataBuilder() {
    GGroupBasicData._initializeBuilder(this);
  }

  GGroupBasicDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupBasicData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupBasicData;
  }

  @override
  void update(void Function(GGroupBasicDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupBasicData build() => _build();

  _$GGroupBasicData _build() {
    final _$result = _$v ??
        new _$GGroupBasicData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GGroupBasicData', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupBasicData', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData extends GGroupFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final GGroupFieldsData_creator creator;
  @override
  final BuiltList<GGroupFieldsData_members> members;
  @override
  final String createdAt;

  factory _$GGroupFieldsData(
          [void Function(GGroupFieldsDataBuilder)? updates]) =>
      (new GGroupFieldsDataBuilder()..update(updates))._build();

  _$GGroupFieldsData._(
      {required this.G__typename,
      required this.id,
      this.name,
      required this.creator,
      required this.members,
      required this.createdAt})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GGroupFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GGroupFieldsData', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GGroupFieldsData', 'members');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GGroupFieldsData', 'createdAt');
  }

  @override
  GGroupFieldsData rebuild(void Function(GGroupFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsDataBuilder toBuilder() =>
      new GGroupFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        creator == other.creator &&
        members == other.members &&
        createdAt == other.createdAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('creator', creator)
          ..add('members', members)
          ..add('createdAt', createdAt))
        .toString();
  }
}

class GGroupFieldsDataBuilder
    implements Builder<GGroupFieldsData, GGroupFieldsDataBuilder> {
  _$GGroupFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GGroupFieldsData_creatorBuilder? _creator;
  GGroupFieldsData_creatorBuilder get creator =>
      _$this._creator ??= new GGroupFieldsData_creatorBuilder();
  set creator(GGroupFieldsData_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GGroupFieldsData_members>? _members;
  ListBuilder<GGroupFieldsData_members> get members =>
      _$this._members ??= new ListBuilder<GGroupFieldsData_members>();
  set members(ListBuilder<GGroupFieldsData_members>? members) =>
      _$this._members = members;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  GGroupFieldsDataBuilder() {
    GGroupFieldsData._initializeBuilder(this);
  }

  GGroupFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _createdAt = $v.createdAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData;
  }

  @override
  void update(void Function(GGroupFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData build() => _build();

  _$GGroupFieldsData _build() {
    _$GGroupFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GGroupFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GGroupFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GGroupFieldsData', 'id'),
              name: name,
              creator: creator.build(),
              members: members.build(),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GGroupFieldsData', 'createdAt'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData_creator extends GGroupFieldsData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupFieldsData_creator(
          [void Function(GGroupFieldsData_creatorBuilder)? updates]) =>
      (new GGroupFieldsData_creatorBuilder()..update(updates))._build();

  _$GGroupFieldsData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupFieldsData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupFieldsData_creator', 'isSignedUp');
  }

  @override
  GGroupFieldsData_creator rebuild(
          void Function(GGroupFieldsData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsData_creatorBuilder toBuilder() =>
      new GGroupFieldsData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupFieldsData_creatorBuilder
    implements
        Builder<GGroupFieldsData_creator, GGroupFieldsData_creatorBuilder> {
  _$GGroupFieldsData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupFieldsData_creatorBuilder() {
    GGroupFieldsData_creator._initializeBuilder(this);
  }

  GGroupFieldsData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData_creator;
  }

  @override
  void update(void Function(GGroupFieldsData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData_creator build() => _build();

  _$GGroupFieldsData_creator _build() {
    final _$result = _$v ??
        new _$GGroupFieldsData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GGroupFieldsData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupFieldsData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GGroupFieldsData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData_members extends GGroupFieldsData_members {
  @override
  final String G__typename;
  @override
  final BuiltList<GGroupFieldsData_members_owedInGroup> owedInGroup;
  @override
  final GGroupFieldsData_members_member member;

  factory _$GGroupFieldsData_members(
          [void Function(GGroupFieldsData_membersBuilder)? updates]) =>
      (new GGroupFieldsData_membersBuilder()..update(updates))._build();

  _$GGroupFieldsData_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GGroupFieldsData_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GGroupFieldsData_members', 'member');
  }

  @override
  GGroupFieldsData_members rebuild(
          void Function(GGroupFieldsData_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsData_membersBuilder toBuilder() =>
      new GGroupFieldsData_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GGroupFieldsData_membersBuilder
    implements
        Builder<GGroupFieldsData_members, GGroupFieldsData_membersBuilder> {
  _$GGroupFieldsData_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GGroupFieldsData_members_owedInGroup>? _owedInGroup;
  ListBuilder<GGroupFieldsData_members_owedInGroup> get owedInGroup =>
      _$this._owedInGroup ??=
          new ListBuilder<GGroupFieldsData_members_owedInGroup>();
  set owedInGroup(
          ListBuilder<GGroupFieldsData_members_owedInGroup>? owedInGroup) =>
      _$this._owedInGroup = owedInGroup;

  GGroupFieldsData_members_memberBuilder? _member;
  GGroupFieldsData_members_memberBuilder get member =>
      _$this._member ??= new GGroupFieldsData_members_memberBuilder();
  set member(GGroupFieldsData_members_memberBuilder? member) =>
      _$this._member = member;

  GGroupFieldsData_membersBuilder() {
    GGroupFieldsData_members._initializeBuilder(this);
  }

  GGroupFieldsData_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup.toBuilder();
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData_members;
  }

  @override
  void update(void Function(GGroupFieldsData_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData_members build() => _build();

  _$GGroupFieldsData_members _build() {
    _$GGroupFieldsData_members _$result;
    try {
      _$result = _$v ??
          new _$GGroupFieldsData_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GGroupFieldsData_members', 'G__typename'),
              owedInGroup: owedInGroup.build(),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'owedInGroup';
        owedInGroup.build();
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupFieldsData_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData_members_owedInGroup
    extends GGroupFieldsData_members_owedInGroup {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GGroupFieldsData_members_owedInGroup(
          [void Function(GGroupFieldsData_members_owedInGroupBuilder)?
              updates]) =>
      (new GGroupFieldsData_members_owedInGroupBuilder()..update(updates))
          ._build();

  _$GGroupFieldsData_members_owedInGroup._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData_members_owedInGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GGroupFieldsData_members_owedInGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GGroupFieldsData_members_owedInGroup', 'currencyId');
  }

  @override
  GGroupFieldsData_members_owedInGroup rebuild(
          void Function(GGroupFieldsData_members_owedInGroupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsData_members_owedInGroupBuilder toBuilder() =>
      new GGroupFieldsData_members_owedInGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData_members_owedInGroup &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData_members_owedInGroup')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GGroupFieldsData_members_owedInGroupBuilder
    implements
        Builder<GGroupFieldsData_members_owedInGroup,
            GGroupFieldsData_members_owedInGroupBuilder> {
  _$GGroupFieldsData_members_owedInGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GGroupFieldsData_members_owedInGroupBuilder() {
    GGroupFieldsData_members_owedInGroup._initializeBuilder(this);
  }

  GGroupFieldsData_members_owedInGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData_members_owedInGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData_members_owedInGroup;
  }

  @override
  void update(
      void Function(GGroupFieldsData_members_owedInGroupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData_members_owedInGroup build() => _build();

  _$GGroupFieldsData_members_owedInGroup _build() {
    final _$result = _$v ??
        new _$GGroupFieldsData_members_owedInGroup._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GGroupFieldsData_members_owedInGroup', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GGroupFieldsData_members_owedInGroup', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GGroupFieldsData_members_owedInGroup', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupFieldsData_members_member
    extends GGroupFieldsData_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupFieldsData_members_member(
          [void Function(GGroupFieldsData_members_memberBuilder)? updates]) =>
      (new GGroupFieldsData_members_memberBuilder()..update(updates))._build();

  _$GGroupFieldsData_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupFieldsData_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupFieldsData_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupFieldsData_members_member', 'isSignedUp');
  }

  @override
  GGroupFieldsData_members_member rebuild(
          void Function(GGroupFieldsData_members_memberBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupFieldsData_members_memberBuilder toBuilder() =>
      new GGroupFieldsData_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupFieldsData_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupFieldsData_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupFieldsData_members_memberBuilder
    implements
        Builder<GGroupFieldsData_members_member,
            GGroupFieldsData_members_memberBuilder> {
  _$GGroupFieldsData_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupFieldsData_members_memberBuilder() {
    GGroupFieldsData_members_member._initializeBuilder(this);
  }

  GGroupFieldsData_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupFieldsData_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupFieldsData_members_member;
  }

  @override
  void update(void Function(GGroupFieldsData_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupFieldsData_members_member build() => _build();

  _$GGroupFieldsData_members_member _build() {
    final _$result = _$v ??
        new _$GGroupFieldsData_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GGroupFieldsData_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupFieldsData_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GGroupFieldsData_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseBasicData extends GExpenseBasicData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GExpenseBasicData_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GExpenseBasicData(
          [void Function(GExpenseBasicDataBuilder)? updates]) =>
      (new GExpenseBasicDataBuilder()..update(updates))._build();

  _$GExpenseBasicData._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseBasicData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GExpenseBasicData', 'id');
    BuiltValueNullFieldError.checkNotNull(title, r'GExpenseBasicData', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseBasicData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GExpenseBasicData', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseBasicData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseBasicData', 'creatorId');
  }

  @override
  GExpenseBasicData rebuild(void Function(GExpenseBasicDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseBasicDataBuilder toBuilder() =>
      new GExpenseBasicDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseBasicData &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseBasicData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GExpenseBasicDataBuilder
    implements Builder<GExpenseBasicData, GExpenseBasicDataBuilder> {
  _$GExpenseBasicData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GExpenseBasicData_amountBuilder? _amount;
  GExpenseBasicData_amountBuilder get amount =>
      _$this._amount ??= new GExpenseBasicData_amountBuilder();
  set amount(GExpenseBasicData_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GExpenseBasicDataBuilder() {
    GExpenseBasicData._initializeBuilder(this);
  }

  GExpenseBasicDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseBasicData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseBasicData;
  }

  @override
  void update(void Function(GExpenseBasicDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseBasicData build() => _build();

  _$GExpenseBasicData _build() {
    _$GExpenseBasicData _$result;
    try {
      _$result = _$v ??
          new _$GExpenseBasicData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseBasicData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GExpenseBasicData', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GExpenseBasicData', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GExpenseBasicData', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GExpenseBasicData', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GExpenseBasicData', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseBasicData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseBasicData_amount extends GExpenseBasicData_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GExpenseBasicData_amount(
          [void Function(GExpenseBasicData_amountBuilder)? updates]) =>
      (new GExpenseBasicData_amountBuilder()..update(updates))._build();

  _$GExpenseBasicData_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseBasicData_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseBasicData_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GExpenseBasicData_amount', 'currencyId');
  }

  @override
  GExpenseBasicData_amount rebuild(
          void Function(GExpenseBasicData_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseBasicData_amountBuilder toBuilder() =>
      new GExpenseBasicData_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseBasicData_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseBasicData_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GExpenseBasicData_amountBuilder
    implements
        Builder<GExpenseBasicData_amount, GExpenseBasicData_amountBuilder> {
  _$GExpenseBasicData_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GExpenseBasicData_amountBuilder() {
    GExpenseBasicData_amount._initializeBuilder(this);
  }

  GExpenseBasicData_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseBasicData_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseBasicData_amount;
  }

  @override
  void update(void Function(GExpenseBasicData_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseBasicData_amount build() => _build();

  _$GExpenseBasicData_amount _build() {
    final _$result = _$v ??
        new _$GExpenseBasicData_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GExpenseBasicData_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GExpenseBasicData_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GExpenseBasicData_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData extends GExpenseFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GExpenseFieldsData_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;
  @override
  final GExpenseFieldsData_creator creator;
  @override
  final BuiltList<GExpenseFieldsData_splits> splits;

  factory _$GExpenseFieldsData(
          [void Function(GExpenseFieldsDataBuilder)? updates]) =>
      (new GExpenseFieldsDataBuilder()..update(updates))._build();

  _$GExpenseFieldsData._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId,
      required this.creator,
      required this.splits})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GExpenseFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GExpenseFieldsData', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseFieldsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GExpenseFieldsData', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseFieldsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GExpenseFieldsData', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GExpenseFieldsData', 'splits');
  }

  @override
  GExpenseFieldsData rebuild(
          void Function(GExpenseFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsDataBuilder toBuilder() =>
      new GExpenseFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId &&
        creator == other.creator &&
        splits == other.splits;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId)
          ..add('creator', creator)
          ..add('splits', splits))
        .toString();
  }
}

class GExpenseFieldsDataBuilder
    implements Builder<GExpenseFieldsData, GExpenseFieldsDataBuilder> {
  _$GExpenseFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GExpenseFieldsData_amountBuilder? _amount;
  GExpenseFieldsData_amountBuilder get amount =>
      _$this._amount ??= new GExpenseFieldsData_amountBuilder();
  set amount(GExpenseFieldsData_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GExpenseFieldsData_creatorBuilder? _creator;
  GExpenseFieldsData_creatorBuilder get creator =>
      _$this._creator ??= new GExpenseFieldsData_creatorBuilder();
  set creator(GExpenseFieldsData_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GExpenseFieldsData_splits>? _splits;
  ListBuilder<GExpenseFieldsData_splits> get splits =>
      _$this._splits ??= new ListBuilder<GExpenseFieldsData_splits>();
  set splits(ListBuilder<GExpenseFieldsData_splits>? splits) =>
      _$this._splits = splits;

  GExpenseFieldsDataBuilder() {
    GExpenseFieldsData._initializeBuilder(this);
  }

  GExpenseFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _creator = $v.creator.toBuilder();
      _splits = $v.splits.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData;
  }

  @override
  void update(void Function(GExpenseFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData build() => _build();

  _$GExpenseFieldsData _build() {
    _$GExpenseFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GExpenseFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GExpenseFieldsData', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GExpenseFieldsData', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GExpenseFieldsData', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GExpenseFieldsData', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GExpenseFieldsData', 'creatorId'),
              note: note,
              imageId: imageId,
              creator: creator.build(),
              splits: splits.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();

        _$failedField = 'creator';
        creator.build();
        _$failedField = 'splits';
        splits.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_amount extends GExpenseFieldsData_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GExpenseFieldsData_amount(
          [void Function(GExpenseFieldsData_amountBuilder)? updates]) =>
      (new GExpenseFieldsData_amountBuilder()..update(updates))._build();

  _$GExpenseFieldsData_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseFieldsData_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GExpenseFieldsData_amount', 'currencyId');
  }

  @override
  GExpenseFieldsData_amount rebuild(
          void Function(GExpenseFieldsData_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_amountBuilder toBuilder() =>
      new GExpenseFieldsData_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GExpenseFieldsData_amountBuilder
    implements
        Builder<GExpenseFieldsData_amount, GExpenseFieldsData_amountBuilder> {
  _$GExpenseFieldsData_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GExpenseFieldsData_amountBuilder() {
    GExpenseFieldsData_amount._initializeBuilder(this);
  }

  GExpenseFieldsData_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_amount;
  }

  @override
  void update(void Function(GExpenseFieldsData_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_amount build() => _build();

  _$GExpenseFieldsData_amount _build() {
    final _$result = _$v ??
        new _$GExpenseFieldsData_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GExpenseFieldsData_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GExpenseFieldsData_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GExpenseFieldsData_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_creator extends GExpenseFieldsData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseFieldsData_creator(
          [void Function(GExpenseFieldsData_creatorBuilder)? updates]) =>
      (new GExpenseFieldsData_creatorBuilder()..update(updates))._build();

  _$GExpenseFieldsData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseFieldsData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseFieldsData_creator', 'isSignedUp');
  }

  @override
  GExpenseFieldsData_creator rebuild(
          void Function(GExpenseFieldsData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_creatorBuilder toBuilder() =>
      new GExpenseFieldsData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseFieldsData_creatorBuilder
    implements
        Builder<GExpenseFieldsData_creator, GExpenseFieldsData_creatorBuilder> {
  _$GExpenseFieldsData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseFieldsData_creatorBuilder() {
    GExpenseFieldsData_creator._initializeBuilder(this);
  }

  GExpenseFieldsData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_creator;
  }

  @override
  void update(void Function(GExpenseFieldsData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_creator build() => _build();

  _$GExpenseFieldsData_creator _build() {
    final _$result = _$v ??
        new _$GExpenseFieldsData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GExpenseFieldsData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseFieldsData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GExpenseFieldsData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_splits extends GExpenseFieldsData_splits {
  @override
  final String G__typename;
  @override
  final GExpenseFieldsData_splits_fromUser fromUser;
  @override
  final GExpenseFieldsData_splits_toUser toUser;
  @override
  final String id;
  @override
  final GExpenseFieldsData_splits_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GExpenseFieldsData_splits(
          [void Function(GExpenseFieldsData_splitsBuilder)? updates]) =>
      (new GExpenseFieldsData_splitsBuilder()..update(updates))._build();

  _$GExpenseFieldsData_splits._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GExpenseFieldsData_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GExpenseFieldsData_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseFieldsData_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseFieldsData_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GExpenseFieldsData_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseFieldsData_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GExpenseFieldsData_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GExpenseFieldsData_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseFieldsData_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GExpenseFieldsData_splits', 'groupId');
  }

  @override
  GExpenseFieldsData_splits rebuild(
          void Function(GExpenseFieldsData_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_splitsBuilder toBuilder() =>
      new GExpenseFieldsData_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_splits &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_splits')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GExpenseFieldsData_splitsBuilder
    implements
        Builder<GExpenseFieldsData_splits, GExpenseFieldsData_splitsBuilder> {
  _$GExpenseFieldsData_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GExpenseFieldsData_splits_fromUserBuilder? _fromUser;
  GExpenseFieldsData_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GExpenseFieldsData_splits_fromUserBuilder();
  set fromUser(GExpenseFieldsData_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GExpenseFieldsData_splits_toUserBuilder? _toUser;
  GExpenseFieldsData_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new GExpenseFieldsData_splits_toUserBuilder();
  set toUser(GExpenseFieldsData_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GExpenseFieldsData_splits_amountBuilder? _amount;
  GExpenseFieldsData_splits_amountBuilder get amount =>
      _$this._amount ??= new GExpenseFieldsData_splits_amountBuilder();
  set amount(GExpenseFieldsData_splits_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GExpenseFieldsData_splitsBuilder() {
    GExpenseFieldsData_splits._initializeBuilder(this);
  }

  GExpenseFieldsData_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_splits;
  }

  @override
  void update(void Function(GExpenseFieldsData_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_splits build() => _build();

  _$GExpenseFieldsData_splits _build() {
    _$GExpenseFieldsData_splits _$result;
    try {
      _$result = _$v ??
          new _$GExpenseFieldsData_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseFieldsData_splits', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GExpenseFieldsData_splits', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GExpenseFieldsData_splits', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GExpenseFieldsData_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GExpenseFieldsData_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GExpenseFieldsData_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GExpenseFieldsData_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId:
                  BuiltValueNullFieldError.checkNotNull(groupId, r'GExpenseFieldsData_splits', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseFieldsData_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_splits_fromUser
    extends GExpenseFieldsData_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseFieldsData_splits_fromUser(
          [void Function(GExpenseFieldsData_splits_fromUserBuilder)?
              updates]) =>
      (new GExpenseFieldsData_splits_fromUserBuilder()..update(updates))
          ._build();

  _$GExpenseFieldsData_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseFieldsData_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseFieldsData_splits_fromUser', 'isSignedUp');
  }

  @override
  GExpenseFieldsData_splits_fromUser rebuild(
          void Function(GExpenseFieldsData_splits_fromUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_splits_fromUserBuilder toBuilder() =>
      new GExpenseFieldsData_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseFieldsData_splits_fromUserBuilder
    implements
        Builder<GExpenseFieldsData_splits_fromUser,
            GExpenseFieldsData_splits_fromUserBuilder> {
  _$GExpenseFieldsData_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseFieldsData_splits_fromUserBuilder() {
    GExpenseFieldsData_splits_fromUser._initializeBuilder(this);
  }

  GExpenseFieldsData_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_splits_fromUser;
  }

  @override
  void update(
      void Function(GExpenseFieldsData_splits_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_splits_fromUser build() => _build();

  _$GExpenseFieldsData_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GExpenseFieldsData_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseFieldsData_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseFieldsData_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GExpenseFieldsData_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_splits_toUser
    extends GExpenseFieldsData_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseFieldsData_splits_toUser(
          [void Function(GExpenseFieldsData_splits_toUserBuilder)? updates]) =>
      (new GExpenseFieldsData_splits_toUserBuilder()..update(updates))._build();

  _$GExpenseFieldsData_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseFieldsData_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseFieldsData_splits_toUser', 'isSignedUp');
  }

  @override
  GExpenseFieldsData_splits_toUser rebuild(
          void Function(GExpenseFieldsData_splits_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_splits_toUserBuilder toBuilder() =>
      new GExpenseFieldsData_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseFieldsData_splits_toUserBuilder
    implements
        Builder<GExpenseFieldsData_splits_toUser,
            GExpenseFieldsData_splits_toUserBuilder> {
  _$GExpenseFieldsData_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseFieldsData_splits_toUserBuilder() {
    GExpenseFieldsData_splits_toUser._initializeBuilder(this);
  }

  GExpenseFieldsData_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_splits_toUser;
  }

  @override
  void update(void Function(GExpenseFieldsData_splits_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_splits_toUser build() => _build();

  _$GExpenseFieldsData_splits_toUser _build() {
    final _$result = _$v ??
        new _$GExpenseFieldsData_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseFieldsData_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseFieldsData_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GExpenseFieldsData_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseFieldsData_splits_amount
    extends GExpenseFieldsData_splits_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GExpenseFieldsData_splits_amount(
          [void Function(GExpenseFieldsData_splits_amountBuilder)? updates]) =>
      (new GExpenseFieldsData_splits_amountBuilder()..update(updates))._build();

  _$GExpenseFieldsData_splits_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseFieldsData_splits_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseFieldsData_splits_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GExpenseFieldsData_splits_amount', 'currencyId');
  }

  @override
  GExpenseFieldsData_splits_amount rebuild(
          void Function(GExpenseFieldsData_splits_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseFieldsData_splits_amountBuilder toBuilder() =>
      new GExpenseFieldsData_splits_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseFieldsData_splits_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseFieldsData_splits_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GExpenseFieldsData_splits_amountBuilder
    implements
        Builder<GExpenseFieldsData_splits_amount,
            GExpenseFieldsData_splits_amountBuilder> {
  _$GExpenseFieldsData_splits_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GExpenseFieldsData_splits_amountBuilder() {
    GExpenseFieldsData_splits_amount._initializeBuilder(this);
  }

  GExpenseFieldsData_splits_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseFieldsData_splits_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseFieldsData_splits_amount;
  }

  @override
  void update(void Function(GExpenseFieldsData_splits_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseFieldsData_splits_amount build() => _build();

  _$GExpenseFieldsData_splits_amount _build() {
    final _$result = _$v ??
        new _$GExpenseFieldsData_splits_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseFieldsData_splits_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GExpenseFieldsData_splits_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GExpenseFieldsData_splits_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData extends GNewExpenseFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GNewExpenseFieldsData_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;
  @override
  final BuiltList<GNewExpenseFieldsData_splits> splits;

  factory _$GNewExpenseFieldsData(
          [void Function(GNewExpenseFieldsDataBuilder)? updates]) =>
      (new GNewExpenseFieldsDataBuilder()..update(updates))._build();

  _$GNewExpenseFieldsData._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId,
      required this.splits})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GNewExpenseFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GNewExpenseFieldsData', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GNewExpenseFieldsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GNewExpenseFieldsData', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GNewExpenseFieldsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GNewExpenseFieldsData', 'splits');
  }

  @override
  GNewExpenseFieldsData rebuild(
          void Function(GNewExpenseFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsDataBuilder toBuilder() =>
      new GNewExpenseFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId &&
        splits == other.splits;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId)
          ..add('splits', splits))
        .toString();
  }
}

class GNewExpenseFieldsDataBuilder
    implements Builder<GNewExpenseFieldsData, GNewExpenseFieldsDataBuilder> {
  _$GNewExpenseFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GNewExpenseFieldsData_amountBuilder? _amount;
  GNewExpenseFieldsData_amountBuilder get amount =>
      _$this._amount ??= new GNewExpenseFieldsData_amountBuilder();
  set amount(GNewExpenseFieldsData_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  ListBuilder<GNewExpenseFieldsData_splits>? _splits;
  ListBuilder<GNewExpenseFieldsData_splits> get splits =>
      _$this._splits ??= new ListBuilder<GNewExpenseFieldsData_splits>();
  set splits(ListBuilder<GNewExpenseFieldsData_splits>? splits) =>
      _$this._splits = splits;

  GNewExpenseFieldsDataBuilder() {
    GNewExpenseFieldsData._initializeBuilder(this);
  }

  GNewExpenseFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _splits = $v.splits.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData;
  }

  @override
  void update(void Function(GNewExpenseFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData build() => _build();

  _$GNewExpenseFieldsData _build() {
    _$GNewExpenseFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GNewExpenseFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GNewExpenseFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GNewExpenseFieldsData', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GNewExpenseFieldsData', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GNewExpenseFieldsData', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GNewExpenseFieldsData', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GNewExpenseFieldsData', 'creatorId'),
              note: note,
              imageId: imageId,
              splits: splits.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();

        _$failedField = 'splits';
        splits.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNewExpenseFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_amount extends GNewExpenseFieldsData_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GNewExpenseFieldsData_amount(
          [void Function(GNewExpenseFieldsData_amountBuilder)? updates]) =>
      (new GNewExpenseFieldsData_amountBuilder()..update(updates))._build();

  _$GNewExpenseFieldsData_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GNewExpenseFieldsData_amount', 'currencyId');
  }

  @override
  GNewExpenseFieldsData_amount rebuild(
          void Function(GNewExpenseFieldsData_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_amountBuilder toBuilder() =>
      new GNewExpenseFieldsData_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GNewExpenseFieldsData_amountBuilder
    implements
        Builder<GNewExpenseFieldsData_amount,
            GNewExpenseFieldsData_amountBuilder> {
  _$GNewExpenseFieldsData_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GNewExpenseFieldsData_amountBuilder() {
    GNewExpenseFieldsData_amount._initializeBuilder(this);
  }

  GNewExpenseFieldsData_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_amount;
  }

  @override
  void update(void Function(GNewExpenseFieldsData_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_amount build() => _build();

  _$GNewExpenseFieldsData_amount _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GNewExpenseFieldsData_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GNewExpenseFieldsData_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GNewExpenseFieldsData_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits extends GNewExpenseFieldsData_splits {
  @override
  final String G__typename;
  @override
  final GNewExpenseFieldsData_splits_expense? expense;
  @override
  final GNewExpenseFieldsData_splits_group group;
  @override
  final GNewExpenseFieldsData_splits_creator creator;
  @override
  final GNewExpenseFieldsData_splits_fromUser fromUser;
  @override
  final GNewExpenseFieldsData_splits_toUser toUser;
  @override
  final String id;
  @override
  final GNewExpenseFieldsData_splits_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GNewExpenseFieldsData_splits(
          [void Function(GNewExpenseFieldsData_splitsBuilder)? updates]) =>
      (new GNewExpenseFieldsData_splitsBuilder()..update(updates))._build();

  _$GNewExpenseFieldsData_splits._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GNewExpenseFieldsData_splits', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GNewExpenseFieldsData_splits', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GNewExpenseFieldsData_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GNewExpenseFieldsData_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GNewExpenseFieldsData_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GNewExpenseFieldsData_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GNewExpenseFieldsData_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GNewExpenseFieldsData_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GNewExpenseFieldsData_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GNewExpenseFieldsData_splits', 'groupId');
  }

  @override
  GNewExpenseFieldsData_splits rebuild(
          void Function(GNewExpenseFieldsData_splitsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splitsBuilder toBuilder() =>
      new GNewExpenseFieldsData_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GNewExpenseFieldsData_splitsBuilder
    implements
        Builder<GNewExpenseFieldsData_splits,
            GNewExpenseFieldsData_splitsBuilder> {
  _$GNewExpenseFieldsData_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GNewExpenseFieldsData_splits_expenseBuilder? _expense;
  GNewExpenseFieldsData_splits_expenseBuilder get expense =>
      _$this._expense ??= new GNewExpenseFieldsData_splits_expenseBuilder();
  set expense(GNewExpenseFieldsData_splits_expenseBuilder? expense) =>
      _$this._expense = expense;

  GNewExpenseFieldsData_splits_groupBuilder? _group;
  GNewExpenseFieldsData_splits_groupBuilder get group =>
      _$this._group ??= new GNewExpenseFieldsData_splits_groupBuilder();
  set group(GNewExpenseFieldsData_splits_groupBuilder? group) =>
      _$this._group = group;

  GNewExpenseFieldsData_splits_creatorBuilder? _creator;
  GNewExpenseFieldsData_splits_creatorBuilder get creator =>
      _$this._creator ??= new GNewExpenseFieldsData_splits_creatorBuilder();
  set creator(GNewExpenseFieldsData_splits_creatorBuilder? creator) =>
      _$this._creator = creator;

  GNewExpenseFieldsData_splits_fromUserBuilder? _fromUser;
  GNewExpenseFieldsData_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GNewExpenseFieldsData_splits_fromUserBuilder();
  set fromUser(GNewExpenseFieldsData_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GNewExpenseFieldsData_splits_toUserBuilder? _toUser;
  GNewExpenseFieldsData_splits_toUserBuilder get toUser =>
      _$this._toUser ??= new GNewExpenseFieldsData_splits_toUserBuilder();
  set toUser(GNewExpenseFieldsData_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GNewExpenseFieldsData_splits_amountBuilder? _amount;
  GNewExpenseFieldsData_splits_amountBuilder get amount =>
      _$this._amount ??= new GNewExpenseFieldsData_splits_amountBuilder();
  set amount(GNewExpenseFieldsData_splits_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GNewExpenseFieldsData_splitsBuilder() {
    GNewExpenseFieldsData_splits._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits;
  }

  @override
  void update(void Function(GNewExpenseFieldsData_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits build() => _build();

  _$GNewExpenseFieldsData_splits _build() {
    _$GNewExpenseFieldsData_splits _$result;
    try {
      _$result = _$v ??
          new _$GNewExpenseFieldsData_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GNewExpenseFieldsData_splits', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GNewExpenseFieldsData_splits', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GNewExpenseFieldsData_splits',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GNewExpenseFieldsData_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GNewExpenseFieldsData_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GNewExpenseFieldsData_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GNewExpenseFieldsData_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GNewExpenseFieldsData_splits', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNewExpenseFieldsData_splits', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_expense
    extends GNewExpenseFieldsData_splits_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GNewExpenseFieldsData_splits_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GNewExpenseFieldsData_splits_expense(
          [void Function(GNewExpenseFieldsData_splits_expenseBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_expenseBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GNewExpenseFieldsData_splits_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GNewExpenseFieldsData_splits_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GNewExpenseFieldsData_splits_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData_splits_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GNewExpenseFieldsData_splits_expense', 'creatorId');
  }

  @override
  GNewExpenseFieldsData_splits_expense rebuild(
          void Function(GNewExpenseFieldsData_splits_expenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_expenseBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_expenseBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_expense,
            GNewExpenseFieldsData_splits_expenseBuilder> {
  _$GNewExpenseFieldsData_splits_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GNewExpenseFieldsData_splits_expense_amountBuilder? _amount;
  GNewExpenseFieldsData_splits_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GNewExpenseFieldsData_splits_expense_amountBuilder();
  set amount(GNewExpenseFieldsData_splits_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GNewExpenseFieldsData_splits_expenseBuilder() {
    GNewExpenseFieldsData_splits_expense._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_expense;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_expense build() => _build();

  _$GNewExpenseFieldsData_splits_expense _build() {
    _$GNewExpenseFieldsData_splits_expense _$result;
    try {
      _$result = _$v ??
          new _$GNewExpenseFieldsData_splits_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GNewExpenseFieldsData_splits_expense', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GNewExpenseFieldsData_splits_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GNewExpenseFieldsData_splits_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(createdAt,
                  r'GNewExpenseFieldsData_splits_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GNewExpenseFieldsData_splits_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GNewExpenseFieldsData_splits_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNewExpenseFieldsData_splits_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_expense_amount
    extends GNewExpenseFieldsData_splits_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GNewExpenseFieldsData_splits_expense_amount(
          [void Function(GNewExpenseFieldsData_splits_expense_amountBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GNewExpenseFieldsData_splits_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData_splits_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GNewExpenseFieldsData_splits_expense_amount', 'currencyId');
  }

  @override
  GNewExpenseFieldsData_splits_expense_amount rebuild(
          void Function(GNewExpenseFieldsData_splits_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_expense_amountBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_expense_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GNewExpenseFieldsData_splits_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_expense_amountBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_expense_amount,
            GNewExpenseFieldsData_splits_expense_amountBuilder> {
  _$GNewExpenseFieldsData_splits_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GNewExpenseFieldsData_splits_expense_amountBuilder() {
    GNewExpenseFieldsData_splits_expense_amount._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_expense_amount;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_expense_amount build() => _build();

  _$GNewExpenseFieldsData_splits_expense_amount _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_expense_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GNewExpenseFieldsData_splits_expense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GNewExpenseFieldsData_splits_expense_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_group
    extends GNewExpenseFieldsData_splits_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GNewExpenseFieldsData_splits_group(
          [void Function(GNewExpenseFieldsData_splits_groupBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_groupBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_group', 'id');
  }

  @override
  GNewExpenseFieldsData_splits_group rebuild(
          void Function(GNewExpenseFieldsData_splits_groupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_groupBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_groupBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_group,
            GNewExpenseFieldsData_splits_groupBuilder> {
  _$GNewExpenseFieldsData_splits_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GNewExpenseFieldsData_splits_groupBuilder() {
    GNewExpenseFieldsData_splits_group._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_group;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_group build() => _build();

  _$GNewExpenseFieldsData_splits_group _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_creator
    extends GNewExpenseFieldsData_splits_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GNewExpenseFieldsData_splits_creator(
          [void Function(GNewExpenseFieldsData_splits_creatorBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_creatorBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GNewExpenseFieldsData_splits_creator', 'isSignedUp');
  }

  @override
  GNewExpenseFieldsData_splits_creator rebuild(
          void Function(GNewExpenseFieldsData_splits_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_creatorBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_creatorBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_creator,
            GNewExpenseFieldsData_splits_creatorBuilder> {
  _$GNewExpenseFieldsData_splits_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GNewExpenseFieldsData_splits_creatorBuilder() {
    GNewExpenseFieldsData_splits_creator._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_creator;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_creator build() => _build();

  _$GNewExpenseFieldsData_splits_creator _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GNewExpenseFieldsData_splits_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_fromUser
    extends GNewExpenseFieldsData_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GNewExpenseFieldsData_splits_fromUser(
          [void Function(GNewExpenseFieldsData_splits_fromUserBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_fromUserBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GNewExpenseFieldsData_splits_fromUser', 'isSignedUp');
  }

  @override
  GNewExpenseFieldsData_splits_fromUser rebuild(
          void Function(GNewExpenseFieldsData_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_fromUserBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GNewExpenseFieldsData_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_fromUserBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_fromUser,
            GNewExpenseFieldsData_splits_fromUserBuilder> {
  _$GNewExpenseFieldsData_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GNewExpenseFieldsData_splits_fromUserBuilder() {
    GNewExpenseFieldsData_splits_fromUser._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_fromUser;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_fromUser build() => _build();

  _$GNewExpenseFieldsData_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GNewExpenseFieldsData_splits_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_toUser
    extends GNewExpenseFieldsData_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GNewExpenseFieldsData_splits_toUser(
          [void Function(GNewExpenseFieldsData_splits_toUserBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_toUserBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNewExpenseFieldsData_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GNewExpenseFieldsData_splits_toUser', 'isSignedUp');
  }

  @override
  GNewExpenseFieldsData_splits_toUser rebuild(
          void Function(GNewExpenseFieldsData_splits_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_toUserBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_toUserBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_toUser,
            GNewExpenseFieldsData_splits_toUserBuilder> {
  _$GNewExpenseFieldsData_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GNewExpenseFieldsData_splits_toUserBuilder() {
    GNewExpenseFieldsData_splits_toUser._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_toUser;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_toUser build() => _build();

  _$GNewExpenseFieldsData_splits_toUser _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GNewExpenseFieldsData_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GNewExpenseFieldsData_splits_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GNewExpenseFieldsData_splits_amount
    extends GNewExpenseFieldsData_splits_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GNewExpenseFieldsData_splits_amount(
          [void Function(GNewExpenseFieldsData_splits_amountBuilder)?
              updates]) =>
      (new GNewExpenseFieldsData_splits_amountBuilder()..update(updates))
          ._build();

  _$GNewExpenseFieldsData_splits_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GNewExpenseFieldsData_splits_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GNewExpenseFieldsData_splits_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GNewExpenseFieldsData_splits_amount', 'currencyId');
  }

  @override
  GNewExpenseFieldsData_splits_amount rebuild(
          void Function(GNewExpenseFieldsData_splits_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNewExpenseFieldsData_splits_amountBuilder toBuilder() =>
      new GNewExpenseFieldsData_splits_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNewExpenseFieldsData_splits_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNewExpenseFieldsData_splits_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GNewExpenseFieldsData_splits_amountBuilder
    implements
        Builder<GNewExpenseFieldsData_splits_amount,
            GNewExpenseFieldsData_splits_amountBuilder> {
  _$GNewExpenseFieldsData_splits_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GNewExpenseFieldsData_splits_amountBuilder() {
    GNewExpenseFieldsData_splits_amount._initializeBuilder(this);
  }

  GNewExpenseFieldsData_splits_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNewExpenseFieldsData_splits_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNewExpenseFieldsData_splits_amount;
  }

  @override
  void update(
      void Function(GNewExpenseFieldsData_splits_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNewExpenseFieldsData_splits_amount build() => _build();

  _$GNewExpenseFieldsData_splits_amount _build() {
    final _$result = _$v ??
        new _$GNewExpenseFieldsData_splits_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GNewExpenseFieldsData_splits_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GNewExpenseFieldsData_splits_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GNewExpenseFieldsData_splits_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GConfigFieldsData extends GConfigFieldsData {
  @override
  final String G__typename;
  @override
  final String defaultCurrencyId;

  factory _$GConfigFieldsData(
          [void Function(GConfigFieldsDataBuilder)? updates]) =>
      (new GConfigFieldsDataBuilder()..update(updates))._build();

  _$GConfigFieldsData._(
      {required this.G__typename, required this.defaultCurrencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GConfigFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        defaultCurrencyId, r'GConfigFieldsData', 'defaultCurrencyId');
  }

  @override
  GConfigFieldsData rebuild(void Function(GConfigFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConfigFieldsDataBuilder toBuilder() =>
      new GConfigFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConfigFieldsData &&
        G__typename == other.G__typename &&
        defaultCurrencyId == other.defaultCurrencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, defaultCurrencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GConfigFieldsData')
          ..add('G__typename', G__typename)
          ..add('defaultCurrencyId', defaultCurrencyId))
        .toString();
  }
}

class GConfigFieldsDataBuilder
    implements Builder<GConfigFieldsData, GConfigFieldsDataBuilder> {
  _$GConfigFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _defaultCurrencyId;
  String? get defaultCurrencyId => _$this._defaultCurrencyId;
  set defaultCurrencyId(String? defaultCurrencyId) =>
      _$this._defaultCurrencyId = defaultCurrencyId;

  GConfigFieldsDataBuilder() {
    GConfigFieldsData._initializeBuilder(this);
  }

  GConfigFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _defaultCurrencyId = $v.defaultCurrencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConfigFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GConfigFieldsData;
  }

  @override
  void update(void Function(GConfigFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GConfigFieldsData build() => _build();

  _$GConfigFieldsData _build() {
    final _$result = _$v ??
        new _$GConfigFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GConfigFieldsData', 'G__typename'),
            defaultCurrencyId: BuiltValueNullFieldError.checkNotNull(
                defaultCurrencyId, r'GConfigFieldsData', 'defaultCurrencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsBasicsData extends GSplitFieldsBasicsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final GSplitFieldsBasicsData_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GSplitFieldsBasicsData(
          [void Function(GSplitFieldsBasicsDataBuilder)? updates]) =>
      (new GSplitFieldsBasicsDataBuilder()..update(updates))._build();

  _$GSplitFieldsBasicsData._(
      {required this.G__typename,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsBasicsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GSplitFieldsBasicsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitFieldsBasicsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GSplitFieldsBasicsData', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitFieldsBasicsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GSplitFieldsBasicsData', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GSplitFieldsBasicsData', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitFieldsBasicsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GSplitFieldsBasicsData', 'groupId');
  }

  @override
  GSplitFieldsBasicsData rebuild(
          void Function(GSplitFieldsBasicsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsBasicsDataBuilder toBuilder() =>
      new GSplitFieldsBasicsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsBasicsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsBasicsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GSplitFieldsBasicsDataBuilder
    implements Builder<GSplitFieldsBasicsData, GSplitFieldsBasicsDataBuilder> {
  _$GSplitFieldsBasicsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GSplitFieldsBasicsData_amountBuilder? _amount;
  GSplitFieldsBasicsData_amountBuilder get amount =>
      _$this._amount ??= new GSplitFieldsBasicsData_amountBuilder();
  set amount(GSplitFieldsBasicsData_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GSplitFieldsBasicsDataBuilder() {
    GSplitFieldsBasicsData._initializeBuilder(this);
  }

  GSplitFieldsBasicsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsBasicsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsBasicsData;
  }

  @override
  void update(void Function(GSplitFieldsBasicsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsBasicsData build() => _build();

  _$GSplitFieldsBasicsData _build() {
    _$GSplitFieldsBasicsData _$result;
    try {
      _$result = _$v ??
          new _$GSplitFieldsBasicsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GSplitFieldsBasicsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitFieldsBasicsData', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GSplitFieldsBasicsData', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitFieldsBasicsData', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GSplitFieldsBasicsData', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GSplitFieldsBasicsData', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GSplitFieldsBasicsData', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(
                  groupId, r'GSplitFieldsBasicsData', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitFieldsBasicsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsBasicsData_amount extends GSplitFieldsBasicsData_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GSplitFieldsBasicsData_amount(
          [void Function(GSplitFieldsBasicsData_amountBuilder)? updates]) =>
      (new GSplitFieldsBasicsData_amountBuilder()..update(updates))._build();

  _$GSplitFieldsBasicsData_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsBasicsData_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitFieldsBasicsData_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GSplitFieldsBasicsData_amount', 'currencyId');
  }

  @override
  GSplitFieldsBasicsData_amount rebuild(
          void Function(GSplitFieldsBasicsData_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsBasicsData_amountBuilder toBuilder() =>
      new GSplitFieldsBasicsData_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsBasicsData_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsBasicsData_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GSplitFieldsBasicsData_amountBuilder
    implements
        Builder<GSplitFieldsBasicsData_amount,
            GSplitFieldsBasicsData_amountBuilder> {
  _$GSplitFieldsBasicsData_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GSplitFieldsBasicsData_amountBuilder() {
    GSplitFieldsBasicsData_amount._initializeBuilder(this);
  }

  GSplitFieldsBasicsData_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsBasicsData_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsBasicsData_amount;
  }

  @override
  void update(void Function(GSplitFieldsBasicsData_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsBasicsData_amount build() => _build();

  _$GSplitFieldsBasicsData_amount _build() {
    final _$result = _$v ??
        new _$GSplitFieldsBasicsData_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitFieldsBasicsData_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GSplitFieldsBasicsData_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GSplitFieldsBasicsData_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsData extends GSplitFieldsData {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final GSplitFieldsData_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;
  @override
  final GSplitFieldsData_fromUser fromUser;
  @override
  final GSplitFieldsData_toUser toUser;

  factory _$GSplitFieldsData(
          [void Function(GSplitFieldsDataBuilder)? updates]) =>
      (new GSplitFieldsDataBuilder()..update(updates))._build();

  _$GSplitFieldsData._(
      {required this.G__typename,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId,
      required this.fromUser,
      required this.toUser})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GSplitFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GSplitFieldsData', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitFieldsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GSplitFieldsData', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GSplitFieldsData', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitFieldsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GSplitFieldsData', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GSplitFieldsData', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GSplitFieldsData', 'toUser');
  }

  @override
  GSplitFieldsData rebuild(void Function(GSplitFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsDataBuilder toBuilder() =>
      new GSplitFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId &&
        fromUser == other.fromUser &&
        toUser == other.toUser;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser))
        .toString();
  }
}

class GSplitFieldsDataBuilder
    implements Builder<GSplitFieldsData, GSplitFieldsDataBuilder> {
  _$GSplitFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GSplitFieldsData_amountBuilder? _amount;
  GSplitFieldsData_amountBuilder get amount =>
      _$this._amount ??= new GSplitFieldsData_amountBuilder();
  set amount(GSplitFieldsData_amountBuilder? amount) => _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GSplitFieldsData_fromUserBuilder? _fromUser;
  GSplitFieldsData_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GSplitFieldsData_fromUserBuilder();
  set fromUser(GSplitFieldsData_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GSplitFieldsData_toUserBuilder? _toUser;
  GSplitFieldsData_toUserBuilder get toUser =>
      _$this._toUser ??= new GSplitFieldsData_toUserBuilder();
  set toUser(GSplitFieldsData_toUserBuilder? toUser) => _$this._toUser = toUser;

  GSplitFieldsDataBuilder() {
    GSplitFieldsData._initializeBuilder(this);
  }

  GSplitFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsData;
  }

  @override
  void update(void Function(GSplitFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsData build() => _build();

  _$GSplitFieldsData _build() {
    _$GSplitFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GSplitFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GSplitFieldsData', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitFieldsData', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GSplitFieldsData', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitFieldsData', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GSplitFieldsData', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GSplitFieldsData', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GSplitFieldsData', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(
                  groupId, r'GSplitFieldsData', 'groupId'),
              note: note,
              imageId: imageId,
              fromUser: fromUser.build(),
              toUser: toUser.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();

        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsData_amount extends GSplitFieldsData_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GSplitFieldsData_amount(
          [void Function(GSplitFieldsData_amountBuilder)? updates]) =>
      (new GSplitFieldsData_amountBuilder()..update(updates))._build();

  _$GSplitFieldsData_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsData_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitFieldsData_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GSplitFieldsData_amount', 'currencyId');
  }

  @override
  GSplitFieldsData_amount rebuild(
          void Function(GSplitFieldsData_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsData_amountBuilder toBuilder() =>
      new GSplitFieldsData_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsData_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsData_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GSplitFieldsData_amountBuilder
    implements
        Builder<GSplitFieldsData_amount, GSplitFieldsData_amountBuilder> {
  _$GSplitFieldsData_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GSplitFieldsData_amountBuilder() {
    GSplitFieldsData_amount._initializeBuilder(this);
  }

  GSplitFieldsData_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsData_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsData_amount;
  }

  @override
  void update(void Function(GSplitFieldsData_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsData_amount build() => _build();

  _$GSplitFieldsData_amount _build() {
    final _$result = _$v ??
        new _$GSplitFieldsData_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitFieldsData_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GSplitFieldsData_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GSplitFieldsData_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsData_fromUser extends GSplitFieldsData_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitFieldsData_fromUser(
          [void Function(GSplitFieldsData_fromUserBuilder)? updates]) =>
      (new GSplitFieldsData_fromUserBuilder()..update(updates))._build();

  _$GSplitFieldsData_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsData_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitFieldsData_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitFieldsData_fromUser', 'isSignedUp');
  }

  @override
  GSplitFieldsData_fromUser rebuild(
          void Function(GSplitFieldsData_fromUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsData_fromUserBuilder toBuilder() =>
      new GSplitFieldsData_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsData_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsData_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitFieldsData_fromUserBuilder
    implements
        Builder<GSplitFieldsData_fromUser, GSplitFieldsData_fromUserBuilder> {
  _$GSplitFieldsData_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitFieldsData_fromUserBuilder() {
    GSplitFieldsData_fromUser._initializeBuilder(this);
  }

  GSplitFieldsData_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsData_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsData_fromUser;
  }

  @override
  void update(void Function(GSplitFieldsData_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsData_fromUser build() => _build();

  _$GSplitFieldsData_fromUser _build() {
    final _$result = _$v ??
        new _$GSplitFieldsData_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitFieldsData_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitFieldsData_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GSplitFieldsData_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitFieldsData_toUser extends GSplitFieldsData_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitFieldsData_toUser(
          [void Function(GSplitFieldsData_toUserBuilder)? updates]) =>
      (new GSplitFieldsData_toUserBuilder()..update(updates))._build();

  _$GSplitFieldsData_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitFieldsData_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(id, r'GSplitFieldsData_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitFieldsData_toUser', 'isSignedUp');
  }

  @override
  GSplitFieldsData_toUser rebuild(
          void Function(GSplitFieldsData_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitFieldsData_toUserBuilder toBuilder() =>
      new GSplitFieldsData_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitFieldsData_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitFieldsData_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitFieldsData_toUserBuilder
    implements
        Builder<GSplitFieldsData_toUser, GSplitFieldsData_toUserBuilder> {
  _$GSplitFieldsData_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitFieldsData_toUserBuilder() {
    GSplitFieldsData_toUser._initializeBuilder(this);
  }

  GSplitFieldsData_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitFieldsData_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitFieldsData_toUser;
  }

  @override
  void update(void Function(GSplitFieldsData_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitFieldsData_toUser build() => _build();

  _$GSplitFieldsData_toUser _build() {
    final _$result = _$v ??
        new _$GSplitFieldsData_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitFieldsData_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitFieldsData_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GSplitFieldsData_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData extends GSplitTransactionFieldsData {
  @override
  final String G__typename;
  @override
  final GSplitTransactionFieldsData_fromUser fromUser;
  @override
  final GSplitTransactionFieldsData_toUser toUser;
  @override
  final String id;
  @override
  final GSplitTransactionFieldsData_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;
  @override
  final GSplitTransactionFieldsData_expense? expense;
  @override
  final GSplitTransactionFieldsData_group group;
  @override
  final GSplitTransactionFieldsData_creator creator;

  factory _$GSplitTransactionFieldsData(
          [void Function(GSplitTransactionFieldsDataBuilder)? updates]) =>
      (new GSplitTransactionFieldsDataBuilder()..update(updates))._build();

  _$GSplitTransactionFieldsData._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId,
      this.expense,
      required this.group,
      required this.creator})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GSplitTransactionFieldsData', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GSplitTransactionFieldsData', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitTransactionFieldsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GSplitTransactionFieldsData', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitTransactionFieldsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GSplitTransactionFieldsData', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GSplitTransactionFieldsData', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitTransactionFieldsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GSplitTransactionFieldsData', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GSplitTransactionFieldsData', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GSplitTransactionFieldsData', 'creator');
  }

  @override
  GSplitTransactionFieldsData rebuild(
          void Function(GSplitTransactionFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsDataBuilder toBuilder() =>
      new GSplitTransactionFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator))
        .toString();
  }
}

class GSplitTransactionFieldsDataBuilder
    implements
        Builder<GSplitTransactionFieldsData,
            GSplitTransactionFieldsDataBuilder> {
  _$GSplitTransactionFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GSplitTransactionFieldsData_fromUserBuilder? _fromUser;
  GSplitTransactionFieldsData_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GSplitTransactionFieldsData_fromUserBuilder();
  set fromUser(GSplitTransactionFieldsData_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GSplitTransactionFieldsData_toUserBuilder? _toUser;
  GSplitTransactionFieldsData_toUserBuilder get toUser =>
      _$this._toUser ??= new GSplitTransactionFieldsData_toUserBuilder();
  set toUser(GSplitTransactionFieldsData_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GSplitTransactionFieldsData_amountBuilder? _amount;
  GSplitTransactionFieldsData_amountBuilder get amount =>
      _$this._amount ??= new GSplitTransactionFieldsData_amountBuilder();
  set amount(GSplitTransactionFieldsData_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GSplitTransactionFieldsData_expenseBuilder? _expense;
  GSplitTransactionFieldsData_expenseBuilder get expense =>
      _$this._expense ??= new GSplitTransactionFieldsData_expenseBuilder();
  set expense(GSplitTransactionFieldsData_expenseBuilder? expense) =>
      _$this._expense = expense;

  GSplitTransactionFieldsData_groupBuilder? _group;
  GSplitTransactionFieldsData_groupBuilder get group =>
      _$this._group ??= new GSplitTransactionFieldsData_groupBuilder();
  set group(GSplitTransactionFieldsData_groupBuilder? group) =>
      _$this._group = group;

  GSplitTransactionFieldsData_creatorBuilder? _creator;
  GSplitTransactionFieldsData_creatorBuilder get creator =>
      _$this._creator ??= new GSplitTransactionFieldsData_creatorBuilder();
  set creator(GSplitTransactionFieldsData_creatorBuilder? creator) =>
      _$this._creator = creator;

  GSplitTransactionFieldsDataBuilder() {
    GSplitTransactionFieldsData._initializeBuilder(this);
  }

  GSplitTransactionFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData;
  }

  @override
  void update(void Function(GSplitTransactionFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData build() => _build();

  _$GSplitTransactionFieldsData _build() {
    _$GSplitTransactionFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GSplitTransactionFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GSplitTransactionFieldsData', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitTransactionFieldsData', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType,
                  r'GSplitTransactionFieldsData',
                  'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitTransactionFieldsData', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GSplitTransactionFieldsData', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GSplitTransactionFieldsData', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GSplitTransactionFieldsData', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GSplitTransactionFieldsData', 'groupId'),
              note: note,
              imageId: imageId,
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();

        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitTransactionFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_fromUser
    extends GSplitTransactionFieldsData_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitTransactionFieldsData_fromUser(
          [void Function(GSplitTransactionFieldsData_fromUserBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_fromUserBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitTransactionFieldsData_fromUser', 'isSignedUp');
  }

  @override
  GSplitTransactionFieldsData_fromUser rebuild(
          void Function(GSplitTransactionFieldsData_fromUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_fromUserBuilder toBuilder() =>
      new GSplitTransactionFieldsData_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitTransactionFieldsData_fromUserBuilder
    implements
        Builder<GSplitTransactionFieldsData_fromUser,
            GSplitTransactionFieldsData_fromUserBuilder> {
  _$GSplitTransactionFieldsData_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitTransactionFieldsData_fromUserBuilder() {
    GSplitTransactionFieldsData_fromUser._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_fromUser;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_fromUser build() => _build();

  _$GSplitTransactionFieldsData_fromUser _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitTransactionFieldsData_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_toUser
    extends GSplitTransactionFieldsData_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitTransactionFieldsData_toUser(
          [void Function(GSplitTransactionFieldsData_toUserBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_toUserBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitTransactionFieldsData_toUser', 'isSignedUp');
  }

  @override
  GSplitTransactionFieldsData_toUser rebuild(
          void Function(GSplitTransactionFieldsData_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_toUserBuilder toBuilder() =>
      new GSplitTransactionFieldsData_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitTransactionFieldsData_toUserBuilder
    implements
        Builder<GSplitTransactionFieldsData_toUser,
            GSplitTransactionFieldsData_toUserBuilder> {
  _$GSplitTransactionFieldsData_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitTransactionFieldsData_toUserBuilder() {
    GSplitTransactionFieldsData_toUser._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_toUser;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_toUser build() => _build();

  _$GSplitTransactionFieldsData_toUser _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitTransactionFieldsData_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_amount
    extends GSplitTransactionFieldsData_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GSplitTransactionFieldsData_amount(
          [void Function(GSplitTransactionFieldsData_amountBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_amountBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitTransactionFieldsData_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GSplitTransactionFieldsData_amount', 'currencyId');
  }

  @override
  GSplitTransactionFieldsData_amount rebuild(
          void Function(GSplitTransactionFieldsData_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_amountBuilder toBuilder() =>
      new GSplitTransactionFieldsData_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GSplitTransactionFieldsData_amountBuilder
    implements
        Builder<GSplitTransactionFieldsData_amount,
            GSplitTransactionFieldsData_amountBuilder> {
  _$GSplitTransactionFieldsData_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GSplitTransactionFieldsData_amountBuilder() {
    GSplitTransactionFieldsData_amount._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_amount;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_amount build() => _build();

  _$GSplitTransactionFieldsData_amount _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GSplitTransactionFieldsData_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GSplitTransactionFieldsData_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_expense
    extends GSplitTransactionFieldsData_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GSplitTransactionFieldsData_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GSplitTransactionFieldsData_expense(
          [void Function(GSplitTransactionFieldsData_expenseBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_expenseBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GSplitTransactionFieldsData_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitTransactionFieldsData_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GSplitTransactionFieldsData_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitTransactionFieldsData_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitTransactionFieldsData_expense', 'creatorId');
  }

  @override
  GSplitTransactionFieldsData_expense rebuild(
          void Function(GSplitTransactionFieldsData_expenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_expenseBuilder toBuilder() =>
      new GSplitTransactionFieldsData_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GSplitTransactionFieldsData_expenseBuilder
    implements
        Builder<GSplitTransactionFieldsData_expense,
            GSplitTransactionFieldsData_expenseBuilder> {
  _$GSplitTransactionFieldsData_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GSplitTransactionFieldsData_expense_amountBuilder? _amount;
  GSplitTransactionFieldsData_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GSplitTransactionFieldsData_expense_amountBuilder();
  set amount(GSplitTransactionFieldsData_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GSplitTransactionFieldsData_expenseBuilder() {
    GSplitTransactionFieldsData_expense._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_expense;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_expense build() => _build();

  _$GSplitTransactionFieldsData_expense _build() {
    _$GSplitTransactionFieldsData_expense _$result;
    try {
      _$result = _$v ??
          new _$GSplitTransactionFieldsData_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GSplitTransactionFieldsData_expense', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitTransactionFieldsData_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GSplitTransactionFieldsData_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(createdAt,
                  r'GSplitTransactionFieldsData_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GSplitTransactionFieldsData_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GSplitTransactionFieldsData_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitTransactionFieldsData_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_expense_amount
    extends GSplitTransactionFieldsData_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GSplitTransactionFieldsData_expense_amount(
          [void Function(GSplitTransactionFieldsData_expense_amountBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_expense_amountBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GSplitTransactionFieldsData_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitTransactionFieldsData_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GSplitTransactionFieldsData_expense_amount', 'currencyId');
  }

  @override
  GSplitTransactionFieldsData_expense_amount rebuild(
          void Function(GSplitTransactionFieldsData_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_expense_amountBuilder toBuilder() =>
      new GSplitTransactionFieldsData_expense_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitTransactionFieldsData_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GSplitTransactionFieldsData_expense_amountBuilder
    implements
        Builder<GSplitTransactionFieldsData_expense_amount,
            GSplitTransactionFieldsData_expense_amountBuilder> {
  _$GSplitTransactionFieldsData_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GSplitTransactionFieldsData_expense_amountBuilder() {
    GSplitTransactionFieldsData_expense_amount._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_expense_amount;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_expense_amount build() => _build();

  _$GSplitTransactionFieldsData_expense_amount _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_expense_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GSplitTransactionFieldsData_expense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GSplitTransactionFieldsData_expense_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_group
    extends GSplitTransactionFieldsData_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GSplitTransactionFieldsData_group(
          [void Function(GSplitTransactionFieldsData_groupBuilder)? updates]) =>
      (new GSplitTransactionFieldsData_groupBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_group', 'id');
  }

  @override
  GSplitTransactionFieldsData_group rebuild(
          void Function(GSplitTransactionFieldsData_groupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_groupBuilder toBuilder() =>
      new GSplitTransactionFieldsData_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GSplitTransactionFieldsData_groupBuilder
    implements
        Builder<GSplitTransactionFieldsData_group,
            GSplitTransactionFieldsData_groupBuilder> {
  _$GSplitTransactionFieldsData_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GSplitTransactionFieldsData_groupBuilder() {
    GSplitTransactionFieldsData_group._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_group;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_group build() => _build();

  _$GSplitTransactionFieldsData_group _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GSplitTransactionFieldsData_creator
    extends GSplitTransactionFieldsData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitTransactionFieldsData_creator(
          [void Function(GSplitTransactionFieldsData_creatorBuilder)?
              updates]) =>
      (new GSplitTransactionFieldsData_creatorBuilder()..update(updates))
          ._build();

  _$GSplitTransactionFieldsData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitTransactionFieldsData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitTransactionFieldsData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitTransactionFieldsData_creator', 'isSignedUp');
  }

  @override
  GSplitTransactionFieldsData_creator rebuild(
          void Function(GSplitTransactionFieldsData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitTransactionFieldsData_creatorBuilder toBuilder() =>
      new GSplitTransactionFieldsData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitTransactionFieldsData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitTransactionFieldsData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitTransactionFieldsData_creatorBuilder
    implements
        Builder<GSplitTransactionFieldsData_creator,
            GSplitTransactionFieldsData_creatorBuilder> {
  _$GSplitTransactionFieldsData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitTransactionFieldsData_creatorBuilder() {
    GSplitTransactionFieldsData_creator._initializeBuilder(this);
  }

  GSplitTransactionFieldsData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitTransactionFieldsData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitTransactionFieldsData_creator;
  }

  @override
  void update(
      void Function(GSplitTransactionFieldsData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitTransactionFieldsData_creator build() => _build();

  _$GSplitTransactionFieldsData_creator _build() {
    final _$result = _$v ??
        new _$GSplitTransactionFieldsData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitTransactionFieldsData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitTransactionFieldsData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitTransactionFieldsData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData extends GSplitWithSiblingsData {
  @override
  final String G__typename;
  @override
  final GSplitWithSiblingsData_expense? expense;
  @override
  final GSplitWithSiblingsData_group group;
  @override
  final GSplitWithSiblingsData_creator creator;
  @override
  final GSplitWithSiblingsData_fromUser fromUser;
  @override
  final GSplitWithSiblingsData_toUser toUser;
  @override
  final String id;
  @override
  final GSplitWithSiblingsData_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;
  @override
  final BuiltList<GSplitWithSiblingsData_siblings> siblings;

  factory _$GSplitWithSiblingsData(
          [void Function(GSplitWithSiblingsDataBuilder)? updates]) =>
      (new GSplitWithSiblingsDataBuilder()..update(updates))._build();

  _$GSplitWithSiblingsData._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId,
      required this.siblings})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GSplitWithSiblingsData', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GSplitWithSiblingsData', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GSplitWithSiblingsData', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GSplitWithSiblingsData', 'toUser');
    BuiltValueNullFieldError.checkNotNull(id, r'GSplitWithSiblingsData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitWithSiblingsData', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GSplitWithSiblingsData', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitWithSiblingsData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GSplitWithSiblingsData', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GSplitWithSiblingsData', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitWithSiblingsData', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GSplitWithSiblingsData', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        siblings, r'GSplitWithSiblingsData', 'siblings');
  }

  @override
  GSplitWithSiblingsData rebuild(
          void Function(GSplitWithSiblingsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsDataBuilder toBuilder() =>
      new GSplitWithSiblingsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId &&
        siblings == other.siblings;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jc(_$hash, siblings.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitWithSiblingsData')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId)
          ..add('siblings', siblings))
        .toString();
  }
}

class GSplitWithSiblingsDataBuilder
    implements Builder<GSplitWithSiblingsData, GSplitWithSiblingsDataBuilder> {
  _$GSplitWithSiblingsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GSplitWithSiblingsData_expenseBuilder? _expense;
  GSplitWithSiblingsData_expenseBuilder get expense =>
      _$this._expense ??= new GSplitWithSiblingsData_expenseBuilder();
  set expense(GSplitWithSiblingsData_expenseBuilder? expense) =>
      _$this._expense = expense;

  GSplitWithSiblingsData_groupBuilder? _group;
  GSplitWithSiblingsData_groupBuilder get group =>
      _$this._group ??= new GSplitWithSiblingsData_groupBuilder();
  set group(GSplitWithSiblingsData_groupBuilder? group) =>
      _$this._group = group;

  GSplitWithSiblingsData_creatorBuilder? _creator;
  GSplitWithSiblingsData_creatorBuilder get creator =>
      _$this._creator ??= new GSplitWithSiblingsData_creatorBuilder();
  set creator(GSplitWithSiblingsData_creatorBuilder? creator) =>
      _$this._creator = creator;

  GSplitWithSiblingsData_fromUserBuilder? _fromUser;
  GSplitWithSiblingsData_fromUserBuilder get fromUser =>
      _$this._fromUser ??= new GSplitWithSiblingsData_fromUserBuilder();
  set fromUser(GSplitWithSiblingsData_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GSplitWithSiblingsData_toUserBuilder? _toUser;
  GSplitWithSiblingsData_toUserBuilder get toUser =>
      _$this._toUser ??= new GSplitWithSiblingsData_toUserBuilder();
  set toUser(GSplitWithSiblingsData_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GSplitWithSiblingsData_amountBuilder? _amount;
  GSplitWithSiblingsData_amountBuilder get amount =>
      _$this._amount ??= new GSplitWithSiblingsData_amountBuilder();
  set amount(GSplitWithSiblingsData_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  ListBuilder<GSplitWithSiblingsData_siblings>? _siblings;
  ListBuilder<GSplitWithSiblingsData_siblings> get siblings =>
      _$this._siblings ??= new ListBuilder<GSplitWithSiblingsData_siblings>();
  set siblings(ListBuilder<GSplitWithSiblingsData_siblings>? siblings) =>
      _$this._siblings = siblings;

  GSplitWithSiblingsDataBuilder() {
    GSplitWithSiblingsData._initializeBuilder(this);
  }

  GSplitWithSiblingsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _siblings = $v.siblings.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData;
  }

  @override
  void update(void Function(GSplitWithSiblingsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData build() => _build();

  _$GSplitWithSiblingsData _build() {
    _$GSplitWithSiblingsData _$result;
    try {
      _$result = _$v ??
          new _$GSplitWithSiblingsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GSplitWithSiblingsData', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitWithSiblingsData', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GSplitWithSiblingsData', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitWithSiblingsData', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GSplitWithSiblingsData', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GSplitWithSiblingsData', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GSplitWithSiblingsData', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(
                  groupId, r'GSplitWithSiblingsData', 'groupId'),
              note: note,
              imageId: imageId,
              siblings: siblings.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();

        _$failedField = 'siblings';
        siblings.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitWithSiblingsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_expense extends GSplitWithSiblingsData_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GSplitWithSiblingsData_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GSplitWithSiblingsData_expense(
          [void Function(GSplitWithSiblingsData_expenseBuilder)? updates]) =>
      (new GSplitWithSiblingsData_expenseBuilder()..update(updates))._build();

  _$GSplitWithSiblingsData_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GSplitWithSiblingsData_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitWithSiblingsData_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GSplitWithSiblingsData_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitWithSiblingsData_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitWithSiblingsData_expense', 'creatorId');
  }

  @override
  GSplitWithSiblingsData_expense rebuild(
          void Function(GSplitWithSiblingsData_expenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_expenseBuilder toBuilder() =>
      new GSplitWithSiblingsData_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitWithSiblingsData_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GSplitWithSiblingsData_expenseBuilder
    implements
        Builder<GSplitWithSiblingsData_expense,
            GSplitWithSiblingsData_expenseBuilder> {
  _$GSplitWithSiblingsData_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GSplitWithSiblingsData_expense_amountBuilder? _amount;
  GSplitWithSiblingsData_expense_amountBuilder get amount =>
      _$this._amount ??= new GSplitWithSiblingsData_expense_amountBuilder();
  set amount(GSplitWithSiblingsData_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GSplitWithSiblingsData_expenseBuilder() {
    GSplitWithSiblingsData_expense._initializeBuilder(this);
  }

  GSplitWithSiblingsData_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_expense;
  }

  @override
  void update(void Function(GSplitWithSiblingsData_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_expense build() => _build();

  _$GSplitWithSiblingsData_expense _build() {
    _$GSplitWithSiblingsData_expense _$result;
    try {
      _$result = _$v ??
          new _$GSplitWithSiblingsData_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GSplitWithSiblingsData_expense', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitWithSiblingsData_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GSplitWithSiblingsData_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitWithSiblingsData_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GSplitWithSiblingsData_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GSplitWithSiblingsData_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitWithSiblingsData_expense', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_expense_amount
    extends GSplitWithSiblingsData_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GSplitWithSiblingsData_expense_amount(
          [void Function(GSplitWithSiblingsData_expense_amountBuilder)?
              updates]) =>
      (new GSplitWithSiblingsData_expense_amountBuilder()..update(updates))
          ._build();

  _$GSplitWithSiblingsData_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitWithSiblingsData_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GSplitWithSiblingsData_expense_amount', 'currencyId');
  }

  @override
  GSplitWithSiblingsData_expense_amount rebuild(
          void Function(GSplitWithSiblingsData_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_expense_amountBuilder toBuilder() =>
      new GSplitWithSiblingsData_expense_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitWithSiblingsData_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GSplitWithSiblingsData_expense_amountBuilder
    implements
        Builder<GSplitWithSiblingsData_expense_amount,
            GSplitWithSiblingsData_expense_amountBuilder> {
  _$GSplitWithSiblingsData_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GSplitWithSiblingsData_expense_amountBuilder() {
    GSplitWithSiblingsData_expense_amount._initializeBuilder(this);
  }

  GSplitWithSiblingsData_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_expense_amount;
  }

  @override
  void update(
      void Function(GSplitWithSiblingsData_expense_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_expense_amount build() => _build();

  _$GSplitWithSiblingsData_expense_amount _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitWithSiblingsData_expense_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GSplitWithSiblingsData_expense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GSplitWithSiblingsData_expense_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_group extends GSplitWithSiblingsData_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GSplitWithSiblingsData_group(
          [void Function(GSplitWithSiblingsData_groupBuilder)? updates]) =>
      (new GSplitWithSiblingsData_groupBuilder()..update(updates))._build();

  _$GSplitWithSiblingsData_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_group', 'id');
  }

  @override
  GSplitWithSiblingsData_group rebuild(
          void Function(GSplitWithSiblingsData_groupBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_groupBuilder toBuilder() =>
      new GSplitWithSiblingsData_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitWithSiblingsData_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GSplitWithSiblingsData_groupBuilder
    implements
        Builder<GSplitWithSiblingsData_group,
            GSplitWithSiblingsData_groupBuilder> {
  _$GSplitWithSiblingsData_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GSplitWithSiblingsData_groupBuilder() {
    GSplitWithSiblingsData_group._initializeBuilder(this);
  }

  GSplitWithSiblingsData_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_group;
  }

  @override
  void update(void Function(GSplitWithSiblingsData_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_group build() => _build();

  _$GSplitWithSiblingsData_group _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitWithSiblingsData_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitWithSiblingsData_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_creator extends GSplitWithSiblingsData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitWithSiblingsData_creator(
          [void Function(GSplitWithSiblingsData_creatorBuilder)? updates]) =>
      (new GSplitWithSiblingsData_creatorBuilder()..update(updates))._build();

  _$GSplitWithSiblingsData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitWithSiblingsData_creator', 'isSignedUp');
  }

  @override
  GSplitWithSiblingsData_creator rebuild(
          void Function(GSplitWithSiblingsData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_creatorBuilder toBuilder() =>
      new GSplitWithSiblingsData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitWithSiblingsData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitWithSiblingsData_creatorBuilder
    implements
        Builder<GSplitWithSiblingsData_creator,
            GSplitWithSiblingsData_creatorBuilder> {
  _$GSplitWithSiblingsData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitWithSiblingsData_creatorBuilder() {
    GSplitWithSiblingsData_creator._initializeBuilder(this);
  }

  GSplitWithSiblingsData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_creator;
  }

  @override
  void update(void Function(GSplitWithSiblingsData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_creator build() => _build();

  _$GSplitWithSiblingsData_creator _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitWithSiblingsData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitWithSiblingsData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GSplitWithSiblingsData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_fromUser
    extends GSplitWithSiblingsData_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitWithSiblingsData_fromUser(
          [void Function(GSplitWithSiblingsData_fromUserBuilder)? updates]) =>
      (new GSplitWithSiblingsData_fromUserBuilder()..update(updates))._build();

  _$GSplitWithSiblingsData_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitWithSiblingsData_fromUser', 'isSignedUp');
  }

  @override
  GSplitWithSiblingsData_fromUser rebuild(
          void Function(GSplitWithSiblingsData_fromUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_fromUserBuilder toBuilder() =>
      new GSplitWithSiblingsData_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitWithSiblingsData_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitWithSiblingsData_fromUserBuilder
    implements
        Builder<GSplitWithSiblingsData_fromUser,
            GSplitWithSiblingsData_fromUserBuilder> {
  _$GSplitWithSiblingsData_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitWithSiblingsData_fromUserBuilder() {
    GSplitWithSiblingsData_fromUser._initializeBuilder(this);
  }

  GSplitWithSiblingsData_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_fromUser;
  }

  @override
  void update(void Function(GSplitWithSiblingsData_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_fromUser build() => _build();

  _$GSplitWithSiblingsData_fromUser _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitWithSiblingsData_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitWithSiblingsData_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GSplitWithSiblingsData_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_toUser extends GSplitWithSiblingsData_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitWithSiblingsData_toUser(
          [void Function(GSplitWithSiblingsData_toUserBuilder)? updates]) =>
      (new GSplitWithSiblingsData_toUserBuilder()..update(updates))._build();

  _$GSplitWithSiblingsData_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitWithSiblingsData_toUser', 'isSignedUp');
  }

  @override
  GSplitWithSiblingsData_toUser rebuild(
          void Function(GSplitWithSiblingsData_toUserBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_toUserBuilder toBuilder() =>
      new GSplitWithSiblingsData_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitWithSiblingsData_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitWithSiblingsData_toUserBuilder
    implements
        Builder<GSplitWithSiblingsData_toUser,
            GSplitWithSiblingsData_toUserBuilder> {
  _$GSplitWithSiblingsData_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitWithSiblingsData_toUserBuilder() {
    GSplitWithSiblingsData_toUser._initializeBuilder(this);
  }

  GSplitWithSiblingsData_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_toUser;
  }

  @override
  void update(void Function(GSplitWithSiblingsData_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_toUser build() => _build();

  _$GSplitWithSiblingsData_toUser _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitWithSiblingsData_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitWithSiblingsData_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GSplitWithSiblingsData_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_amount extends GSplitWithSiblingsData_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GSplitWithSiblingsData_amount(
          [void Function(GSplitWithSiblingsData_amountBuilder)? updates]) =>
      (new GSplitWithSiblingsData_amountBuilder()..update(updates))._build();

  _$GSplitWithSiblingsData_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitWithSiblingsData_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GSplitWithSiblingsData_amount', 'currencyId');
  }

  @override
  GSplitWithSiblingsData_amount rebuild(
          void Function(GSplitWithSiblingsData_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_amountBuilder toBuilder() =>
      new GSplitWithSiblingsData_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitWithSiblingsData_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GSplitWithSiblingsData_amountBuilder
    implements
        Builder<GSplitWithSiblingsData_amount,
            GSplitWithSiblingsData_amountBuilder> {
  _$GSplitWithSiblingsData_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GSplitWithSiblingsData_amountBuilder() {
    GSplitWithSiblingsData_amount._initializeBuilder(this);
  }

  GSplitWithSiblingsData_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_amount;
  }

  @override
  void update(void Function(GSplitWithSiblingsData_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_amount build() => _build();

  _$GSplitWithSiblingsData_amount _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GSplitWithSiblingsData_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GSplitWithSiblingsData_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId, r'GSplitWithSiblingsData_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_siblings
    extends GSplitWithSiblingsData_siblings {
  @override
  final String G__typename;
  @override
  final GSplitWithSiblingsData_siblings_expense? expense;
  @override
  final GSplitWithSiblingsData_siblings_group group;
  @override
  final GSplitWithSiblingsData_siblings_creator creator;
  @override
  final GSplitWithSiblingsData_siblings_fromUser fromUser;
  @override
  final GSplitWithSiblingsData_siblings_toUser toUser;
  @override
  final String id;
  @override
  final GSplitWithSiblingsData_siblings_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GSplitWithSiblingsData_siblings(
          [void Function(GSplitWithSiblingsData_siblingsBuilder)? updates]) =>
      (new GSplitWithSiblingsData_siblingsBuilder()..update(updates))._build();

  _$GSplitWithSiblingsData_siblings._(
      {required this.G__typename,
      this.expense,
      required this.group,
      required this.creator,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_siblings', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        group, r'GSplitWithSiblingsData_siblings', 'group');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GSplitWithSiblingsData_siblings', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GSplitWithSiblingsData_siblings', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GSplitWithSiblingsData_siblings', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_siblings', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitWithSiblingsData_siblings', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        transactionType, r'GSplitWithSiblingsData_siblings', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitWithSiblingsData_siblings', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GSplitWithSiblingsData_siblings', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GSplitWithSiblingsData_siblings', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitWithSiblingsData_siblings', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GSplitWithSiblingsData_siblings', 'groupId');
  }

  @override
  GSplitWithSiblingsData_siblings rebuild(
          void Function(GSplitWithSiblingsData_siblingsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_siblingsBuilder toBuilder() =>
      new GSplitWithSiblingsData_siblingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_siblings &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        group == other.group &&
        creator == other.creator &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, group.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSplitWithSiblingsData_siblings')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('group', group)
          ..add('creator', creator)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GSplitWithSiblingsData_siblingsBuilder
    implements
        Builder<GSplitWithSiblingsData_siblings,
            GSplitWithSiblingsData_siblingsBuilder> {
  _$GSplitWithSiblingsData_siblings? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GSplitWithSiblingsData_siblings_expenseBuilder? _expense;
  GSplitWithSiblingsData_siblings_expenseBuilder get expense =>
      _$this._expense ??= new GSplitWithSiblingsData_siblings_expenseBuilder();
  set expense(GSplitWithSiblingsData_siblings_expenseBuilder? expense) =>
      _$this._expense = expense;

  GSplitWithSiblingsData_siblings_groupBuilder? _group;
  GSplitWithSiblingsData_siblings_groupBuilder get group =>
      _$this._group ??= new GSplitWithSiblingsData_siblings_groupBuilder();
  set group(GSplitWithSiblingsData_siblings_groupBuilder? group) =>
      _$this._group = group;

  GSplitWithSiblingsData_siblings_creatorBuilder? _creator;
  GSplitWithSiblingsData_siblings_creatorBuilder get creator =>
      _$this._creator ??= new GSplitWithSiblingsData_siblings_creatorBuilder();
  set creator(GSplitWithSiblingsData_siblings_creatorBuilder? creator) =>
      _$this._creator = creator;

  GSplitWithSiblingsData_siblings_fromUserBuilder? _fromUser;
  GSplitWithSiblingsData_siblings_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GSplitWithSiblingsData_siblings_fromUserBuilder();
  set fromUser(GSplitWithSiblingsData_siblings_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GSplitWithSiblingsData_siblings_toUserBuilder? _toUser;
  GSplitWithSiblingsData_siblings_toUserBuilder get toUser =>
      _$this._toUser ??= new GSplitWithSiblingsData_siblings_toUserBuilder();
  set toUser(GSplitWithSiblingsData_siblings_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GSplitWithSiblingsData_siblings_amountBuilder? _amount;
  GSplitWithSiblingsData_siblings_amountBuilder get amount =>
      _$this._amount ??= new GSplitWithSiblingsData_siblings_amountBuilder();
  set amount(GSplitWithSiblingsData_siblings_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GSplitWithSiblingsData_siblingsBuilder() {
    GSplitWithSiblingsData_siblings._initializeBuilder(this);
  }

  GSplitWithSiblingsData_siblingsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _group = $v.group.toBuilder();
      _creator = $v.creator.toBuilder();
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_siblings other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_siblings;
  }

  @override
  void update(void Function(GSplitWithSiblingsData_siblingsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_siblings build() => _build();

  _$GSplitWithSiblingsData_siblings _build() {
    _$GSplitWithSiblingsData_siblings _$result;
    try {
      _$result = _$v ??
          new _$GSplitWithSiblingsData_siblings._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GSplitWithSiblingsData_siblings', 'G__typename'),
              expense: _expense?.build(),
              group: group.build(),
              creator: creator.build(),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitWithSiblingsData_siblings', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GSplitWithSiblingsData_siblings', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitWithSiblingsData_siblings', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GSplitWithSiblingsData_siblings', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GSplitWithSiblingsData_siblings', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GSplitWithSiblingsData_siblings', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GSplitWithSiblingsData_siblings', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'group';
        group.build();
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitWithSiblingsData_siblings', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_siblings_expense
    extends GSplitWithSiblingsData_siblings_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GSplitWithSiblingsData_siblings_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GSplitWithSiblingsData_siblings_expense(
          [void Function(GSplitWithSiblingsData_siblings_expenseBuilder)?
              updates]) =>
      (new GSplitWithSiblingsData_siblings_expenseBuilder()..update(updates))
          ._build();

  _$GSplitWithSiblingsData_siblings_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_siblings_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_siblings_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GSplitWithSiblingsData_siblings_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GSplitWithSiblingsData_siblings_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GSplitWithSiblingsData_siblings_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitWithSiblingsData_siblings_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GSplitWithSiblingsData_siblings_expense', 'creatorId');
  }

  @override
  GSplitWithSiblingsData_siblings_expense rebuild(
          void Function(GSplitWithSiblingsData_siblings_expenseBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_siblings_expenseBuilder toBuilder() =>
      new GSplitWithSiblingsData_siblings_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_siblings_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitWithSiblingsData_siblings_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GSplitWithSiblingsData_siblings_expenseBuilder
    implements
        Builder<GSplitWithSiblingsData_siblings_expense,
            GSplitWithSiblingsData_siblings_expenseBuilder> {
  _$GSplitWithSiblingsData_siblings_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GSplitWithSiblingsData_siblings_expense_amountBuilder? _amount;
  GSplitWithSiblingsData_siblings_expense_amountBuilder get amount =>
      _$this._amount ??=
          new GSplitWithSiblingsData_siblings_expense_amountBuilder();
  set amount(GSplitWithSiblingsData_siblings_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GSplitWithSiblingsData_siblings_expenseBuilder() {
    GSplitWithSiblingsData_siblings_expense._initializeBuilder(this);
  }

  GSplitWithSiblingsData_siblings_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_siblings_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_siblings_expense;
  }

  @override
  void update(
      void Function(GSplitWithSiblingsData_siblings_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_siblings_expense build() => _build();

  _$GSplitWithSiblingsData_siblings_expense _build() {
    _$GSplitWithSiblingsData_siblings_expense _$result;
    try {
      _$result = _$v ??
          new _$GSplitWithSiblingsData_siblings_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GSplitWithSiblingsData_siblings_expense', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GSplitWithSiblingsData_siblings_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GSplitWithSiblingsData_siblings_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GSplitWithSiblingsData_siblings_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GSplitWithSiblingsData_siblings_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GSplitWithSiblingsData_siblings_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSplitWithSiblingsData_siblings_expense',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_siblings_expense_amount
    extends GSplitWithSiblingsData_siblings_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GSplitWithSiblingsData_siblings_expense_amount(
          [void Function(GSplitWithSiblingsData_siblings_expense_amountBuilder)?
              updates]) =>
      (new GSplitWithSiblingsData_siblings_expense_amountBuilder()
            ..update(updates))
          ._build();

  _$GSplitWithSiblingsData_siblings_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GSplitWithSiblingsData_siblings_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitWithSiblingsData_siblings_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GSplitWithSiblingsData_siblings_expense_amount', 'currencyId');
  }

  @override
  GSplitWithSiblingsData_siblings_expense_amount rebuild(
          void Function(GSplitWithSiblingsData_siblings_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_siblings_expense_amountBuilder toBuilder() =>
      new GSplitWithSiblingsData_siblings_expense_amountBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_siblings_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitWithSiblingsData_siblings_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GSplitWithSiblingsData_siblings_expense_amountBuilder
    implements
        Builder<GSplitWithSiblingsData_siblings_expense_amount,
            GSplitWithSiblingsData_siblings_expense_amountBuilder> {
  _$GSplitWithSiblingsData_siblings_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GSplitWithSiblingsData_siblings_expense_amountBuilder() {
    GSplitWithSiblingsData_siblings_expense_amount._initializeBuilder(this);
  }

  GSplitWithSiblingsData_siblings_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_siblings_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_siblings_expense_amount;
  }

  @override
  void update(
      void Function(GSplitWithSiblingsData_siblings_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_siblings_expense_amount build() => _build();

  _$GSplitWithSiblingsData_siblings_expense_amount _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_siblings_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GSplitWithSiblingsData_siblings_expense_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GSplitWithSiblingsData_siblings_expense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GSplitWithSiblingsData_siblings_expense_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_siblings_group
    extends GSplitWithSiblingsData_siblings_group {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;

  factory _$GSplitWithSiblingsData_siblings_group(
          [void Function(GSplitWithSiblingsData_siblings_groupBuilder)?
              updates]) =>
      (new GSplitWithSiblingsData_siblings_groupBuilder()..update(updates))
          ._build();

  _$GSplitWithSiblingsData_siblings_group._(
      {required this.G__typename, required this.id, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_siblings_group', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_siblings_group', 'id');
  }

  @override
  GSplitWithSiblingsData_siblings_group rebuild(
          void Function(GSplitWithSiblingsData_siblings_groupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_siblings_groupBuilder toBuilder() =>
      new GSplitWithSiblingsData_siblings_groupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_siblings_group &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitWithSiblingsData_siblings_group')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name))
        .toString();
  }
}

class GSplitWithSiblingsData_siblings_groupBuilder
    implements
        Builder<GSplitWithSiblingsData_siblings_group,
            GSplitWithSiblingsData_siblings_groupBuilder> {
  _$GSplitWithSiblingsData_siblings_group? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GSplitWithSiblingsData_siblings_groupBuilder() {
    GSplitWithSiblingsData_siblings_group._initializeBuilder(this);
  }

  GSplitWithSiblingsData_siblings_groupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_siblings_group other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_siblings_group;
  }

  @override
  void update(
      void Function(GSplitWithSiblingsData_siblings_groupBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_siblings_group build() => _build();

  _$GSplitWithSiblingsData_siblings_group _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_siblings_group._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitWithSiblingsData_siblings_group', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitWithSiblingsData_siblings_group', 'id'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_siblings_creator
    extends GSplitWithSiblingsData_siblings_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitWithSiblingsData_siblings_creator(
          [void Function(GSplitWithSiblingsData_siblings_creatorBuilder)?
              updates]) =>
      (new GSplitWithSiblingsData_siblings_creatorBuilder()..update(updates))
          ._build();

  _$GSplitWithSiblingsData_siblings_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_siblings_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_siblings_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitWithSiblingsData_siblings_creator', 'isSignedUp');
  }

  @override
  GSplitWithSiblingsData_siblings_creator rebuild(
          void Function(GSplitWithSiblingsData_siblings_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_siblings_creatorBuilder toBuilder() =>
      new GSplitWithSiblingsData_siblings_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_siblings_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitWithSiblingsData_siblings_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitWithSiblingsData_siblings_creatorBuilder
    implements
        Builder<GSplitWithSiblingsData_siblings_creator,
            GSplitWithSiblingsData_siblings_creatorBuilder> {
  _$GSplitWithSiblingsData_siblings_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitWithSiblingsData_siblings_creatorBuilder() {
    GSplitWithSiblingsData_siblings_creator._initializeBuilder(this);
  }

  GSplitWithSiblingsData_siblings_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_siblings_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_siblings_creator;
  }

  @override
  void update(
      void Function(GSplitWithSiblingsData_siblings_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_siblings_creator build() => _build();

  _$GSplitWithSiblingsData_siblings_creator _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_siblings_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitWithSiblingsData_siblings_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitWithSiblingsData_siblings_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitWithSiblingsData_siblings_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_siblings_fromUser
    extends GSplitWithSiblingsData_siblings_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitWithSiblingsData_siblings_fromUser(
          [void Function(GSplitWithSiblingsData_siblings_fromUserBuilder)?
              updates]) =>
      (new GSplitWithSiblingsData_siblings_fromUserBuilder()..update(updates))
          ._build();

  _$GSplitWithSiblingsData_siblings_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GSplitWithSiblingsData_siblings_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_siblings_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitWithSiblingsData_siblings_fromUser', 'isSignedUp');
  }

  @override
  GSplitWithSiblingsData_siblings_fromUser rebuild(
          void Function(GSplitWithSiblingsData_siblings_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_siblings_fromUserBuilder toBuilder() =>
      new GSplitWithSiblingsData_siblings_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_siblings_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitWithSiblingsData_siblings_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitWithSiblingsData_siblings_fromUserBuilder
    implements
        Builder<GSplitWithSiblingsData_siblings_fromUser,
            GSplitWithSiblingsData_siblings_fromUserBuilder> {
  _$GSplitWithSiblingsData_siblings_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitWithSiblingsData_siblings_fromUserBuilder() {
    GSplitWithSiblingsData_siblings_fromUser._initializeBuilder(this);
  }

  GSplitWithSiblingsData_siblings_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_siblings_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_siblings_fromUser;
  }

  @override
  void update(
      void Function(GSplitWithSiblingsData_siblings_fromUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_siblings_fromUser build() => _build();

  _$GSplitWithSiblingsData_siblings_fromUser _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_siblings_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitWithSiblingsData_siblings_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitWithSiblingsData_siblings_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitWithSiblingsData_siblings_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_siblings_toUser
    extends GSplitWithSiblingsData_siblings_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GSplitWithSiblingsData_siblings_toUser(
          [void Function(GSplitWithSiblingsData_siblings_toUserBuilder)?
              updates]) =>
      (new GSplitWithSiblingsData_siblings_toUserBuilder()..update(updates))
          ._build();

  _$GSplitWithSiblingsData_siblings_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_siblings_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GSplitWithSiblingsData_siblings_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GSplitWithSiblingsData_siblings_toUser', 'isSignedUp');
  }

  @override
  GSplitWithSiblingsData_siblings_toUser rebuild(
          void Function(GSplitWithSiblingsData_siblings_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_siblings_toUserBuilder toBuilder() =>
      new GSplitWithSiblingsData_siblings_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_siblings_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitWithSiblingsData_siblings_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GSplitWithSiblingsData_siblings_toUserBuilder
    implements
        Builder<GSplitWithSiblingsData_siblings_toUser,
            GSplitWithSiblingsData_siblings_toUserBuilder> {
  _$GSplitWithSiblingsData_siblings_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GSplitWithSiblingsData_siblings_toUserBuilder() {
    GSplitWithSiblingsData_siblings_toUser._initializeBuilder(this);
  }

  GSplitWithSiblingsData_siblings_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_siblings_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_siblings_toUser;
  }

  @override
  void update(
      void Function(GSplitWithSiblingsData_siblings_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_siblings_toUser build() => _build();

  _$GSplitWithSiblingsData_siblings_toUser _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_siblings_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitWithSiblingsData_siblings_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GSplitWithSiblingsData_siblings_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GSplitWithSiblingsData_siblings_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GSplitWithSiblingsData_siblings_amount
    extends GSplitWithSiblingsData_siblings_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GSplitWithSiblingsData_siblings_amount(
          [void Function(GSplitWithSiblingsData_siblings_amountBuilder)?
              updates]) =>
      (new GSplitWithSiblingsData_siblings_amountBuilder()..update(updates))
          ._build();

  _$GSplitWithSiblingsData_siblings_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GSplitWithSiblingsData_siblings_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GSplitWithSiblingsData_siblings_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GSplitWithSiblingsData_siblings_amount', 'currencyId');
  }

  @override
  GSplitWithSiblingsData_siblings_amount rebuild(
          void Function(GSplitWithSiblingsData_siblings_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSplitWithSiblingsData_siblings_amountBuilder toBuilder() =>
      new GSplitWithSiblingsData_siblings_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSplitWithSiblingsData_siblings_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSplitWithSiblingsData_siblings_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GSplitWithSiblingsData_siblings_amountBuilder
    implements
        Builder<GSplitWithSiblingsData_siblings_amount,
            GSplitWithSiblingsData_siblings_amountBuilder> {
  _$GSplitWithSiblingsData_siblings_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GSplitWithSiblingsData_siblings_amountBuilder() {
    GSplitWithSiblingsData_siblings_amount._initializeBuilder(this);
  }

  GSplitWithSiblingsData_siblings_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSplitWithSiblingsData_siblings_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSplitWithSiblingsData_siblings_amount;
  }

  @override
  void update(
      void Function(GSplitWithSiblingsData_siblings_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSplitWithSiblingsData_siblings_amount build() => _build();

  _$GSplitWithSiblingsData_siblings_amount _build() {
    final _$result = _$v ??
        new _$GSplitWithSiblingsData_siblings_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GSplitWithSiblingsData_siblings_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GSplitWithSiblingsData_siblings_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GSplitWithSiblingsData_siblings_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData extends GGroupWithExpensesData {
  @override
  final String G__typename;
  @override
  final GGroupWithExpensesData_creator creator;
  @override
  final BuiltList<GGroupWithExpensesData_members> members;
  @override
  final String createdAt;
  @override
  final String id;
  @override
  final String? name;
  @override
  final BuiltList<GGroupWithExpensesData_expenses> expenses;

  factory _$GGroupWithExpensesData(
          [void Function(GGroupWithExpensesDataBuilder)? updates]) =>
      (new GGroupWithExpensesDataBuilder()..update(updates))._build();

  _$GGroupWithExpensesData._(
      {required this.G__typename,
      required this.creator,
      required this.members,
      required this.createdAt,
      required this.id,
      this.name,
      required this.expenses})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GGroupWithExpensesData', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        members, r'GGroupWithExpensesData', 'members');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GGroupWithExpensesData', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(id, r'GGroupWithExpensesData', 'id');
    BuiltValueNullFieldError.checkNotNull(
        expenses, r'GGroupWithExpensesData', 'expenses');
  }

  @override
  GGroupWithExpensesData rebuild(
          void Function(GGroupWithExpensesDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesDataBuilder toBuilder() =>
      new GGroupWithExpensesDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        members == other.members &&
        createdAt == other.createdAt &&
        id == other.id &&
        name == other.name &&
        expenses == other.expenses;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, members.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, expenses.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupWithExpensesData')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('members', members)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('name', name)
          ..add('expenses', expenses))
        .toString();
  }
}

class GGroupWithExpensesDataBuilder
    implements Builder<GGroupWithExpensesData, GGroupWithExpensesDataBuilder> {
  _$GGroupWithExpensesData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GGroupWithExpensesData_creatorBuilder? _creator;
  GGroupWithExpensesData_creatorBuilder get creator =>
      _$this._creator ??= new GGroupWithExpensesData_creatorBuilder();
  set creator(GGroupWithExpensesData_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GGroupWithExpensesData_members>? _members;
  ListBuilder<GGroupWithExpensesData_members> get members =>
      _$this._members ??= new ListBuilder<GGroupWithExpensesData_members>();
  set members(ListBuilder<GGroupWithExpensesData_members>? members) =>
      _$this._members = members;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  ListBuilder<GGroupWithExpensesData_expenses>? _expenses;
  ListBuilder<GGroupWithExpensesData_expenses> get expenses =>
      _$this._expenses ??= new ListBuilder<GGroupWithExpensesData_expenses>();
  set expenses(ListBuilder<GGroupWithExpensesData_expenses>? expenses) =>
      _$this._expenses = expenses;

  GGroupWithExpensesDataBuilder() {
    GGroupWithExpensesData._initializeBuilder(this);
  }

  GGroupWithExpensesDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _members = $v.members.toBuilder();
      _createdAt = $v.createdAt;
      _id = $v.id;
      _name = $v.name;
      _expenses = $v.expenses.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData;
  }

  @override
  void update(void Function(GGroupWithExpensesDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData build() => _build();

  _$GGroupWithExpensesData _build() {
    _$GGroupWithExpensesData _$result;
    try {
      _$result = _$v ??
          new _$GGroupWithExpensesData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GGroupWithExpensesData', 'G__typename'),
              creator: creator.build(),
              members: members.build(),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GGroupWithExpensesData', 'createdAt'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GGroupWithExpensesData', 'id'),
              name: name,
              expenses: expenses.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'members';
        members.build();

        _$failedField = 'expenses';
        expenses.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupWithExpensesData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_creator extends GGroupWithExpensesData_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_creator(
          [void Function(GGroupWithExpensesData_creatorBuilder)? updates]) =>
      (new GGroupWithExpensesData_creatorBuilder()..update(updates))._build();

  _$GGroupWithExpensesData_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupWithExpensesData_creator', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_creator rebuild(
          void Function(GGroupWithExpensesData_creatorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_creatorBuilder toBuilder() =>
      new GGroupWithExpensesData_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupWithExpensesData_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_creatorBuilder
    implements
        Builder<GGroupWithExpensesData_creator,
            GGroupWithExpensesData_creatorBuilder> {
  _$GGroupWithExpensesData_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_creatorBuilder() {
    GGroupWithExpensesData_creator._initializeBuilder(this);
  }

  GGroupWithExpensesData_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_creator;
  }

  @override
  void update(void Function(GGroupWithExpensesData_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_creator build() => _build();

  _$GGroupWithExpensesData_creator _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename, r'GGroupWithExpensesData_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp, r'GGroupWithExpensesData_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_members extends GGroupWithExpensesData_members {
  @override
  final String G__typename;
  @override
  final BuiltList<GGroupWithExpensesData_members_owedInGroup> owedInGroup;
  @override
  final GGroupWithExpensesData_members_member member;

  factory _$GGroupWithExpensesData_members(
          [void Function(GGroupWithExpensesData_membersBuilder)? updates]) =>
      (new GGroupWithExpensesData_membersBuilder()..update(updates))._build();

  _$GGroupWithExpensesData_members._(
      {required this.G__typename,
      required this.owedInGroup,
      required this.member})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_members', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        owedInGroup, r'GGroupWithExpensesData_members', 'owedInGroup');
    BuiltValueNullFieldError.checkNotNull(
        member, r'GGroupWithExpensesData_members', 'member');
  }

  @override
  GGroupWithExpensesData_members rebuild(
          void Function(GGroupWithExpensesData_membersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_membersBuilder toBuilder() =>
      new GGroupWithExpensesData_membersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_members &&
        G__typename == other.G__typename &&
        owedInGroup == other.owedInGroup &&
        member == other.member;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, owedInGroup.hashCode);
    _$hash = $jc(_$hash, member.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupWithExpensesData_members')
          ..add('G__typename', G__typename)
          ..add('owedInGroup', owedInGroup)
          ..add('member', member))
        .toString();
  }
}

class GGroupWithExpensesData_membersBuilder
    implements
        Builder<GGroupWithExpensesData_members,
            GGroupWithExpensesData_membersBuilder> {
  _$GGroupWithExpensesData_members? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GGroupWithExpensesData_members_owedInGroup>? _owedInGroup;
  ListBuilder<GGroupWithExpensesData_members_owedInGroup> get owedInGroup =>
      _$this._owedInGroup ??=
          new ListBuilder<GGroupWithExpensesData_members_owedInGroup>();
  set owedInGroup(
          ListBuilder<GGroupWithExpensesData_members_owedInGroup>?
              owedInGroup) =>
      _$this._owedInGroup = owedInGroup;

  GGroupWithExpensesData_members_memberBuilder? _member;
  GGroupWithExpensesData_members_memberBuilder get member =>
      _$this._member ??= new GGroupWithExpensesData_members_memberBuilder();
  set member(GGroupWithExpensesData_members_memberBuilder? member) =>
      _$this._member = member;

  GGroupWithExpensesData_membersBuilder() {
    GGroupWithExpensesData_members._initializeBuilder(this);
  }

  GGroupWithExpensesData_membersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _owedInGroup = $v.owedInGroup.toBuilder();
      _member = $v.member.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_members other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_members;
  }

  @override
  void update(void Function(GGroupWithExpensesData_membersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_members build() => _build();

  _$GGroupWithExpensesData_members _build() {
    _$GGroupWithExpensesData_members _$result;
    try {
      _$result = _$v ??
          new _$GGroupWithExpensesData_members._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GGroupWithExpensesData_members', 'G__typename'),
              owedInGroup: owedInGroup.build(),
              member: member.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'owedInGroup';
        owedInGroup.build();
        _$failedField = 'member';
        member.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupWithExpensesData_members', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_members_owedInGroup
    extends GGroupWithExpensesData_members_owedInGroup {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GGroupWithExpensesData_members_owedInGroup(
          [void Function(GGroupWithExpensesData_members_owedInGroupBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_members_owedInGroupBuilder()..update(updates))
          ._build();

  _$GGroupWithExpensesData_members_owedInGroup._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GGroupWithExpensesData_members_owedInGroup', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GGroupWithExpensesData_members_owedInGroup', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GGroupWithExpensesData_members_owedInGroup', 'currencyId');
  }

  @override
  GGroupWithExpensesData_members_owedInGroup rebuild(
          void Function(GGroupWithExpensesData_members_owedInGroupBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_members_owedInGroupBuilder toBuilder() =>
      new GGroupWithExpensesData_members_owedInGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_members_owedInGroup &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_members_owedInGroup')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GGroupWithExpensesData_members_owedInGroupBuilder
    implements
        Builder<GGroupWithExpensesData_members_owedInGroup,
            GGroupWithExpensesData_members_owedInGroupBuilder> {
  _$GGroupWithExpensesData_members_owedInGroup? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GGroupWithExpensesData_members_owedInGroupBuilder() {
    GGroupWithExpensesData_members_owedInGroup._initializeBuilder(this);
  }

  GGroupWithExpensesData_members_owedInGroupBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_members_owedInGroup other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_members_owedInGroup;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_members_owedInGroupBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_members_owedInGroup build() => _build();

  _$GGroupWithExpensesData_members_owedInGroup _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_members_owedInGroup._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GGroupWithExpensesData_members_owedInGroup', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GGroupWithExpensesData_members_owedInGroup', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GGroupWithExpensesData_members_owedInGroup', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_members_member
    extends GGroupWithExpensesData_members_member {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_members_member(
          [void Function(GGroupWithExpensesData_members_memberBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_members_memberBuilder()..update(updates))
          ._build();

  _$GGroupWithExpensesData_members_member._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_members_member', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_members_member', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupWithExpensesData_members_member', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_members_member rebuild(
          void Function(GGroupWithExpensesData_members_memberBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_members_memberBuilder toBuilder() =>
      new GGroupWithExpensesData_members_memberBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_members_member &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_members_member')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_members_memberBuilder
    implements
        Builder<GGroupWithExpensesData_members_member,
            GGroupWithExpensesData_members_memberBuilder> {
  _$GGroupWithExpensesData_members_member? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_members_memberBuilder() {
    GGroupWithExpensesData_members_member._initializeBuilder(this);
  }

  GGroupWithExpensesData_members_memberBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_members_member other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_members_member;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_members_memberBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_members_member build() => _build();

  _$GGroupWithExpensesData_members_member _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_members_member._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GGroupWithExpensesData_members_member', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_members_member', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GGroupWithExpensesData_members_member', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses
    extends GGroupWithExpensesData_expenses {
  @override
  final String G__typename;
  @override
  final GGroupWithExpensesData_expenses_creator creator;
  @override
  final BuiltList<GGroupWithExpensesData_expenses_splits> splits;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GGroupWithExpensesData_expenses_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GGroupWithExpensesData_expenses(
          [void Function(GGroupWithExpensesData_expensesBuilder)? updates]) =>
      (new GGroupWithExpensesData_expensesBuilder()..update(updates))._build();

  _$GGroupWithExpensesData_expenses._(
      {required this.G__typename,
      required this.creator,
      required this.splits,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_expenses', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        creator, r'GGroupWithExpensesData_expenses', 'creator');
    BuiltValueNullFieldError.checkNotNull(
        splits, r'GGroupWithExpensesData_expenses', 'splits');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GGroupWithExpensesData_expenses', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GGroupWithExpensesData_expenses', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GGroupWithExpensesData_expenses', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GGroupWithExpensesData_expenses', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GGroupWithExpensesData_expenses', 'creatorId');
  }

  @override
  GGroupWithExpensesData_expenses rebuild(
          void Function(GGroupWithExpensesData_expensesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expensesBuilder toBuilder() =>
      new GGroupWithExpensesData_expensesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses &&
        G__typename == other.G__typename &&
        creator == other.creator &&
        splits == other.splits &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, splits.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupWithExpensesData_expenses')
          ..add('G__typename', G__typename)
          ..add('creator', creator)
          ..add('splits', splits)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GGroupWithExpensesData_expensesBuilder
    implements
        Builder<GGroupWithExpensesData_expenses,
            GGroupWithExpensesData_expensesBuilder> {
  _$GGroupWithExpensesData_expenses? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GGroupWithExpensesData_expenses_creatorBuilder? _creator;
  GGroupWithExpensesData_expenses_creatorBuilder get creator =>
      _$this._creator ??= new GGroupWithExpensesData_expenses_creatorBuilder();
  set creator(GGroupWithExpensesData_expenses_creatorBuilder? creator) =>
      _$this._creator = creator;

  ListBuilder<GGroupWithExpensesData_expenses_splits>? _splits;
  ListBuilder<GGroupWithExpensesData_expenses_splits> get splits =>
      _$this._splits ??=
          new ListBuilder<GGroupWithExpensesData_expenses_splits>();
  set splits(ListBuilder<GGroupWithExpensesData_expenses_splits>? splits) =>
      _$this._splits = splits;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GGroupWithExpensesData_expenses_amountBuilder? _amount;
  GGroupWithExpensesData_expenses_amountBuilder get amount =>
      _$this._amount ??= new GGroupWithExpensesData_expenses_amountBuilder();
  set amount(GGroupWithExpensesData_expenses_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GGroupWithExpensesData_expensesBuilder() {
    GGroupWithExpensesData_expenses._initializeBuilder(this);
  }

  GGroupWithExpensesData_expensesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _creator = $v.creator.toBuilder();
      _splits = $v.splits.toBuilder();
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses;
  }

  @override
  void update(void Function(GGroupWithExpensesData_expensesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses build() => _build();

  _$GGroupWithExpensesData_expenses _build() {
    _$GGroupWithExpensesData_expenses _$result;
    try {
      _$result = _$v ??
          new _$GGroupWithExpensesData_expenses._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GGroupWithExpensesData_expenses', 'G__typename'),
              creator: creator.build(),
              splits: splits.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GGroupWithExpensesData_expenses', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GGroupWithExpensesData_expenses', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GGroupWithExpensesData_expenses', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GGroupWithExpensesData_expenses', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GGroupWithExpensesData_expenses', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'creator';
        creator.build();
        _$failedField = 'splits';
        splits.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupWithExpensesData_expenses', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_creator
    extends GGroupWithExpensesData_expenses_creator {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_expenses_creator(
          [void Function(GGroupWithExpensesData_expenses_creatorBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_creatorBuilder()..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_creator._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_expenses_creator', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses_creator', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GGroupWithExpensesData_expenses_creator', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_expenses_creator rebuild(
          void Function(GGroupWithExpensesData_expenses_creatorBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_creatorBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_creator &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_creator')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_creatorBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_creator,
            GGroupWithExpensesData_expenses_creatorBuilder> {
  _$GGroupWithExpensesData_expenses_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_expenses_creatorBuilder() {
    GGroupWithExpensesData_expenses_creator._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_creator other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_creator;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_creatorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_creator build() => _build();

  _$GGroupWithExpensesData_expenses_creator _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_expenses_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GGroupWithExpensesData_expenses_creator', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_expenses_creator', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GGroupWithExpensesData_expenses_creator', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_splits
    extends GGroupWithExpensesData_expenses_splits {
  @override
  final String G__typename;
  @override
  final GGroupWithExpensesData_expenses_splits_fromUser fromUser;
  @override
  final GGroupWithExpensesData_expenses_splits_toUser toUser;
  @override
  final String id;
  @override
  final GGroupWithExpensesData_expenses_splits_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GGroupWithExpensesData_expenses_splits(
          [void Function(GGroupWithExpensesData_expenses_splitsBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_splitsBuilder()..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_splits._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_expenses_splits', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GGroupWithExpensesData_expenses_splits', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GGroupWithExpensesData_expenses_splits', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses_splits', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GGroupWithExpensesData_expenses_splits', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GGroupWithExpensesData_expenses_splits', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GGroupWithExpensesData_expenses_splits', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GGroupWithExpensesData_expenses_splits', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GGroupWithExpensesData_expenses_splits', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GGroupWithExpensesData_expenses_splits', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GGroupWithExpensesData_expenses_splits', 'groupId');
  }

  @override
  GGroupWithExpensesData_expenses_splits rebuild(
          void Function(GGroupWithExpensesData_expenses_splitsBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_splitsBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_splitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_splits &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_splits')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_splitsBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_splits,
            GGroupWithExpensesData_expenses_splitsBuilder> {
  _$GGroupWithExpensesData_expenses_splits? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GGroupWithExpensesData_expenses_splits_fromUserBuilder? _fromUser;
  GGroupWithExpensesData_expenses_splits_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GGroupWithExpensesData_expenses_splits_fromUserBuilder();
  set fromUser(
          GGroupWithExpensesData_expenses_splits_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GGroupWithExpensesData_expenses_splits_toUserBuilder? _toUser;
  GGroupWithExpensesData_expenses_splits_toUserBuilder get toUser =>
      _$this._toUser ??=
          new GGroupWithExpensesData_expenses_splits_toUserBuilder();
  set toUser(GGroupWithExpensesData_expenses_splits_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GGroupWithExpensesData_expenses_splits_amountBuilder? _amount;
  GGroupWithExpensesData_expenses_splits_amountBuilder get amount =>
      _$this._amount ??=
          new GGroupWithExpensesData_expenses_splits_amountBuilder();
  set amount(GGroupWithExpensesData_expenses_splits_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GGroupWithExpensesData_expenses_splitsBuilder() {
    GGroupWithExpensesData_expenses_splits._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_splitsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_splits other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_splits;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_splitsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_splits build() => _build();

  _$GGroupWithExpensesData_expenses_splits _build() {
    _$GGroupWithExpensesData_expenses_splits _$result;
    try {
      _$result = _$v ??
          new _$GGroupWithExpensesData_expenses_splits._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GGroupWithExpensesData_expenses_splits', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GGroupWithExpensesData_expenses_splits', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GGroupWithExpensesData_expenses_splits', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GGroupWithExpensesData_expenses_splits', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GGroupWithExpensesData_expenses_splits', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GGroupWithExpensesData_expenses_splits', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GGroupWithExpensesData_expenses_splits', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GGroupWithExpensesData_expenses_splits', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGroupWithExpensesData_expenses_splits',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_splits_fromUser
    extends GGroupWithExpensesData_expenses_splits_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_expenses_splits_fromUser(
          [void Function(
                  GGroupWithExpensesData_expenses_splits_fromUserBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_splits_fromUserBuilder()
            ..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_splits_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GGroupWithExpensesData_expenses_splits_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses_splits_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GGroupWithExpensesData_expenses_splits_fromUser', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_expenses_splits_fromUser rebuild(
          void Function(GGroupWithExpensesData_expenses_splits_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_splits_fromUserBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_splits_fromUserBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_splits_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_splits_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_splits_fromUserBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_splits_fromUser,
            GGroupWithExpensesData_expenses_splits_fromUserBuilder> {
  _$GGroupWithExpensesData_expenses_splits_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_expenses_splits_fromUserBuilder() {
    GGroupWithExpensesData_expenses_splits_fromUser._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_splits_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_splits_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_splits_fromUser;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_splits_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_splits_fromUser build() => _build();

  _$GGroupWithExpensesData_expenses_splits_fromUser _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_expenses_splits_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GGroupWithExpensesData_expenses_splits_fromUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_expenses_splits_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GGroupWithExpensesData_expenses_splits_fromUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_splits_toUser
    extends GGroupWithExpensesData_expenses_splits_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GGroupWithExpensesData_expenses_splits_toUser(
          [void Function(GGroupWithExpensesData_expenses_splits_toUserBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_splits_toUserBuilder()
            ..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_splits_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GGroupWithExpensesData_expenses_splits_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GGroupWithExpensesData_expenses_splits_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(isSignedUp,
        r'GGroupWithExpensesData_expenses_splits_toUser', 'isSignedUp');
  }

  @override
  GGroupWithExpensesData_expenses_splits_toUser rebuild(
          void Function(GGroupWithExpensesData_expenses_splits_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_splits_toUserBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_splits_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_splits_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_splits_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_splits_toUserBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_splits_toUser,
            GGroupWithExpensesData_expenses_splits_toUserBuilder> {
  _$GGroupWithExpensesData_expenses_splits_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GGroupWithExpensesData_expenses_splits_toUserBuilder() {
    GGroupWithExpensesData_expenses_splits_toUser._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_splits_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_splits_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_splits_toUser;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_splits_toUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_splits_toUser build() => _build();

  _$GGroupWithExpensesData_expenses_splits_toUser _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_expenses_splits_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GGroupWithExpensesData_expenses_splits_toUser',
                'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGroupWithExpensesData_expenses_splits_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(
                isSignedUp,
                r'GGroupWithExpensesData_expenses_splits_toUser',
                'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_splits_amount
    extends GGroupWithExpensesData_expenses_splits_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GGroupWithExpensesData_expenses_splits_amount(
          [void Function(GGroupWithExpensesData_expenses_splits_amountBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_splits_amountBuilder()
            ..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_splits_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GGroupWithExpensesData_expenses_splits_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GGroupWithExpensesData_expenses_splits_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(currencyId,
        r'GGroupWithExpensesData_expenses_splits_amount', 'currencyId');
  }

  @override
  GGroupWithExpensesData_expenses_splits_amount rebuild(
          void Function(GGroupWithExpensesData_expenses_splits_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_splits_amountBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_splits_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_splits_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_splits_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_splits_amountBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_splits_amount,
            GGroupWithExpensesData_expenses_splits_amountBuilder> {
  _$GGroupWithExpensesData_expenses_splits_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GGroupWithExpensesData_expenses_splits_amountBuilder() {
    GGroupWithExpensesData_expenses_splits_amount._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_splits_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_splits_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_splits_amount;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_splits_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_splits_amount build() => _build();

  _$GGroupWithExpensesData_expenses_splits_amount _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_expenses_splits_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
                G__typename,
                r'GGroupWithExpensesData_expenses_splits_amount',
                'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(amount,
                r'GGroupWithExpensesData_expenses_splits_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(
                currencyId,
                r'GGroupWithExpensesData_expenses_splits_amount',
                'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupWithExpensesData_expenses_amount
    extends GGroupWithExpensesData_expenses_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GGroupWithExpensesData_expenses_amount(
          [void Function(GGroupWithExpensesData_expenses_amountBuilder)?
              updates]) =>
      (new GGroupWithExpensesData_expenses_amountBuilder()..update(updates))
          ._build();

  _$GGroupWithExpensesData_expenses_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GGroupWithExpensesData_expenses_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GGroupWithExpensesData_expenses_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GGroupWithExpensesData_expenses_amount', 'currencyId');
  }

  @override
  GGroupWithExpensesData_expenses_amount rebuild(
          void Function(GGroupWithExpensesData_expenses_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupWithExpensesData_expenses_amountBuilder toBuilder() =>
      new GGroupWithExpensesData_expenses_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupWithExpensesData_expenses_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGroupWithExpensesData_expenses_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GGroupWithExpensesData_expenses_amountBuilder
    implements
        Builder<GGroupWithExpensesData_expenses_amount,
            GGroupWithExpensesData_expenses_amountBuilder> {
  _$GGroupWithExpensesData_expenses_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GGroupWithExpensesData_expenses_amountBuilder() {
    GGroupWithExpensesData_expenses_amount._initializeBuilder(this);
  }

  GGroupWithExpensesData_expenses_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupWithExpensesData_expenses_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupWithExpensesData_expenses_amount;
  }

  @override
  void update(
      void Function(GGroupWithExpensesData_expenses_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupWithExpensesData_expenses_amount build() => _build();

  _$GGroupWithExpensesData_expenses_amount _build() {
    final _$result = _$v ??
        new _$GGroupWithExpensesData_expenses_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GGroupWithExpensesData_expenses_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GGroupWithExpensesData_expenses_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GGroupWithExpensesData_expenses_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData extends GExpenseMixSplitFieldsData {
  @override
  final String G__typename;
  @override
  final GExpenseMixSplitFieldsData_expense? expense;
  @override
  final GExpenseMixSplitFieldsData_split? split;

  factory _$GExpenseMixSplitFieldsData(
          [void Function(GExpenseMixSplitFieldsDataBuilder)? updates]) =>
      (new GExpenseMixSplitFieldsDataBuilder()..update(updates))._build();

  _$GExpenseMixSplitFieldsData._(
      {required this.G__typename, this.expense, this.split})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData', 'G__typename');
  }

  @override
  GExpenseMixSplitFieldsData rebuild(
          void Function(GExpenseMixSplitFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsDataBuilder toBuilder() =>
      new GExpenseMixSplitFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData &&
        G__typename == other.G__typename &&
        expense == other.expense &&
        split == other.split;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, expense.hashCode);
    _$hash = $jc(_$hash, split.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseMixSplitFieldsData')
          ..add('G__typename', G__typename)
          ..add('expense', expense)
          ..add('split', split))
        .toString();
  }
}

class GExpenseMixSplitFieldsDataBuilder
    implements
        Builder<GExpenseMixSplitFieldsData, GExpenseMixSplitFieldsDataBuilder> {
  _$GExpenseMixSplitFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GExpenseMixSplitFieldsData_expenseBuilder? _expense;
  GExpenseMixSplitFieldsData_expenseBuilder get expense =>
      _$this._expense ??= new GExpenseMixSplitFieldsData_expenseBuilder();
  set expense(GExpenseMixSplitFieldsData_expenseBuilder? expense) =>
      _$this._expense = expense;

  GExpenseMixSplitFieldsData_splitBuilder? _split;
  GExpenseMixSplitFieldsData_splitBuilder get split =>
      _$this._split ??= new GExpenseMixSplitFieldsData_splitBuilder();
  set split(GExpenseMixSplitFieldsData_splitBuilder? split) =>
      _$this._split = split;

  GExpenseMixSplitFieldsDataBuilder() {
    GExpenseMixSplitFieldsData._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _expense = $v.expense?.toBuilder();
      _split = $v.split?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData;
  }

  @override
  void update(void Function(GExpenseMixSplitFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData build() => _build();

  _$GExpenseMixSplitFieldsData _build() {
    _$GExpenseMixSplitFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GExpenseMixSplitFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseMixSplitFieldsData', 'G__typename'),
              expense: _expense?.build(),
              split: _split?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expense';
        _expense?.build();
        _$failedField = 'split';
        _split?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseMixSplitFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_expense
    extends GExpenseMixSplitFieldsData_expense {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String title;
  @override
  final String createdAt;
  @override
  final String category;
  @override
  final GExpenseMixSplitFieldsData_expense_amount amount;
  @override
  final String creatorId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GExpenseMixSplitFieldsData_expense(
          [void Function(GExpenseMixSplitFieldsData_expenseBuilder)?
              updates]) =>
      (new GExpenseMixSplitFieldsData_expenseBuilder()..update(updates))
          ._build();

  _$GExpenseMixSplitFieldsData_expense._(
      {required this.G__typename,
      required this.id,
      required this.title,
      required this.createdAt,
      required this.category,
      required this.amount,
      required this.creatorId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData_expense', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseMixSplitFieldsData_expense', 'id');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GExpenseMixSplitFieldsData_expense', 'title');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseMixSplitFieldsData_expense', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GExpenseMixSplitFieldsData_expense', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseMixSplitFieldsData_expense', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseMixSplitFieldsData_expense', 'creatorId');
  }

  @override
  GExpenseMixSplitFieldsData_expense rebuild(
          void Function(GExpenseMixSplitFieldsData_expenseBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_expenseBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_expenseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_expense &&
        G__typename == other.G__typename &&
        id == other.id &&
        title == other.title &&
        createdAt == other.createdAt &&
        category == other.category &&
        amount == other.amount &&
        creatorId == other.creatorId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseMixSplitFieldsData_expense')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('title', title)
          ..add('createdAt', createdAt)
          ..add('category', category)
          ..add('amount', amount)
          ..add('creatorId', creatorId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_expenseBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_expense,
            GExpenseMixSplitFieldsData_expenseBuilder> {
  _$GExpenseMixSplitFieldsData_expense? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GExpenseMixSplitFieldsData_expense_amountBuilder? _amount;
  GExpenseMixSplitFieldsData_expense_amountBuilder get amount =>
      _$this._amount ??= new GExpenseMixSplitFieldsData_expense_amountBuilder();
  set amount(GExpenseMixSplitFieldsData_expense_amountBuilder? amount) =>
      _$this._amount = amount;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GExpenseMixSplitFieldsData_expenseBuilder() {
    GExpenseMixSplitFieldsData_expense._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_expenseBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _title = $v.title;
      _createdAt = $v.createdAt;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _creatorId = $v.creatorId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_expense other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_expense;
  }

  @override
  void update(
      void Function(GExpenseMixSplitFieldsData_expenseBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_expense build() => _build();

  _$GExpenseMixSplitFieldsData_expense _build() {
    _$GExpenseMixSplitFieldsData_expense _$result;
    try {
      _$result = _$v ??
          new _$GExpenseMixSplitFieldsData_expense._(
              G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                  r'GExpenseMixSplitFieldsData_expense', 'G__typename'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GExpenseMixSplitFieldsData_expense', 'id'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GExpenseMixSplitFieldsData_expense', 'title'),
              createdAt: BuiltValueNullFieldError.checkNotNull(createdAt,
                  r'GExpenseMixSplitFieldsData_expense', 'createdAt'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GExpenseMixSplitFieldsData_expense', 'category'),
              amount: amount.build(),
              creatorId: BuiltValueNullFieldError.checkNotNull(creatorId,
                  r'GExpenseMixSplitFieldsData_expense', 'creatorId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseMixSplitFieldsData_expense', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_expense_amount
    extends GExpenseMixSplitFieldsData_expense_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GExpenseMixSplitFieldsData_expense_amount(
          [void Function(GExpenseMixSplitFieldsData_expense_amountBuilder)?
              updates]) =>
      (new GExpenseMixSplitFieldsData_expense_amountBuilder()..update(updates))
          ._build();

  _$GExpenseMixSplitFieldsData_expense_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GExpenseMixSplitFieldsData_expense_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseMixSplitFieldsData_expense_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GExpenseMixSplitFieldsData_expense_amount', 'currencyId');
  }

  @override
  GExpenseMixSplitFieldsData_expense_amount rebuild(
          void Function(GExpenseMixSplitFieldsData_expense_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_expense_amountBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_expense_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_expense_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExpenseMixSplitFieldsData_expense_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_expense_amountBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_expense_amount,
            GExpenseMixSplitFieldsData_expense_amountBuilder> {
  _$GExpenseMixSplitFieldsData_expense_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GExpenseMixSplitFieldsData_expense_amountBuilder() {
    GExpenseMixSplitFieldsData_expense_amount._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_expense_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_expense_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_expense_amount;
  }

  @override
  void update(
      void Function(GExpenseMixSplitFieldsData_expense_amountBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_expense_amount build() => _build();

  _$GExpenseMixSplitFieldsData_expense_amount _build() {
    final _$result = _$v ??
        new _$GExpenseMixSplitFieldsData_expense_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseMixSplitFieldsData_expense_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GExpenseMixSplitFieldsData_expense_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GExpenseMixSplitFieldsData_expense_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_split
    extends GExpenseMixSplitFieldsData_split {
  @override
  final String G__typename;
  @override
  final GExpenseMixSplitFieldsData_split_fromUser fromUser;
  @override
  final GExpenseMixSplitFieldsData_split_toUser toUser;
  @override
  final String id;
  @override
  final GExpenseMixSplitFieldsData_split_amount amount;
  @override
  final _i3.GTransactionType transactionType;
  @override
  final String createdAt;
  @override
  final String? transactionPartGroupId;
  @override
  final String fromUserId;
  @override
  final String toUserId;
  @override
  final String creatorId;
  @override
  final String? withGroupId;
  @override
  final String groupId;
  @override
  final String? note;
  @override
  final String? imageId;

  factory _$GExpenseMixSplitFieldsData_split(
          [void Function(GExpenseMixSplitFieldsData_splitBuilder)? updates]) =>
      (new GExpenseMixSplitFieldsData_splitBuilder()..update(updates))._build();

  _$GExpenseMixSplitFieldsData_split._(
      {required this.G__typename,
      required this.fromUser,
      required this.toUser,
      required this.id,
      required this.amount,
      required this.transactionType,
      required this.createdAt,
      this.transactionPartGroupId,
      required this.fromUserId,
      required this.toUserId,
      required this.creatorId,
      this.withGroupId,
      required this.groupId,
      this.note,
      this.imageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData_split', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        fromUser, r'GExpenseMixSplitFieldsData_split', 'fromUser');
    BuiltValueNullFieldError.checkNotNull(
        toUser, r'GExpenseMixSplitFieldsData_split', 'toUser');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseMixSplitFieldsData_split', 'id');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseMixSplitFieldsData_split', 'amount');
    BuiltValueNullFieldError.checkNotNull(transactionType,
        r'GExpenseMixSplitFieldsData_split', 'transactionType');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GExpenseMixSplitFieldsData_split', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        fromUserId, r'GExpenseMixSplitFieldsData_split', 'fromUserId');
    BuiltValueNullFieldError.checkNotNull(
        toUserId, r'GExpenseMixSplitFieldsData_split', 'toUserId');
    BuiltValueNullFieldError.checkNotNull(
        creatorId, r'GExpenseMixSplitFieldsData_split', 'creatorId');
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GExpenseMixSplitFieldsData_split', 'groupId');
  }

  @override
  GExpenseMixSplitFieldsData_split rebuild(
          void Function(GExpenseMixSplitFieldsData_splitBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_splitBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_splitBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_split &&
        G__typename == other.G__typename &&
        fromUser == other.fromUser &&
        toUser == other.toUser &&
        id == other.id &&
        amount == other.amount &&
        transactionType == other.transactionType &&
        createdAt == other.createdAt &&
        transactionPartGroupId == other.transactionPartGroupId &&
        fromUserId == other.fromUserId &&
        toUserId == other.toUserId &&
        creatorId == other.creatorId &&
        withGroupId == other.withGroupId &&
        groupId == other.groupId &&
        note == other.note &&
        imageId == other.imageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, fromUser.hashCode);
    _$hash = $jc(_$hash, toUser.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, transactionType.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, transactionPartGroupId.hashCode);
    _$hash = $jc(_$hash, fromUserId.hashCode);
    _$hash = $jc(_$hash, toUserId.hashCode);
    _$hash = $jc(_$hash, creatorId.hashCode);
    _$hash = $jc(_$hash, withGroupId.hashCode);
    _$hash = $jc(_$hash, groupId.hashCode);
    _$hash = $jc(_$hash, note.hashCode);
    _$hash = $jc(_$hash, imageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExpenseMixSplitFieldsData_split')
          ..add('G__typename', G__typename)
          ..add('fromUser', fromUser)
          ..add('toUser', toUser)
          ..add('id', id)
          ..add('amount', amount)
          ..add('transactionType', transactionType)
          ..add('createdAt', createdAt)
          ..add('transactionPartGroupId', transactionPartGroupId)
          ..add('fromUserId', fromUserId)
          ..add('toUserId', toUserId)
          ..add('creatorId', creatorId)
          ..add('withGroupId', withGroupId)
          ..add('groupId', groupId)
          ..add('note', note)
          ..add('imageId', imageId))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_splitBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_split,
            GExpenseMixSplitFieldsData_splitBuilder> {
  _$GExpenseMixSplitFieldsData_split? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GExpenseMixSplitFieldsData_split_fromUserBuilder? _fromUser;
  GExpenseMixSplitFieldsData_split_fromUserBuilder get fromUser =>
      _$this._fromUser ??=
          new GExpenseMixSplitFieldsData_split_fromUserBuilder();
  set fromUser(GExpenseMixSplitFieldsData_split_fromUserBuilder? fromUser) =>
      _$this._fromUser = fromUser;

  GExpenseMixSplitFieldsData_split_toUserBuilder? _toUser;
  GExpenseMixSplitFieldsData_split_toUserBuilder get toUser =>
      _$this._toUser ??= new GExpenseMixSplitFieldsData_split_toUserBuilder();
  set toUser(GExpenseMixSplitFieldsData_split_toUserBuilder? toUser) =>
      _$this._toUser = toUser;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GExpenseMixSplitFieldsData_split_amountBuilder? _amount;
  GExpenseMixSplitFieldsData_split_amountBuilder get amount =>
      _$this._amount ??= new GExpenseMixSplitFieldsData_split_amountBuilder();
  set amount(GExpenseMixSplitFieldsData_split_amountBuilder? amount) =>
      _$this._amount = amount;

  _i3.GTransactionType? _transactionType;
  _i3.GTransactionType? get transactionType => _$this._transactionType;
  set transactionType(_i3.GTransactionType? transactionType) =>
      _$this._transactionType = transactionType;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _transactionPartGroupId;
  String? get transactionPartGroupId => _$this._transactionPartGroupId;
  set transactionPartGroupId(String? transactionPartGroupId) =>
      _$this._transactionPartGroupId = transactionPartGroupId;

  String? _fromUserId;
  String? get fromUserId => _$this._fromUserId;
  set fromUserId(String? fromUserId) => _$this._fromUserId = fromUserId;

  String? _toUserId;
  String? get toUserId => _$this._toUserId;
  set toUserId(String? toUserId) => _$this._toUserId = toUserId;

  String? _creatorId;
  String? get creatorId => _$this._creatorId;
  set creatorId(String? creatorId) => _$this._creatorId = creatorId;

  String? _withGroupId;
  String? get withGroupId => _$this._withGroupId;
  set withGroupId(String? withGroupId) => _$this._withGroupId = withGroupId;

  String? _groupId;
  String? get groupId => _$this._groupId;
  set groupId(String? groupId) => _$this._groupId = groupId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  String? _imageId;
  String? get imageId => _$this._imageId;
  set imageId(String? imageId) => _$this._imageId = imageId;

  GExpenseMixSplitFieldsData_splitBuilder() {
    GExpenseMixSplitFieldsData_split._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_splitBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _fromUser = $v.fromUser.toBuilder();
      _toUser = $v.toUser.toBuilder();
      _id = $v.id;
      _amount = $v.amount.toBuilder();
      _transactionType = $v.transactionType;
      _createdAt = $v.createdAt;
      _transactionPartGroupId = $v.transactionPartGroupId;
      _fromUserId = $v.fromUserId;
      _toUserId = $v.toUserId;
      _creatorId = $v.creatorId;
      _withGroupId = $v.withGroupId;
      _groupId = $v.groupId;
      _note = $v.note;
      _imageId = $v.imageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_split other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_split;
  }

  @override
  void update(void Function(GExpenseMixSplitFieldsData_splitBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_split build() => _build();

  _$GExpenseMixSplitFieldsData_split _build() {
    _$GExpenseMixSplitFieldsData_split _$result;
    try {
      _$result = _$v ??
          new _$GExpenseMixSplitFieldsData_split._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GExpenseMixSplitFieldsData_split', 'G__typename'),
              fromUser: fromUser.build(),
              toUser: toUser.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GExpenseMixSplitFieldsData_split', 'id'),
              amount: amount.build(),
              transactionType: BuiltValueNullFieldError.checkNotNull(
                  transactionType, r'GExpenseMixSplitFieldsData_split', 'transactionType'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GExpenseMixSplitFieldsData_split', 'createdAt'),
              transactionPartGroupId: transactionPartGroupId,
              fromUserId: BuiltValueNullFieldError.checkNotNull(
                  fromUserId, r'GExpenseMixSplitFieldsData_split', 'fromUserId'),
              toUserId: BuiltValueNullFieldError.checkNotNull(
                  toUserId, r'GExpenseMixSplitFieldsData_split', 'toUserId'),
              creatorId: BuiltValueNullFieldError.checkNotNull(
                  creatorId, r'GExpenseMixSplitFieldsData_split', 'creatorId'),
              withGroupId: withGroupId,
              groupId: BuiltValueNullFieldError.checkNotNull(groupId, r'GExpenseMixSplitFieldsData_split', 'groupId'),
              note: note,
              imageId: imageId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'fromUser';
        fromUser.build();
        _$failedField = 'toUser';
        toUser.build();

        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExpenseMixSplitFieldsData_split', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_split_fromUser
    extends GExpenseMixSplitFieldsData_split_fromUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseMixSplitFieldsData_split_fromUser(
          [void Function(GExpenseMixSplitFieldsData_split_fromUserBuilder)?
              updates]) =>
      (new GExpenseMixSplitFieldsData_split_fromUserBuilder()..update(updates))
          ._build();

  _$GExpenseMixSplitFieldsData_split_fromUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(G__typename,
        r'GExpenseMixSplitFieldsData_split_fromUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseMixSplitFieldsData_split_fromUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseMixSplitFieldsData_split_fromUser', 'isSignedUp');
  }

  @override
  GExpenseMixSplitFieldsData_split_fromUser rebuild(
          void Function(GExpenseMixSplitFieldsData_split_fromUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_split_fromUserBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_split_fromUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_split_fromUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExpenseMixSplitFieldsData_split_fromUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_split_fromUserBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_split_fromUser,
            GExpenseMixSplitFieldsData_split_fromUserBuilder> {
  _$GExpenseMixSplitFieldsData_split_fromUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseMixSplitFieldsData_split_fromUserBuilder() {
    GExpenseMixSplitFieldsData_split_fromUser._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_split_fromUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_split_fromUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_split_fromUser;
  }

  @override
  void update(
      void Function(GExpenseMixSplitFieldsData_split_fromUserBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_split_fromUser build() => _build();

  _$GExpenseMixSplitFieldsData_split_fromUser _build() {
    final _$result = _$v ??
        new _$GExpenseMixSplitFieldsData_split_fromUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseMixSplitFieldsData_split_fromUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseMixSplitFieldsData_split_fromUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GExpenseMixSplitFieldsData_split_fromUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_split_toUser
    extends GExpenseMixSplitFieldsData_split_toUser {
  @override
  final String G__typename;
  @override
  final String id;
  @override
  final String? name;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final bool isSignedUp;

  factory _$GExpenseMixSplitFieldsData_split_toUser(
          [void Function(GExpenseMixSplitFieldsData_split_toUserBuilder)?
              updates]) =>
      (new GExpenseMixSplitFieldsData_split_toUserBuilder()..update(updates))
          ._build();

  _$GExpenseMixSplitFieldsData_split_toUser._(
      {required this.G__typename,
      required this.id,
      this.name,
      this.phone,
      this.email,
      required this.isSignedUp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData_split_toUser', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExpenseMixSplitFieldsData_split_toUser', 'id');
    BuiltValueNullFieldError.checkNotNull(
        isSignedUp, r'GExpenseMixSplitFieldsData_split_toUser', 'isSignedUp');
  }

  @override
  GExpenseMixSplitFieldsData_split_toUser rebuild(
          void Function(GExpenseMixSplitFieldsData_split_toUserBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_split_toUserBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_split_toUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_split_toUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        phone == other.phone &&
        email == other.email &&
        isSignedUp == other.isSignedUp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, phone.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, isSignedUp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExpenseMixSplitFieldsData_split_toUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('phone', phone)
          ..add('email', email)
          ..add('isSignedUp', isSignedUp))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_split_toUserBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_split_toUser,
            GExpenseMixSplitFieldsData_split_toUserBuilder> {
  _$GExpenseMixSplitFieldsData_split_toUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isSignedUp;
  bool? get isSignedUp => _$this._isSignedUp;
  set isSignedUp(bool? isSignedUp) => _$this._isSignedUp = isSignedUp;

  GExpenseMixSplitFieldsData_split_toUserBuilder() {
    GExpenseMixSplitFieldsData_split_toUser._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_split_toUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _phone = $v.phone;
      _email = $v.email;
      _isSignedUp = $v.isSignedUp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_split_toUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_split_toUser;
  }

  @override
  void update(
      void Function(GExpenseMixSplitFieldsData_split_toUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_split_toUser build() => _build();

  _$GExpenseMixSplitFieldsData_split_toUser _build() {
    final _$result = _$v ??
        new _$GExpenseMixSplitFieldsData_split_toUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseMixSplitFieldsData_split_toUser', 'G__typename'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GExpenseMixSplitFieldsData_split_toUser', 'id'),
            name: name,
            phone: phone,
            email: email,
            isSignedUp: BuiltValueNullFieldError.checkNotNull(isSignedUp,
                r'GExpenseMixSplitFieldsData_split_toUser', 'isSignedUp'));
    replace(_$result);
    return _$result;
  }
}

class _$GExpenseMixSplitFieldsData_split_amount
    extends GExpenseMixSplitFieldsData_split_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GExpenseMixSplitFieldsData_split_amount(
          [void Function(GExpenseMixSplitFieldsData_split_amountBuilder)?
              updates]) =>
      (new GExpenseMixSplitFieldsData_split_amountBuilder()..update(updates))
          ._build();

  _$GExpenseMixSplitFieldsData_split_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GExpenseMixSplitFieldsData_split_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GExpenseMixSplitFieldsData_split_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GExpenseMixSplitFieldsData_split_amount', 'currencyId');
  }

  @override
  GExpenseMixSplitFieldsData_split_amount rebuild(
          void Function(GExpenseMixSplitFieldsData_split_amountBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExpenseMixSplitFieldsData_split_amountBuilder toBuilder() =>
      new GExpenseMixSplitFieldsData_split_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExpenseMixSplitFieldsData_split_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExpenseMixSplitFieldsData_split_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GExpenseMixSplitFieldsData_split_amountBuilder
    implements
        Builder<GExpenseMixSplitFieldsData_split_amount,
            GExpenseMixSplitFieldsData_split_amountBuilder> {
  _$GExpenseMixSplitFieldsData_split_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GExpenseMixSplitFieldsData_split_amountBuilder() {
    GExpenseMixSplitFieldsData_split_amount._initializeBuilder(this);
  }

  GExpenseMixSplitFieldsData_split_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExpenseMixSplitFieldsData_split_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExpenseMixSplitFieldsData_split_amount;
  }

  @override
  void update(
      void Function(GExpenseMixSplitFieldsData_split_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExpenseMixSplitFieldsData_split_amount build() => _build();

  _$GExpenseMixSplitFieldsData_split_amount _build() {
    final _$result = _$v ??
        new _$GExpenseMixSplitFieldsData_split_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GExpenseMixSplitFieldsData_split_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GExpenseMixSplitFieldsData_split_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GExpenseMixSplitFieldsData_split_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

class _$GCategorisedAmountFieldsData extends GCategorisedAmountFieldsData {
  @override
  final String G__typename;
  @override
  final String category;
  @override
  final GCategorisedAmountFieldsData_amount amount;

  factory _$GCategorisedAmountFieldsData(
          [void Function(GCategorisedAmountFieldsDataBuilder)? updates]) =>
      (new GCategorisedAmountFieldsDataBuilder()..update(updates))._build();

  _$GCategorisedAmountFieldsData._(
      {required this.G__typename, required this.category, required this.amount})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GCategorisedAmountFieldsData', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GCategorisedAmountFieldsData', 'category');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GCategorisedAmountFieldsData', 'amount');
  }

  @override
  GCategorisedAmountFieldsData rebuild(
          void Function(GCategorisedAmountFieldsDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCategorisedAmountFieldsDataBuilder toBuilder() =>
      new GCategorisedAmountFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCategorisedAmountFieldsData &&
        G__typename == other.G__typename &&
        category == other.category &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCategorisedAmountFieldsData')
          ..add('G__typename', G__typename)
          ..add('category', category)
          ..add('amount', amount))
        .toString();
  }
}

class GCategorisedAmountFieldsDataBuilder
    implements
        Builder<GCategorisedAmountFieldsData,
            GCategorisedAmountFieldsDataBuilder> {
  _$GCategorisedAmountFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  GCategorisedAmountFieldsData_amountBuilder? _amount;
  GCategorisedAmountFieldsData_amountBuilder get amount =>
      _$this._amount ??= new GCategorisedAmountFieldsData_amountBuilder();
  set amount(GCategorisedAmountFieldsData_amountBuilder? amount) =>
      _$this._amount = amount;

  GCategorisedAmountFieldsDataBuilder() {
    GCategorisedAmountFieldsData._initializeBuilder(this);
  }

  GCategorisedAmountFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _category = $v.category;
      _amount = $v.amount.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCategorisedAmountFieldsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCategorisedAmountFieldsData;
  }

  @override
  void update(void Function(GCategorisedAmountFieldsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCategorisedAmountFieldsData build() => _build();

  _$GCategorisedAmountFieldsData _build() {
    _$GCategorisedAmountFieldsData _$result;
    try {
      _$result = _$v ??
          new _$GCategorisedAmountFieldsData._(
              G__typename: BuiltValueNullFieldError.checkNotNull(
                  G__typename, r'GCategorisedAmountFieldsData', 'G__typename'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GCategorisedAmountFieldsData', 'category'),
              amount: amount.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCategorisedAmountFieldsData', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCategorisedAmountFieldsData_amount
    extends GCategorisedAmountFieldsData_amount {
  @override
  final String G__typename;
  @override
  final int amount;
  @override
  final String currencyId;

  factory _$GCategorisedAmountFieldsData_amount(
          [void Function(GCategorisedAmountFieldsData_amountBuilder)?
              updates]) =>
      (new GCategorisedAmountFieldsData_amountBuilder()..update(updates))
          ._build();

  _$GCategorisedAmountFieldsData_amount._(
      {required this.G__typename,
      required this.amount,
      required this.currencyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        G__typename, r'GCategorisedAmountFieldsData_amount', 'G__typename');
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GCategorisedAmountFieldsData_amount', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        currencyId, r'GCategorisedAmountFieldsData_amount', 'currencyId');
  }

  @override
  GCategorisedAmountFieldsData_amount rebuild(
          void Function(GCategorisedAmountFieldsData_amountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCategorisedAmountFieldsData_amountBuilder toBuilder() =>
      new GCategorisedAmountFieldsData_amountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCategorisedAmountFieldsData_amount &&
        G__typename == other.G__typename &&
        amount == other.amount &&
        currencyId == other.currencyId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, amount.hashCode);
    _$hash = $jc(_$hash, currencyId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCategorisedAmountFieldsData_amount')
          ..add('G__typename', G__typename)
          ..add('amount', amount)
          ..add('currencyId', currencyId))
        .toString();
  }
}

class GCategorisedAmountFieldsData_amountBuilder
    implements
        Builder<GCategorisedAmountFieldsData_amount,
            GCategorisedAmountFieldsData_amountBuilder> {
  _$GCategorisedAmountFieldsData_amount? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  String? _currencyId;
  String? get currencyId => _$this._currencyId;
  set currencyId(String? currencyId) => _$this._currencyId = currencyId;

  GCategorisedAmountFieldsData_amountBuilder() {
    GCategorisedAmountFieldsData_amount._initializeBuilder(this);
  }

  GCategorisedAmountFieldsData_amountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _amount = $v.amount;
      _currencyId = $v.currencyId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCategorisedAmountFieldsData_amount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCategorisedAmountFieldsData_amount;
  }

  @override
  void update(
      void Function(GCategorisedAmountFieldsData_amountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCategorisedAmountFieldsData_amount build() => _build();

  _$GCategorisedAmountFieldsData_amount _build() {
    final _$result = _$v ??
        new _$GCategorisedAmountFieldsData_amount._(
            G__typename: BuiltValueNullFieldError.checkNotNull(G__typename,
                r'GCategorisedAmountFieldsData_amount', 'G__typename'),
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GCategorisedAmountFieldsData_amount', 'amount'),
            currencyId: BuiltValueNullFieldError.checkNotNull(currencyId,
                r'GCategorisedAmountFieldsData_amount', 'currencyId'));
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
