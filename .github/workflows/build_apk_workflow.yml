name: Release Workflow

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure Keystore
      run: |
        echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > android/app/upload-keystore.jks
        echo "storeFile=upload-keystore.jks" > android/key.properties
        echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> android/key.properties
        echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> android/key.properties
        echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> android/key.properties
      env:
        PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
        KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
        KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true

    - name: Build APK
      run: flutter build apk --release

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v2
      with:
        name: release-artifact
        path: build/app/outputs/flutter-apk/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Release Artifact
      uses: actions/download-artifact@v2
      with:
        name: release-artifact
        path: build/app/outputs/flutter-apk/
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: build/app/outputs/flutter-apk/app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v2
      with:
        name: release-artifact
        path: build/app/outputs/flutter-apk/
